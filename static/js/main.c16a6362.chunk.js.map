{"version":3,"sources":["serviceWorker.js","data/tile_data.js","data/warp_data.js","map-components.js","map-logic.js","download-helpers.js","editors/base-editor.js","utilities.js","editors/map-editor.js","editors/layout-editor.js","evaluator-components.js","editors/eval-editor.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","PLANET_TRAITS","TECH_SPECIALTIES","ANOMALIES","WORMHOLES","planet_data","system_data","WARP_DIRECTIONS","warp_configs","NORTH","SOUTHEAST","SOUTH","SOUTHWEST","NORTHEAST","NORTHWEST","getHexSizeFromScreen","innerWidth","SystemBankComponent","int_select","document","getElementById","options","selectedIndex","value","new_value","this","getSelectValue","props","setActiveSystem","systems","getSystemByID","parseInt","e","toggleExpansion","hexSize","key","system","push","id","getStringName","selected_value","system_to_display","className","active_system","format","system_format","posStyle","onClick","draggable","onDrag","event","onSelectedSystemDrag","onDragEnd","onSystemDragEnd","onDrop","onSystemDropped","eval_variables","onDragOver","preventDefault","type","checked","include_expansion_systems","onChange","handleExpansionCheckboxChange","htmlFor","handleSelectChange","disabled","selectNoSystems","React","Component","MapComponent","system_box","setState","Object","assign","updateDimensions","addEventListener","bind","removeEventListener","cw","ch","map","spaces","length","mapHeight","hexSpace","mapWidth","mapCenterH","mapCenterV","display","index","space","is_draggable","MAP_SPACE_TYPES","SYSTEM","systems_draggable","isMecatolRexSystem","home_value","HOME","home_values","toString","clickedSpace","onSystemDrag","entries","mapStyle","map_class","style","HexComponent","onDragStart","hexClass","points","svgElements","children","MapSpaceComponent","spaceOffsetV","spaceOffsetH","x","y","z","getPositionStyle","OPEN","home_text","CLOSED","WARP","warps","warp_spaces","WarpComponent","coords","warp_lines","one_warp","start_coords","get_endpoint_coords","end_coords","x1","y1","x2","y2","SYSTEM_FORMATS","SystemComponent","id_div","extras","value_div","isBlue","evaluate","wormhole","anomaly","rex_class","hex_props","ID_ONLY","STREAMLINED_WITH_NAME","planets","planet","name","PLANET_FORMATS","STREAMLINED","COLORBLIND_FRIENDLY","COLORBLIND_FRIENDLY_WITH_NAME","PlanetComponent","trait_class","trait_abbr","trait","tech_class","tech_abbr","tech_specialty","name_stuff","values","resources","influence","PLANET_EVAL_STRATEGIES","Planet","obj_data","variables","v","data","BASE_PLANET_MOD","r","RESOURCES_MULTIPLIER","i","INFLUENCE_MULTIPLIER","t","TECH_MOD","TECH_WARFARE_MOD","TECH_PROPULSION_MOD","TECH_BIOTIC_MOD","TECH_CYBERNETIC_MOD","PLANET_STRATEGY","GREATEST","to_add","AVERAGE","high_one","NONZERO_RESOURCES_MOD","NONZERO_INFLUENCE_MOD","TRAIT_CULTURAL_MOD","TRAIT_HAZARDOUS_MOD","TRAIT_INDUSTRIAL_MOD","PlanetBox","one_planet_data","one_planet","System","planet_box","planet_name","plToAdd","getPlanetByName","SINGLE_PLANET_MOD","MULTI_PLANET_MOD","MATCHING_PLANETS_MOD","NONMATCHING_PLANETS_MOD","MECATOL_REX_SYS_MOD","LEGENDARY_PLANET_SYS_MOD","DISTANCE_MOD_BASE","DISTANCE_MOD_PLANET","DISTANCE_MOD_PLANET_WORMHOLE","DISTANCE_MOD_EMPTY_WORMHOLE","DISTANCE_MOD_EMPTY","DISTANCE_MOD_ASTEROID_FIELD","DISTANCE_MOD_GRAVITY_RIFT","DISTANCE_MOD_NEBULA","DISTANCE_MOD_SUPERNOVA","isRed","name_array","join","SystemBox","one_system_data","total","splice","sysindex","getSystemIndexByID","new_system_box","one_system","systems_to_return","one_sys","getDistanceMultiplier","modded_distance","d","DISTANCE_MULTIPLIER","Map","load_default","starting_space","iterations","addAdjacentSpaces","new_map","one_space","new_space","MapSpace","system_id","getSpaceBySystemID","one_warp_dir","doesWarpDirectionConnect","warp_direction","checked_spaces","spaceItGoes","getObjFromCoord","getWarpDirectionCoordinates","areCoordsInList","oppositeDirection","directions_to_check","one_next_warp","one_direction","is_legal","map_space","getAdjacentSystems","home_total","spaces_to_get_to","shortest_distance","_getShortestModdedDistance","start_space","dest_space","finished_paths","act_paths","first_steps","getAdjacentSystemsIncludingWormholes","one_step","getDistanceModifier","getMapDistanceModifier","new_path","new_active_paths","one_path","results","_extendPath","finished","one_done","ongoing","one_ongoing","first_yet","shortest","path_length","_calculateModdedDistanceFromRaw","path","completed_paths","ongoing_paths","last_step","next_steps","path_copy","modded_dist","one_index","adj_spaces","getAdjacentSpacesIncludingWormholes","DISTANCE_MOD_ADJACENT_TO_OPPONENT","coords_to_add","adjacent_coords","getAdjacentCoordinates","one_adjacent_coords","one_coords_to_add","system_space","warp_space","adj_systems","direction_from","warps_to_follow","one_warp_direction","next_space","farther_systems","_getAdjacentSpacesThroughWarps","one_far_sys","getAdjacentSpaces","adj_coords","potential_space","potential_systems","one_system_space","wh_systems","getMatchingWormholeSpaces","one_whs","matching_spaces","list","existing_coords","JSONDownloadButton","string","downloadInfo","getDownloadInfo","filename","text","element","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","replace","toLowerCase","JSON","stringify","downloadJSON","title","JSONUploadButton","fr","FileReader","readAsText","files","onload","oFREvent","handleJSON","parse","target","result","handleUpload","jQuery","$","BaseEditor","default_layouts","ls","get","storage_key","getNewStringValue","message","setNoMessage","sendStateBeforeDeath","one_space_data","space_system","spaces_data","space_data","l_title","val","getJSONDataFromSpaces","getCurrentLayoutJSON","subject_plural","selected_item","getLayoutFromJSON","loadedTitle","new_message","subject","setMap","saved_data","dataToSave","set","setLayout","currentIndex","new_selected","split","toDel","getNewLayout","remove","syncBankSystems","compareByID","a","b","MapEditor","starting_layout","selected_bank_system","draggedSystem","option_pair_wormholes","option_include_all_wormholes","target_blue_total","bank_systems","eval_option","default_variables","balance_difference","map_string","balance_options","long_op","state_to_import","matching_options","getOptions","filter","option","matching_evals","getEvalOptions","eval_var","isComplete","getHomeValues","getBalanceDifference","getMapString","containsSystem","sort","new_check","getSelectNewMapValue","getSelectNewMapType","loadCustomLayout","loadDefault","valIndex","e_kind","e_index","e_var","eval_storage_key","substr","space_index","makeCopy","is_changed","old_space","replaced_system","isChecked","int_value","toLoad","layout_storage_key","final_string","is_first","coord_order","map_string_order","slice","one_coor","new_bank","id_list","coord_list","one_id_string","one_id","newState","isChanged","replacement_system","setTimeout","autoComplete","map_history","gotamap","_autoCompleteSteps","current_history","steps_forward","current_try_total","backwards_length","starting_length","tries","new_history","_addOneSystem","steps_forward_add","pop","newest_history","avail_sys_pool","can_add","getWormholeSystems","getOpenSpacesTotal","total_needed","b_holes","a_holes","target_ratio","getPossibleSystemTotal","current_ratio","getBlueSystemTotal","getRedSystemTotal","replacement_pool","chosen_system","Math","floor","random","avail_space_pool","chosen_space_index","new_box","isLegal","evars","getHomeValue","max","min","one_home_key","hasOwnProperty","which_option","improveBalance","Promise","resolve","eligible_system_spaces","dont_move_wormholes","dont_move_anomalies","dont_move_empty","j","shuffle","found_it","new_hv","new_diff","one_default","evals","one_saved","one_custom_l","areWarpsLogical","is_complete","opt","eval_options","auto_complete_ratios","red_total","blue_total","open_spaces","blue_avail","red_avail","s","bal_diff","getAllLayoutJSONFileInfo","deleteAll","addLayoutsFromJSON","input_title","saveCurrent","deleteCurrent","isSelectNew","getCurrentLayoutJSONFileInfo","handleFormatDisplayChange","loadMapFromString","getMessageHtml","handleIncludeWormholesChange","handlePairWormholesChange","handleTargetRatioChange","autoCompleteStart","handleEvalChange","handleBalanceOptionChange","improveBalanceStart","setActiveBankSystem","LayoutEditor","show_warps","show_wormholes","show_anomalies","setNewLayout","go_next_type","_getNextWarp","_getNextSystem","keep_going","proposed_warp","proposed_config","one_coord","eligible_systems","current_id","defaults","handleWarpChange","handleWormholeChange","handleAnomaliesChange","EVAL_ASPECTS","EvaluatorLine","null_box","nul_val","num_value","hasNullBox","onNullChange","label","m","onInputChange","helperText","EvaluatorForm","which_aspect","distance","changeHandler","reportChange","SUM","GREATEST_PLUS_TECH","reportNullChange","EvaluationEditor","default_evaluators","new_values","setValuesFull","new_eval","setValues","SCREENS","MapLabNavigator","MAP_EDITOR","map_state","layout_state","eval_state","which_screen","SYSTEM_EVALUATOR","LAYOUT_EDITOR","new_screen","screen_return","active_screen","state_to_store","storeState","INSTRUCTIONS","role","aria-label","aria-expanded","toggleClass","aria-hidden","changeScreen","ReactDOM","render","URL","process","href","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c16a6362.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const PLANET_TRAITS = {\n    \"HAZARDOUS\": 0,\n    \"INDUSTRIAL\": 1,\n    \"CULTURAL\": 2,\n};\n\nexport const TECH_SPECIALTIES = {\n    \"BIOTIC\": 0,\n    \"WARFARE\": 1,\n    \"PROPULSION\": 2,\n    \"CYBERNETIC\": 3,\n};\n\nexport const ANOMALIES = {\n    \"NEBULA\": 0,\n    \"GRAVITY_RIFT\": 1,\n    \"ASTEROID_FIELD\": 2,\n    \"SUPERNOVA\": 3,\n};\n\nexport const WORMHOLES = {\n    \"ALPHA\": 0,\n    \"BETA\": 1,\n    \"DELTA\": 2,\n};\n\nexport let planet_data = [\n    {\n        \"name\": \"Mecatol Rex\",\n        \"trait\": null,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 6,\n    },\n    {\n        \"name\": \"Abyz\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Fria\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Arinam\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Meer\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": TECH_SPECIALTIES.WARFARE,\n        \"resources\": 0,\n        \"influence\": 4,\n    },\n    {\n        \"name\": \"Arnor\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Lor\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Bereg\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Lirta IV\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Centauri\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Gral\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.PROPULSION,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Corneeq\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Resculon\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Dal Bootha\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Xxehan\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Lazar\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.CYBERNETIC,\n        \"resources\": 1,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Sakulag\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Lodor\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Mehar Xull\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": TECH_SPECIALTIES.WARFARE,\n        \"resources\": 1,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Mellon\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Zohbat\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"New Albion\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.BIOTIC,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Starpoint\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Quann\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Qucen'n\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Rarron\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Saudor\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Tar'Mann\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.BIOTIC,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Tequ'ran\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Torkan\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Thibah\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.PROPULSION,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Vefut II\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Wellon\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.CYBERNETIC,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Archon Vail\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": TECH_SPECIALTIES.PROPULSION,\n        \"resources\": 1,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Perimeter\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Ang\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.WARFARE,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Sem-Lore\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": TECH_SPECIALTIES.CYBERNETIC,\n        \"resources\": 3,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Vorhal\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": TECH_SPECIALTIES.BIOTIC,\n        \"resources\": 0,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Atlas\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Primor\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Hope's End\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Cormund\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Everra\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Accoen\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Jeol Ir\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Kraag\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Siig\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Alio Prima\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Ba'kal\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Lisis\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Velnor\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.WARFARE,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Cealdri\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": TECH_SPECIALTIES.CYBERNETIC,\n        \"resources\": 0,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Xanhact\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Vega Major\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Vega Minor\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": TECH_SPECIALTIES.PROPULSION,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Abaddon\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Ashtroth\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Loki\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Rigel I\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Rigel II\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Rigel III\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.BIOTIC,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n\n\n];\n\nexport let system_data = [\n    {\n        \"id\": 18,\n        \"planets\": [\"Mecatol Rex\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 39,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": WORMHOLES.ALPHA\n    },\n    {\n        \"id\": 43,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.SUPERNOVA,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 46,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 49,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 44,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.ASTEROID_FIELD,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 40,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": WORMHOLES.BETA\n    },\n    {\n        \"id\": 48,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 45,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.ASTEROID_FIELD,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 47,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 42,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.NEBULA,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 50,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 41,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.GRAVITY_RIFT,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 32,\n        \"planets\": [\"Dal Bootha\", \"Xxehan\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 26,\n        \"planets\": [\"Lodor\"],\n        \"anomaly\": null,\n        \"wormhole\": WORMHOLES.ALPHA\n    },\n    {\n        \"id\": 29,\n        \"planets\": [\"Qucen'n\", \"Rarron\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 38,\n        \"planets\": [\"Abyz\", \"Fria\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 22,\n        \"planets\": [\"Tar'Mann\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 21,\n        \"planets\": [\"Thibah\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 33,\n        \"planets\": [\"Corneeq\", \"Resculon\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 19,\n        \"planets\": [\"Wellon\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 28,\n        \"planets\": [\"Tequ'ran\", \"Torkan\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 24,\n        \"planets\": [\"Mehar Xull\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 37,\n        \"planets\": [\"Arinam\", \"Meer\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 30,\n        \"planets\": [\"Mellon\", \"Zohbat\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 20,\n        \"planets\": [\"Vefut II\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 27,\n        \"planets\": [\"New Albion\", \"Starpoint\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 23,\n        \"planets\": [\"Saudor\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 31,\n        \"planets\": [\"Lazar\", \"Sakulag\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 35,\n        \"planets\": [\"Bereg\", \"Lirta IV\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 34,\n        \"planets\": [\"Centauri\", \"Gral\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 36,\n        \"planets\": [\"Arnor\", \"Lor\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 25,\n        \"planets\": [\"Quann\"],\n        \"anomaly\": null,\n        \"wormhole\": WORMHOLES.BETA\n    },\n    {\n        \"id\": 59,\n        \"planets\": [\"Archon Vail\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 60,\n        \"planets\": [\"Perimeter\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 61,\n        \"planets\": [\"Ang\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 62,\n        \"planets\": [\"Sem-Lore\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 63,\n        \"planets\": [\"Vorhal\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 64,\n        \"planets\": [\"Atlas\"],\n        \"anomaly\": null,\n        \"wormhole\": WORMHOLES.BETA\n    },\n    {\n        \"id\": 65,\n        \"planets\": [\"Primor\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 66,\n        \"planets\": [\"Hope's End\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 67,\n        \"planets\": [\"Cormund\"],\n        \"anomaly\": ANOMALIES.GRAVITY_RIFT,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 68,\n        \"planets\": [\"Everra\"],\n        \"anomaly\": ANOMALIES.NEBULA,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 69,\n        \"planets\": [\"Accoen\", \"Joel Ir\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 70,\n        \"planets\": [\"Kraag\", \"Siig\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 71,\n        \"planets\": [\"Alio Prima\", \"Ba'kal\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 72,\n        \"planets\": [\"Lisis\", \"Velnor\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 73,\n        \"planets\": [\"Cealdri\", \"Xanhact\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 74,\n        \"planets\": [\"Vega Major\", \"Vega Minor\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 75,\n        \"planets\": [\"Abaddon\", \"Ashtroth\", \"Loki\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 76,\n        \"planets\": [\"Rigel I\", \"Rigel II\", \"Rigel III\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 77,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 78,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 79,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.ASTEROID_FIELD,\n        \"wormhole\": WORMHOLES.ALPHA\n    },\n    {\n        \"id\": 80,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.SUPERNOVA,\n        \"wormhole\": null\n    },\n\n\n];\n","export const WARP_DIRECTIONS = {\n    \"NORTH\": {\"x\": 0, \"y\": 1, \"z\": -1},\n    \"NORTHEAST\": {\"x\": 1, \"y\": 0, \"z\": -1},\n    \"SOUTHEAST\": {\"x\": 1, \"y\": -1, \"z\": 0},\n    \"SOUTH\": {\"x\": 0, \"y\": -1, \"z\": 1},\n    \"SOUTHWEST\": {\"x\": -1, \"y\": 0, \"z\": 1},\n    \"NORTHWEST\": {\"x\": -1, \"y\": 1, \"z\": 0},\n};\n\nexport let warp_configs = [\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTH],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTH],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.NORTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHEAST],\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTH],\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTH],\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHWEST, WARP_DIRECTIONS.NORTH],\n        [WARP_DIRECTIONS.SOUTHWEST, WARP_DIRECTIONS.NORTHEAST],\n        [WARP_DIRECTIONS.SOUTHWEST, WARP_DIRECTIONS.SOUTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.SOUTHEAST],\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.NORTHEAST],\n    ],\n];","import React from 'react';\nimport {ANOMALIES, PLANET_TRAITS, TECH_SPECIALTIES, WORMHOLES} from \"./data/tile_data\";\nimport {warp_configs, WARP_DIRECTIONS} from \"./data/warp_data\";\n\nconst hexSpace = 6;\n\nfunction getHexSizeFromScreen() {\n    if(window.innerWidth >= 1024) {\n        return 110;\n    } else if(window.innerWidth >= 769) {\n        return 80;\n    } else {\n        return 55;\n    }\n}\n\nexport class SystemBankComponent extends React.Component {\n\n    getSelectValue() {\n        let int_select = document.getElementById(\"system-bank-select\");\n        return int_select.options[int_select.selectedIndex].value;\n    }\n\n    handleSelectChange() {\n        let new_value = this.getSelectValue();\n        if(new_value === \"none\") {\n            this.props.setActiveSystem(null);\n        } else {\n            this.props.setActiveSystem(\n                this.props.systems.getSystemByID(parseInt(new_value))\n            );\n        }\n    }\n\n    handleExpansionCheckboxChange(e) {\n        this.props.toggleExpansion();\n    }\n\n    selectNoSystems() {\n        this.props.setActiveSystem(null);\n    }\n\n    render() {\n        let hexSize = getHexSizeFromScreen();\n\n        let options = [(<option value=\"none\" key=\"sys_none\">(none)</option>)];\n        for(let system of this.props.systems.systems) {\n            options.push(<option\n                value={system.id} key={\"sys_\"+system.id}\n            >{system.getStringName()}</option>)\n        }\n\n        let selected_value = \"none\";\n        let system_to_display = (<span className=\"hex-container\"></span>);\n        if(this.props.active_system!==null) {\n            selected_value = this.props.active_system.id;\n            system_to_display = (\n                <SystemComponent\n                    system={this.props.active_system}\n                    format={this.props.system_format}\n                    posStyle={{\"position\": \"relative\"}}\n                    onClick={()=>{}}\n                    hexSize={hexSize}\n                    draggable={true}\n                    onDrag={(event)=>this.props.onSelectedSystemDrag(event)}\n                    onDragEnd={(event)=>this.props.onSystemDragEnd(event)}\n                    onDrop={(event)=>this.props.onSystemDropped(event)}\n                    eval_variables={this.props.eval_variables}\n                />\n            );\n        }\n\n        return(\n                <div\n                    className=\"system-bank field\"\n                    onDragOver={(event)=>{event.preventDefault();}}\n                    onDrop={(event)=>this.props.onSystemDropped(event)}\n                >\n                    <label className=\"label\">\n                        System Bank\n                    </label>\n                    <p className=\"control\">\n                        <input\n                            id=\"include-expansion-systems\"\n                            type=\"checkbox\"\n                            checked={this.props.include_expansion_systems}\n                            onChange={(e)=>this.handleExpansionCheckboxChange(e)}\n                        />\n                        <label htmlFor=\"include-expansion-systems\"> Expansion Systems</label>\n                    </p>\n                    <p className=\"control\">\n                        <span className=\"select is-small\">\n                            <select\n                                id=\"system-bank-select\"\n                                value={selected_value}\n                                onChange={()=>this.handleSelectChange()}\n                            >\n                                {options}\n                            </select>\n                        </span>\n                    </p>\n                    <p className=\"control\">\n                        <button\n                            disabled={this.props.active_system===null}\n                            onClick={()=>this.selectNoSystems()}\n                            className=\"button is-small\"\n                        >\n                            Select None\n                        </button>\n                    </p>\n                    <div className=\"control\">\n                        {system_to_display}\n                    </div>\n                </div>\n        );\n    }\n}\n\nexport class MapComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"system_format\": this.props.system_format,\n            \"hexSize\": getHexSizeFromScreen(),\n        };\n        this.system_box = this.props.system_box;\n    }\n\n    updateDimensions() {\n        this.setState(Object.assign({}, this.state, {\"hexSize\": getHexSizeFromScreen()}));\n    }\n\n    componentDidMount() {\n        this.updateDimensions();\n        window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n    }\n\n\n    render() {\n        let hexSize = this.state.hexSize;\n        let cw = 5.5;\n        let ch = 7;\n        if(this.props.map.spaces.length>37) {\n            cw = 7;\n            ch = 9;\n        }\n        let mapHeight = hexSize*.866*ch + hexSpace*6;\n        let mapWidth = hexSize*cw + hexSpace*6;\n        let mapCenterH = mapWidth/2;\n        let mapCenterV = mapHeight/2;\n        let display=[];\n        for(let [index, space] of this.props.map.spaces.entries()) {\n            let is_draggable=false;\n            if(space.type===MAP_SPACE_TYPES.SYSTEM && this.props.systems_draggable) {\n                if(!space.system.isMecatolRexSystem()) is_draggable=true;\n            }\n            let home_value = null;\n            if(\n                space.type===MAP_SPACE_TYPES.HOME\n                &&\n                this.props.home_values !== null\n                &&\n                (this.props.home_values && index.toString() in this.props.home_values)\n            ) {\n                home_value = this.props.home_values[index.toString()];\n            }\n\n            display.push(\n                <MapSpaceComponent\n                    space={space}\n                    key={\"map_space_\"+index}\n                    system_format={this.props.system_format}\n                    onClick={()=>this.props.clickedSpace(index)}\n                    hexSize={hexSize}\n                    mapCenterH={mapCenterH}\n                    mapCenterV={mapCenterV}\n                    draggable={is_draggable}\n                    onDrag={(event)=>this.props.onSystemDrag(event, space.system)}\n                    onDragEnd={(event)=>this.props.onSystemDragEnd(event)}\n                    onDrop={(event)=>{if(this.props.systems_draggable) this.props.onSystemDropped(event, index);}}\n                    eval_variables={this.props.eval_variables}\n                    home_value={home_value}\n                />\n            );\n        }\n\n        let mapStyle = {\n            \"width\": mapWidth+\"px\",\n            \"height\": mapHeight+\"px\",\n        };\n        return (\n            <div className={\"map \"+this.props.map_class} style={mapStyle}>\n                {display}\n            </div>\n        );\n    }\n}\n\nexport const MAP_SPACE_TYPES = {\n    \"OPEN\": 1,\n    \"HOME\": 2,\n    \"SYSTEM\": 3,\n    \"CLOSED\": 4,\n    \"WARP\": 5,\n};\n\nexport class HexComponent extends React.Component {\n    onDrop(event) {\n        if(this.props.onDrop) {\n            this.props.onDrop(event);\n        }\n    }\n\n    render() {\n        let hexSize = this.props.hexSize;\n        return(\n            <div\n                className=\"hex-container\"\n                style={this.props.posStyle}\n                draggable={this.props.draggable}\n                onDragStart={(event)=>this.props.onDrag(event)}\n                onDragEnd={(event)=>this.props.onDragEnd(event)}\n            >\n                <svg className=\"shape-container\">\n                    <polygon\n                        onClick={()=>this.props.onClick()}\n                        className={\"hexagon \"+this.props.hexClass}\n                        points={\n                            (hexSize)+\", \"+(hexSize*.433)+\" \"+\n                            (hexSize*.75)+\", \"+(hexSize*.866)+\" \"+\n                            (hexSize*.25)+\", \"+(hexSize*.866)+\" \"+\n                            \"0, \"+(hexSize*.433)+\" \"+\n                            (hexSize*.25)+\", 0 \"+\n                            (hexSize*.75)+\", 0\"\n                        }\n                    >\n                    </polygon>\n                    {this.props.svgElements}\n                </svg>\n                <div\n                    className={\"hex-content \"+this.props.hexClass}\n                    onClick={()=>this.props.onClick()}\n                    onDragOver={(event)=>{event.preventDefault();}}\n                    onDrop={(event)=>this.onDrop(event)}\n                >\n                    {this.props.children}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport class MapSpaceComponent extends React.Component {\n    getPositionStyle() {\n        let hexSize = this.props.hexSize;\n        let mapCenterH = this.props.mapCenterH;\n        let mapCenterV = this.props.mapCenterV;\n        let spaceOffsetV = hexSize *.5*.866;\n        let spaceOffsetH = hexSize*.5;\n        let x = this.props.space.x;\n        let y = this.props.space.y;\n        let z = this.props.space.z;\n\n        let xhmod = x*hexSize*.75/2 + x*hexSpace*.5;\n        let xvmod = 0;\n        let yhmod = -y*hexSize*.75/2 - y*hexSpace*.5;\n        let yvmod = -y*(hexSize*.866/2) - y*(hexSpace/2);\n        let zhmod = -z*hexSize*.75/2 - z*hexSpace*.5;\n        let zvmod = z*(hexSize*.866/2) + z*(hexSpace/2);\n\n        let left = mapCenterH - spaceOffsetH + xhmod + yhmod + zhmod;\n        let top = mapCenterV - spaceOffsetV + xvmod + yvmod + zvmod;\n\n        return {\"left\": left+\"px\", \"top\": top+\"px\"};\n    }\n\n    render() {\n        let display = null;\n        let type = this.props.space.type;\n        let posStyle = this.getPositionStyle();\n        switch(type) {\n            case MAP_SPACE_TYPES.OPEN:\n                display = (\n                    <HexComponent\n                        onClick={()=>this.props.onClick()}\n                        posStyle={posStyle}\n                        hexSize={this.props.hexSize}\n                        hexClass=\"open\"\n                        onDrop={(event)=>this.props.onDrop(event)}\n                    >\n                        +\n                    </HexComponent>\n                );\n                break;\n            case MAP_SPACE_TYPES.HOME:\n                let home_text = \"H\";\n                if(this.props.home_value !== null) {\n                    home_text = this.props.home_value;\n                }\n                display = (\n                    <HexComponent\n                        onClick={()=>this.props.onClick()}\n                        posStyle={posStyle}\n                        hexSize={this.props.hexSize}\n                        hexClass=\"home\"\n                    >\n                        {home_text}\n                    </HexComponent>\n                );\n                break;\n            case MAP_SPACE_TYPES.SYSTEM:\n                display = (\n                    <SystemComponent\n                        system={this.props.space.system}\n                        format={this.props.system_format}\n                        posStyle={posStyle}\n                        onClick={()=>this.props.onClick()}\n                        hexSize={this.props.hexSize}\n                        draggable={this.props.draggable}\n                        onDrag={(event)=>this.props.onDrag(event)}\n                        onDragEnd={(event)=>this.props.onDragEnd(event)}\n                        onDrop={(event)=>this.props.onDrop(event)}\n                        eval_variables={this.props.eval_variables}\n                    />\n                );\n                break;\n            case MAP_SPACE_TYPES.CLOSED:\n                display = (\n                    <HexComponent\n                        onClick={()=>this.props.onClick()}\n                        posStyle={posStyle}\n                        hexSize={this.props.hexSize}\n                        hexClass=\"closed\"\n                    >\n                    </HexComponent>\n                );\n                break;\n            case MAP_SPACE_TYPES.WARP:\n                display = (\n                    <WarpComponent\n                        posStyle={posStyle}\n                        onClick={()=>this.props.onClick()}\n                        warps={this.props.space.warp_spaces}\n                        hexSize={this.props.hexSize}\n                    />\n                );\n                break;\n            default:\n                break;\n        }\n        return display;\n    }\n}\n\nexport class WarpComponent extends React.Component {\n    get_endpoint_coords(coords, hexSize) {\n        switch(coords) {\n            case WARP_DIRECTIONS.NORTH:\n                return {\n                    \"x\": hexSize*.5,\n                    \"y\": 0,\n                };\n            case WARP_DIRECTIONS.NORTHEAST:\n                return {\n                    \"x\": hexSize*(7/8),\n                    \"y\": .866*hexSize*(1/4),\n                };\n            case WARP_DIRECTIONS.SOUTHEAST:\n                return {\n                    \"x\": hexSize*(7/8),\n                    \"y\": .866*hexSize*(3/4),\n                };\n            case WARP_DIRECTIONS.SOUTH:\n                return {\n                    \"x\": hexSize*.5,\n                    \"y\": hexSize*.866,\n                };\n            case WARP_DIRECTIONS.SOUTHWEST:\n                return {\n                    \"x\": hexSize*(1/8),\n                    \"y\": hexSize*.866*(3/4),\n                };\n            case WARP_DIRECTIONS.NORTHWEST:\n                return {\n                    \"x\": hexSize*(1/8),\n                    \"y\": hexSize*.866*(1/4),\n                };\n            default:\n                return {\n                    \"x\": 0,\n                    \"y\": 0,\n                };\n        }\n    }\n\n\n    render() {\n        let posStyle = this.props.posStyle;\n\n        let warp_lines = [];\n        let hexSize = this.props.hexSize;\n        for(let [index, one_warp] of warp_configs[this.props.warps].entries()) {\n            let start_coords = this.get_endpoint_coords(one_warp[0], hexSize);\n            let end_coords = this.get_endpoint_coords(one_warp[1], hexSize);\n            warp_lines.push(\n                <line className=\"warp-line\"\n                    x1={start_coords.x}\n                    y1={start_coords.y}\n                    x2={end_coords.x}\n                    y2={end_coords.y}\n                    onClick={()=>this.props.onClick()}\n                    key={\"warp_line_\"+index}\n                />\n            );\n        }\n\n        return(\n            <HexComponent\n                onClick={()=>this.props.onClick()}\n                posStyle={posStyle}\n                hexSize={this.props.hexSize}\n                hexClass={\"warp\"}\n                svgElements={warp_lines}\n            >\n            </HexComponent>\n        );\n    }\n}\n\nexport const SYSTEM_FORMATS = {\n    \"STREAMLINED\": 0,\n    \"STREAMLINED_WITH_NAME\": 1,\n    \"COLORBLIND_FRIENDLY\": 2,\n    \"COLORBLIND_FRIENDLY_WITH_NAME\": 3,\n    \"ID_ONLY\": 4,\n};\n\nexport class SystemComponent extends React.Component {\n\n    render() {\n        let system = this.props.system;\n        let format = this.props.format;\n        let posStyle = this.props.posStyle;\n        let display = null;\n        let id_div = (<div className=\"id\">{system.id}</div>);\n        let extras = [];\n        let value_div = null;\n        if(this.props.eval_variables && system.isBlue()) {\n            value_div = (<div className=\"value\">={system.evaluate(this.props.eval_variables)}</div>);\n        }\n        if(system.wormhole !== null) {\n            switch(system.wormhole) {\n                case WORMHOLES.ALPHA:\n                    extras.push(<div className=\"wormhole alpha\" key=\"alpha_wh\">a</div>);\n                    break;\n                case WORMHOLES.BETA:\n                    extras.push(<div className=\"wormhole beta\" key=\"alpha_wh\">b</div>);\n                    break;\n                default: break;\n            }\n        }\n        if(system.anomaly !== null) {\n            switch(system.anomaly) {\n                case ANOMALIES.SUPERNOVA:\n                    extras.push(<div className=\"supernova\" key=\"supernova\"></div>);\n                    break;\n                case ANOMALIES.GRAVITY_RIFT:\n                    extras.push(<div className=\"gravity-rift\" key=\"gravity-rift\"></div>);\n                    break;\n                case ANOMALIES.NEBULA:\n                    extras.push(<div className=\"nebula\" key=\"nebula\"></div>);\n                    break;\n                case ANOMALIES.ASTEROID_FIELD:\n                    extras.push(\n                        <div className=\"asteroid-field\" key=\"asteroid-field\">\n                            <div className=\"asteroid a\"></div>\n                            <div className=\"asteroid b\"></div>\n                            <div className=\"asteroid c\"></div>\n                            <div className=\"asteroid d\"></div>\n                            <div className=\"asteroid e\"></div>\n                        </div>\n                    );\n                    break;\n                default:\n                    break;\n            }\n        }\n        let rex_class = \"\";\n        if(system.isMecatolRexSystem()) rex_class = \"rex\";\n        let hex_props = {\n            onClick:()=>this.props.onClick(),\n            posStyle:posStyle,\n            hexSize:this.props.hexSize,\n            hexClass:rex_class,\n            draggable:this.props.draggable,\n            onDrag:(event)=>this.props.onDrag(event),\n            onDragEnd:(event)=>this.props.onDragEnd(event),\n            onDrop:(event)=>this.props.onDrop(event),\n        };\n\n        switch(format) {\n            case SYSTEM_FORMATS.ID_ONLY:\n                display = (\n                    <HexComponent {...hex_props} >\n                        <span className=\"id-alone\">\n                            {system.id}\n                        </span>\n                    </HexComponent>\n                );\n                break;\n            case SYSTEM_FORMATS.STREAMLINED_WITH_NAME:\n                display = (\n                    <HexComponent {...hex_props} >\n                        {id_div}\n                        {value_div}\n                        {system.planets.map(function(planet, index) {\n                            return(\n                                <PlanetComponent\n                                    planet={planet}\n                                    key={planet.name}\n                                    format={PLANET_FORMATS.STREAMLINED_WITH_NAME}\n                                />\n                            )\n                        }, this)}\n                        {extras}\n                    </HexComponent>\n                );\n                break;\n            case SYSTEM_FORMATS.STREAMLINED:\n                display = (\n                    <HexComponent {...hex_props} >\n                        {id_div}\n                        {value_div}\n                        {system.planets.map(function(planet, index) {\n                            return(\n                                <PlanetComponent\n                                    planet={planet}\n                                    key={planet.name}\n                                    format={PLANET_FORMATS.STREAMLINED}\n                                />\n                            )\n                        }, this)}\n                        {extras}\n                    </HexComponent>\n                );\n                break;\n            case SYSTEM_FORMATS.COLORBLIND_FRIENDLY:\n                display = (\n                    <HexComponent {...hex_props} >\n                        {id_div}\n                        {value_div}\n                        {system.planets.map(function(planet, index) {\n                            return(\n                                <PlanetComponent\n                                    planet={planet}\n                                    key={planet.name}\n                                    format={PLANET_FORMATS.COLORBLIND_FRIENDLY}\n                                />\n                            )\n                        }, this)}\n                    </HexComponent>\n                );\n                break;\n            case SYSTEM_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME:\n                display = (\n                    <HexComponent {...hex_props} >\n                        {id_div}\n                        {value_div}\n                        {system.planets.map(function(planet, index) {\n                            return(\n                                <PlanetComponent\n                                    planet={planet}\n                                    key={planet.name}\n                                    format={PLANET_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME}\n                                />\n                            )\n                        }, this)}\n                    </HexComponent>\n                );\n                break;\n            default:\n                break;\n        }\n        return display;\n    }\n}\n\nexport const PLANET_FORMATS = {\n    \"STREAMLINED\": 0,\n    \"STREAMLINED_WITH_NAME\": 1,\n    \"COLORBLIND_FRIENDLY\": 2,\n    \"COLORBLIND_FRIENDLY_WITH_NAME\": 3,\n};\n\nexport class PlanetComponent extends React.Component {\n\n    render() {\n        let planet = this.props.planet;\n        let format = this.props.format;\n        let trait_class = \"\";\n        let trait_abbr = \"\";\n        switch(planet.trait) {\n            case PLANET_TRAITS.INDUSTRIAL:\n                trait_class = \"industrial\";\n                trait_abbr = \"I\";\n                break;\n            case PLANET_TRAITS.HAZARDOUS:\n                trait_class = \"hazardous\";\n                trait_abbr = \"H\";\n                break;\n            case PLANET_TRAITS.CULTURAL:\n                trait_class=\"cultural\";\n                trait_abbr = \"C\";\n                break;\n            default:\n                break;\n        }\n        let tech_class = \"\";\n        let tech_abbr = \"\";\n        switch(planet.tech_specialty) {\n            case TECH_SPECIALTIES.CYBERNETIC:\n                tech_class = \"cybernetic\";\n                tech_abbr = \"Y\";\n                break;\n            case TECH_SPECIALTIES.PROPULSION:\n                tech_class = \"propulsion\";\n                tech_abbr = \"B\";\n                break;\n            case TECH_SPECIALTIES.BIOTIC:\n                tech_class = \"biotic\";\n                tech_abbr = \"G\";\n                break;\n            case TECH_SPECIALTIES.WARFARE:\n                tech_class = \"warfare\";\n                tech_abbr = \"R\";\n                break;\n            default:\n                break;\n        }\n        let name_stuff = null;\n        if(\n            format===PLANET_FORMATS.STREAMLINED_WITH_NAME\n            || format===PLANET_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME\n        ) {\n            name_stuff=(<span className=\"name\">{ planet.name }</span>);\n        }\n        let values = (\n            <div className=\"value_container\">\n                <span className=\"resources\">{ planet.resources }</span>\n                <span className=\"influence\">{ planet.influence }</span>\n            </div>);\n        if(\n            format===PLANET_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME\n            || format===PLANET_FORMATS.COLORBLIND_FRIENDLY\n        ) {\n            values = (\n                <div className=\"value_container\">\n                    <span className={\"tech \"+tech_class}>{tech_abbr}</span>\n                    <span className=\"resources\">{ planet.resources }</span>\n                    <span className=\"influence\">{ planet.influence }</span>\n                    <span className={\"trait \"+trait_class}>{trait_abbr}</span>\n                </div>\n            )\n        }\n        return (\n            <div className={\"planet \"+trait_class+\" \"+tech_class}>\n                {values}\n                {name_stuff}\n            </div>\n        );\n    }\n}\n","import {MAP_SPACE_TYPES} from \"./map-components\";\nimport {warp_configs} from \"./data/warp_data\";\nimport {ANOMALIES, PLANET_TRAITS, TECH_SPECIALTIES, WORMHOLES} from \"./data/tile_data\";\n\nexport const PLANET_EVAL_STRATEGIES = {\n    \"SUM\": 1,\n    \"GREATEST\": 2,\n    \"GREATEST_PLUS_TECH\": 3,\n};\n\nexport class Planet {\n    constructor(obj_data) {\n        this.trait = obj_data.trait;\n        this.tech_specialty = obj_data.tech_specialty;\n        this.resources = obj_data.resources;\n        this.influence = obj_data.influence;\n        this.name = obj_data.name;\n    }\n\n    evaluate(variables) {\n        let v = variables.data;\n        let value = v.BASE_PLANET_MOD;\n        let r = this.resources*v.RESOURCES_MULTIPLIER,\n            i = this.influence*v.INFLUENCE_MULTIPLIER;\n        let t = 0;\n        if(this.tech_specialty!==null) {\n            t+=v.TECH_MOD;\n            switch(this.tech_specialty) {\n                case TECH_SPECIALTIES.WARFARE:\n                    t+=v.TECH_WARFARE_MOD;\n                    break;\n                case TECH_SPECIALTIES.PROPULSION:\n                    t+=v.TECH_PROPULSION_MOD;\n                    break;\n                case TECH_SPECIALTIES.BIOTIC:\n                    t+=v.TECH_BIOTIC_MOD;\n                    break;\n                case TECH_SPECIALTIES.CYBERNETIC:\n                    t+=v.TECH_CYBERNETIC_MOD;\n                    break;\n                default:\n                    break;\n            }\n        }\n        switch(v.PLANET_STRATEGY) {\n            case PLANET_EVAL_STRATEGIES.GREATEST:\n                let to_add = r;\n                if(i>to_add) to_add = i;\n                if(t>to_add) to_add = t;\n                value += to_add;\n                break;\n            case PLANET_EVAL_STRATEGIES.AVERAGE:\n                value += (r+i+t)/3;\n                break;\n            default:\n                let high_one = r;\n                if(i>high_one) high_one = i;\n                value += high_one+t;\n                break;\n        }\n        if(r>0) value+= v.NONZERO_RESOURCES_MOD;\n        if(i>0) value+= v.NONZERO_INFLUENCE_MOD;\n        switch(this.trait) {\n            case PLANET_TRAITS.CULTURAL:\n                value+=v.TRAIT_CULTURAL_MOD;\n                break;\n            case PLANET_TRAITS.HAZARDOUS:\n                value+=v.TRAIT_HAZARDOUS_MOD;\n                break;\n            case PLANET_TRAITS.INDUSTRIAL:\n                value+=v.TRAIT_INDUSTRIAL_MOD;\n                break;\n            default:\n                break;\n        }\n        return value;\n    }\n}\n\nexport class PlanetBox {\n    constructor(planet_data) {\n        this.planets = [];\n        for(let one_planet_data of planet_data) {\n            this.planets.push(new Planet(one_planet_data));\n        }\n    }\n\n    getPlanetByName(name) {\n        for(let one_planet of this.planets) {\n            if (one_planet.name === name) {\n                return one_planet;\n            }\n        }\n        return null;\n    }\n}\n\nexport class System {\n    constructor(obj_data, planet_box) {\n        this.id = obj_data.id;\n        this.anomaly = obj_data.anomaly;\n        this.wormhole = obj_data.wormhole;\n        this.planets = [];\n        for(let planet_name of obj_data.planets) {\n            let plToAdd = planet_box.getPlanetByName(planet_name);\n            if(plToAdd) this.planets.push(plToAdd);\n        }\n    }\n\n    evaluate(variables) {\n        let v = variables.data;\n        let value=0;\n        for(let one_planet of this.planets) {\n            value+=one_planet.evaluate(variables);\n        }\n        if(this.planets.length===1) {\n            value+=v.SINGLE_PLANET_MOD;\n        } else if(this.planets.length>1) {\n            value+=v.MULTI_PLANET_MOD;\n            if(this.planets[0].trait === this.planets[1].trait) {\n                value+=v.MATCHING_PLANETS_MOD;\n            } else {\n                value+=v.NONMATCHING_PLANETS_MOD;\n            }\n        }\n        if(this.isMecatolRexSystem()) {\n            value+=v.MECATOL_REX_SYS_MOD;\n        }\n        if(this.id === 65 || this.id === 66) {\n            let legendary_mod = v.LEGENDARY_PLANET_SYS_MOD || 0;\n            value+=legendary_mod;\n        }\n        return value;\n    }\n\n    getDistanceModifier(variables = {}) {\n        let v = variables.data;\n        let value = v.DISTANCE_MOD_BASE;\n        if(this.isBlue()) {\n            if(v.DISTANCE_MOD_PLANET===false) return false;\n            value+=v.DISTANCE_MOD_PLANET;\n            if(this.wormhole!==null) {\n                if(v.DISTANCE_MOD_PLANET_WORMHOLE===false) return false;\n                value+=v.DISTANCE_MOD_PLANET_WORMHOLE;\n            }\n        } else if(this.anomaly===null) {\n            if(this.wormhole!==null) {\n                if(v.DISTANCE_MOD_EMPTY_WORMHOLE===false) return false;\n                value+=v.DISTANCE_MOD_EMPTY_WORMHOLE;\n            } else {\n                if(v.DISTANCE_MOD_EMPTY===false) return false;\n                value+=v.DISTANCE_MOD_EMPTY;\n            }\n        } else {\n            switch(this.anomaly) {\n                case ANOMALIES.ASTEROID_FIELD:\n                    if(v.DISTANCE_MOD_ASTEROID_FIELD===false) return false;\n                    value+=v.DISTANCE_MOD_ASTEROID_FIELD;\n                    break;\n                case ANOMALIES.GRAVITY_RIFT:\n                    if(v.DISTANCE_MOD_GRAVITY_RIFT===false) return false;\n                    value+=v.DISTANCE_MOD_GRAVITY_RIFT;\n                    break;\n                case ANOMALIES.NEBULA:\n                    if(v.DISTANCE_MOD_NEBULA===false) return false;\n                    value+=v.DISTANCE_MOD_NEBULA;\n                    break;\n                case ANOMALIES.SUPERNOVA:\n                    if(v.DISTANCE_MOD_SUPERNOVA===false) return false;\n                    value+=v.DISTANCE_MOD_SUPERNOVA;\n                    break;\n                default:\n                    return false;\n            }\n        }\n        return value;\n    }\n\n    isMecatolRexSystem() {\n        for(let planet of this.planets) {\n            if (planet.name === \"Mecatol Rex\") return true;\n        }\n        return false;\n    }\n\n    isRed() {\n        if(this.planets.length<1) return true;\n        return false;\n    }\n\n    isBlue() {\n        return !this.isRed();\n    }\n\n    getStringName() {\n        let system = this;\n        let name_array = [];\n        for(let planet of system.planets) {\n            name_array.push(planet.name+\" (\"+planet.resources+\"/\"+planet.influence+\")\");\n        }\n        if(system.wormhole !== null) {\n            switch(system.wormhole) {\n                case WORMHOLES.ALPHA:\n                    name_array.push(\"(a)\");\n                    break;\n                case WORMHOLES.BETA:\n                    name_array.push(\"(b)\");\n                    break;\n                default: break;\n            }\n        }\n        if(system.anomaly !== null) {\n            switch(system.anomaly) {\n                case ANOMALIES.SUPERNOVA:\n                    name_array.push(\"Supernova\");\n                    break;\n                case ANOMALIES.GRAVITY_RIFT:\n                    name_array.push(\"Gravity Rift\");\n                    break;\n                case ANOMALIES.NEBULA:\n                    name_array.push(\"Nebula\");\n                    break;\n                case ANOMALIES.ASTEROID_FIELD:\n                    name_array.push(\"Asteroid Field\");\n                    break;\n                default:\n                    break;\n            }\n        }\n        if(name_array.length===0) name_array.push(\"Empty Space\");\n        return system.id+\": \"+name_array.join(\", \");\n    }\n}\n\nexport class SystemBox {\n    constructor(system_data, planet_box) {\n        this.systems = [];\n        this.planet_box = planet_box;\n        for(let one_system_data of system_data) {\n            this.systems.push(new System(one_system_data, planet_box));\n        }\n    }\n\n    getBlueSystemTotal() {\n        let total = 0;\n        for(let system of this.systems) {\n            if(system.isBlue()) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    getRedSystemTotal() {\n        let total = 0;\n        for(let system of this.systems) {\n            if(system.isRed()) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    getSystemIndexByID(id) {\n        for(let [index, system] of this.systems.entries()) {\n            if(system.id === id) return index;\n        }\n        return null;\n    }\n\n    getSystemByID(id, splice=false) {\n        let sysindex = this.getSystemIndexByID(id);\n        if (sysindex!==null && splice) return this.systems.splice(sysindex, 1);\n        if (sysindex!==null) return this.systems[sysindex];\n        return null;\n    }\n\n    makeCopy() {\n        let new_system_box = new SystemBox([], this.planet_box);\n        for(let one_system of this.systems) {\n            new_system_box.systems.push(one_system);\n        }\n        return new_system_box;\n    }\n\n    getWormholeSystems(type=null) {\n        let systems_to_return = [];\n        for(let one_sys of this.systems) {\n            if(\n                one_sys.wormhole!==null\n                &&\n                (\n                    type===null\n                    ||\n                    one_sys.wormhole===type\n                )\n            ) {\n                systems_to_return.push(one_sys);\n            }\n        }\n        return systems_to_return;\n    }\n}\n\nexport function getDistanceMultiplier(modded_distance, variables) {\n    let v = variables.data;\n    let d = modded_distance;\n    if(d<0) d = 0;\n    if(d>10) d = 10;\n    return v.DISTANCE_MULTIPLIER[d];\n}\n\nexport class Map {\n    constructor(load_default=true, starting_space=null, iterations=3) {\n        if(load_default) {\n            this.spaces = [starting_space];\n            for(let i=0; i<iterations; i++) {\n                this.addAdjacentSpaces();\n            }\n        } else {\n            this.spaces = [];\n        }\n    }\n\n    makeCopy() {\n        let new_map = new Map(false);\n        for(let one_space of this.spaces) {\n            let new_space = new MapSpace(\n                one_space.x,\n                one_space.y,\n                one_space.z,\n                one_space.warp_spaces,\n                one_space.type,\n                one_space.system,\n            );\n            new_map.spaces.push(new_space);\n        }\n        return new_map;\n    }\n\n    containsSystem(system_id) {\n        return (this.getSpaceBySystemID(system_id) !== null);\n    }\n\n    getSpaceBySystemID(id) {\n        for(let one_space of this.spaces) {\n            if(\n                one_space.system!==null\n                && one_space.system.id===id\n            ) return one_space;\n        }\n        return null;\n    }\n\n    getOpenSpacesTotal() {\n        let total = 0;\n        for(let space of this.spaces) {\n            if(space.type===MAP_SPACE_TYPES.OPEN) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    getBlueSystemTotal() {\n        let total = 0;\n        for(let space of this.spaces) {\n            if(space.type===MAP_SPACE_TYPES.SYSTEM && space.system.isBlue()) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    getRedSystemTotal() {\n        let total = 0;\n        for(let space of this.spaces) {\n            if(space.type===MAP_SPACE_TYPES.SYSTEM && space.system.isRed()) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    getPossibleSystemTotal() {\n        let total = 0;\n        for(let space of this.spaces) {\n            if(\n                space.type===MAP_SPACE_TYPES.SYSTEM\n                || space.type===MAP_SPACE_TYPES.OPEN\n            ) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n   areWarpsLogical() {\n        for(let space of this.spaces) {\n            if (space.type === MAP_SPACE_TYPES.WARP) {\n                for(let one_warp of warp_configs[space.warp_spaces]) {\n                    for(let one_warp_dir of one_warp) {\n                        if(!this.doesWarpDirectionConnect(one_warp_dir, space, [space])) {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    doesWarpDirectionConnect(warp_direction, space, checked_spaces) {\n        let whereItGoes = space.getWarpDirectionCoordinates(warp_direction);\n        let spaceItGoes = getObjFromCoord(whereItGoes, this.spaces);\n        if(!spaceItGoes) return false;\n        if(areCoordsInList(spaceItGoes, checked_spaces)) return false;\n        if(spaceItGoes.type === MAP_SPACE_TYPES.CLOSED) return false;\n        if(spaceItGoes.type === MAP_SPACE_TYPES.WARP) {\n            let oppositeDirection = {\n                \"x\": warp_direction.x*-1,\n                \"y\": warp_direction.y*-1,\n                \"z\": warp_direction.z*-1,\n            };\n            let directions_to_check = [];\n            for(let one_next_warp of warp_configs[spaceItGoes.warp_spaces]) {\n                if(areCoordsInList(oppositeDirection, [one_next_warp[0]])) {\n                    directions_to_check.push(one_next_warp[1]);\n                } else if(areCoordsInList(oppositeDirection, [one_next_warp[1]])) {\n                    directions_to_check.push(one_next_warp[0]);\n                }\n            }\n            if(directions_to_check.length === 0) return false;\n            checked_spaces.push(spaceItGoes);\n            for(let one_direction of directions_to_check) {\n                if(!this.doesWarpDirectionConnect(one_direction, spaceItGoes, checked_spaces)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    isComplete() {\n        for(let map_space of this.spaces) {\n            if(map_space.type===MAP_SPACE_TYPES.OPEN) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    isLegal() {\n        let is_legal = true;\n        for(let map_space of this.spaces) {\n            if(map_space.type===MAP_SPACE_TYPES.SYSTEM && map_space.system.wormhole !== null) {\n                for(let one_sys of this.getAdjacentSystems(map_space)) {\n                    if(one_sys.type===MAP_SPACE_TYPES.SYSTEM && one_sys.system.wormhole===map_space.system.wormhole) {\n                        is_legal = false;\n                        break;\n                    }\n                }\n            }\n            if(map_space.type===MAP_SPACE_TYPES.SYSTEM && map_space.system.anomaly !== null) {\n                for(let one_sys of this.getAdjacentSystems(map_space)) {\n                    if(one_sys.type===MAP_SPACE_TYPES.SYSTEM && one_sys.system.anomaly!==null) {\n                        is_legal = false;\n                        break;\n                    }\n                }\n            }\n            if(!is_legal) break;\n        }\n        return is_legal;\n    }\n\n    getHomeValue(space, variables) {\n        let home_total = 0;\n        let spaces_to_get_to = [];\n        for(let one_space of this.spaces) {\n            if(\n                one_space.type===MAP_SPACE_TYPES.SYSTEM &&\n                one_space.system.evaluate(variables) > 0\n            ) {\n                spaces_to_get_to.push(one_space);\n            }\n        }\n        for(let one_space of spaces_to_get_to) {\n            let shortest_distance = this._getShortestModdedDistance(\n                space, one_space, variables\n            );\n            if(!(shortest_distance===null)) {\n                home_total+=getDistanceMultiplier(\n                    shortest_distance, variables\n                )*one_space.system.evaluate(variables);\n            }\n        }\n        return home_total;\n    }\n\n    _getShortestModdedDistance(start_space, dest_space, variables) {\n        let finished_paths = [];\n        let act_paths = [];\n\n        let first_steps = this.getAdjacentSystemsIncludingWormholes(start_space);\n        for(let one_step of first_steps) {\n            if(\n                one_step.system.getDistanceModifier(variables)!==false\n                && this.getMapDistanceModifier(start_space, dest_space, variables)!==false\n            ) {\n                let new_path = [one_step.system.id];\n                if(one_step.system.id===dest_space.system.id) {\n                    finished_paths.push(new_path);\n                } else {\n                    act_paths.push(new_path);\n                }\n            }\n        }\n        while(act_paths.length>0) {\n            let new_active_paths = [];\n            for(let one_path of act_paths) {\n                let results = this._extendPath(start_space, dest_space, one_path, variables);\n                for(let one_done of results.finished) {\n                    finished_paths.push(one_done);\n                }\n                for(let one_ongoing of results.ongoing) {\n                    new_active_paths.push(one_ongoing);\n                }\n            }\n            act_paths=new_active_paths;\n        }\n        let first_yet = false;\n        let shortest = null;\n        for(let one_path of finished_paths) {\n            let path_length = this._calculateModdedDistanceFromRaw(one_path, variables, start_space);\n            if(!first_yet || path_length<shortest) {\n                shortest = path_length;\n                first_yet = true;\n            }\n        }\n        return shortest;\n    }\n\n    _extendPath(start_space, dest_space, path, variables) {\n        let completed_paths = [];\n        let ongoing_paths = [];\n        let last_step = this.getSpaceBySystemID(path[path.length-1]);\n        let next_steps = this.getAdjacentSystemsIncludingWormholes(last_step);\n        for(let one_step of next_steps) {\n            if(one_step.system.id===dest_space.system.id) {\n                let path_copy = [...path];\n                path_copy.push(one_step.system.id);\n                completed_paths.push(path_copy);\n            } else if (\n                !(one_step.system.id in path)\n                && one_step.system.getDistanceModifier(variables)!==false\n                && this.getMapDistanceModifier(start_space, dest_space, variables)!==false\n                && path.length<4\n            ) {\n                let path_copy = [...path];\n                path_copy.push(one_step.system.id);\n                ongoing_paths.push(path_copy);\n            }\n        }\n        return({\n            \"finished\": completed_paths,\n            \"ongoing\": ongoing_paths,\n        });\n    }\n\n\n    _calculateModdedDistanceFromRaw(path, variables, start_space) {\n        let modded_dist = 0;\n        for(let one_index of path) {\n            let one_sys = this.getSpaceBySystemID(one_index);\n            modded_dist+=\n                one_sys.system.getDistanceModifier(variables)\n                +this.getMapDistanceModifier(start_space, one_sys, variables);\n        }\n        return modded_dist;\n    }\n\n    getMapDistanceModifier(start_space, dest_space, variables) {\n        let adj_spaces = this.getAdjacentSpacesIncludingWormholes(dest_space);\n        for(let one_space of adj_spaces) {\n            if(\n                one_space.type===MAP_SPACE_TYPES.HOME &&\n                !areCoordsInList(start_space, [one_space]\n                )\n            ) {\n                return variables.data.DISTANCE_MOD_ADJACENT_TO_OPPONENT;\n            }\n        }\n        return 0;\n    }\n\n\n\n    addAdjacentSpaces() {\n        let coords_to_add = [];\n        for(let map_space of this.spaces) {\n            let adjacent_coords = map_space.getAdjacentCoordinates();\n            for(let one_adjacent_coords of adjacent_coords) {\n                if(\n                    !areCoordsInList(one_adjacent_coords, coords_to_add) &&\n                    !areCoordsInList(one_adjacent_coords, this.spaces)\n                ) {\n                    coords_to_add.push(one_adjacent_coords);\n                }\n            }\n        }\n        for(let one_coords_to_add of coords_to_add) {\n            this.spaces.push(new MapSpace(\n                one_coords_to_add.x,\n                one_coords_to_add.y,\n                one_coords_to_add.z,\n            ));\n        }\n    }\n\n    _getAdjacentSpacesThroughWarps(system_space, warp_space) {\n        let adj_systems = [];\n        let direction_from = {\n            \"x\": system_space.x - warp_space.x,\n            \"y\": system_space.y - warp_space.y,\n            \"z\": system_space.z - warp_space.z,\n        };\n        let warps_to_follow = [];\n        for(let one_warp of warp_configs[warp_space.warp_spaces]) {\n            if(areCoordsInList(direction_from, one_warp)) {\n                warps_to_follow.push(one_warp);\n            }\n        }\n        for(let one_warp of warps_to_follow) {\n            for(let one_warp_direction of one_warp) {\n                if(!areCoordsInList(one_warp_direction, [direction_from])) {\n                    let next_space = getObjFromCoord(\n                        warp_space.getWarpDirectionCoordinates(one_warp_direction),\n                        this.spaces\n                    );\n                    if(next_space!==null) {\n                        if(next_space.type!==MAP_SPACE_TYPES.WARP) {\n                            if (!areCoordsInList(next_space, adj_systems)) {\n                                adj_systems.push(next_space);\n                            }\n                        } else {\n                            let farther_systems = this._getAdjacentSpacesThroughWarps(warp_space, next_space);\n                            for(let one_far_sys of farther_systems) {\n                                if(!areCoordsInList(one_far_sys, adj_systems)) {\n                                    adj_systems.push(one_far_sys);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return adj_systems;\n    }\n\n    getAdjacentSystems(space) {\n        let adj_spaces = this.getAdjacentSpaces(space);\n        let adj_systems = [];\n        for(let one_space of adj_spaces) {\n            if(one_space.type===MAP_SPACE_TYPES.SYSTEM){\n                adj_systems.push(one_space);\n            }\n        }\n        return adj_systems;\n    }\n\n    getAdjacentSpaces(space) {\n        let adj_coords = space.getAdjacentCoordinates();\n        let adj_systems = [];\n        for(let one_coord of adj_coords) {\n            let potential_space = getObjFromCoord(one_coord, this.spaces);\n            if(potential_space !== null) {\n                if(potential_space.type!==MAP_SPACE_TYPES.WARP){\n                    if(!areCoordsInList(potential_space, adj_systems)) {\n                        adj_systems.push(potential_space);\n                    }\n                } else {\n                    let potential_systems = this._getAdjacentSpacesThroughWarps(space, potential_space);\n                    for(let one_system_space of potential_systems) {\n                        if(!areCoordsInList(one_system_space, adj_systems)) {\n                            adj_systems.push(one_system_space);\n                        }\n                    }\n                }\n            }\n        }\n        return adj_systems;\n    }\n\n    getAdjacentSystemsIncludingWormholes(space) {\n        let adj_spaces = this.getAdjacentSpacesIncludingWormholes(space);\n        let adj_systems = [];\n        for(let one_space of adj_spaces) {\n            if(one_space.type===MAP_SPACE_TYPES.SYSTEM) {\n                adj_systems.push(one_space);\n            }\n        }\n        return adj_systems;\n    }\n\n    getAdjacentSpacesIncludingWormholes(space) {\n        let adj_systems = this.getAdjacentSpaces(space);\n        let wh_systems = this.getMatchingWormholeSpaces(space);\n        for(let one_whs of wh_systems) {\n            if(!areCoordsInList(one_whs, adj_systems)) {\n                adj_systems.push(one_whs);\n            }\n        }\n        return adj_systems;\n    }\n\n    getMatchingWormholeSpaces(space) {\n        let matching_spaces = [];\n        if(space.type===MAP_SPACE_TYPES.SYSTEM && space.system.wormhole!==null) {\n            for(let one_space of this.spaces) {\n                if(\n                    one_space.type===MAP_SPACE_TYPES.SYSTEM &&\n                    one_space.system.wormhole===space.system.wormhole &&\n                    one_space.system.id !== space.system.id\n                ) {\n                    matching_spaces.push(one_space);\n                }\n            }\n        }\n        return matching_spaces;\n    }\n\n}\n\nexport function getObjFromCoord(coords, list) {\n        for(let existing_coords of list) {\n        if(\n            coords.x === existing_coords.x &&\n            coords.y === existing_coords.y &&\n            coords.z === existing_coords.z\n        ) {\n            return existing_coords;\n        }\n    }\n    return null;\n}\n\nexport function areCoordsInList(coords, list) {\n    if(getObjFromCoord(coords, list)) {\n        return true;\n    }\n    return false;\n}\n\nexport class MapSpace {\n    constructor(x, y, z, warp_spaces=null, type=MAP_SPACE_TYPES.OPEN, system=null) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.warp_spaces = warp_spaces;\n        this.type = type;\n        this.system = system;\n    }\n\n    getAdjacentCoordinates() {\n        let x = this.x;\n        let y = this.y;\n        let z = this.z;\n        return [\n            {\"x\":x+1,\"y\":y-1,\"z\":z},\n            {\"x\":x+1,\"y\":y,\"z\":z-1},\n            {\"x\":x-1,\"y\":y+1,\"z\":z},\n            {\"x\":x,\"y\":y+1,\"z\":z-1},\n            {\"x\":x-1,\"y\":y,\"z\":z+1},\n            {\"x\":x,\"y\":y-1,\"z\":z+1},\n        ];\n    }\n\n    getWarpDirectionCoordinates(warp_direction) {\n        return {\n            \"x\": this.x+warp_direction.x,\n            \"y\": this.y+warp_direction.y,\n            \"z\": this.z+warp_direction.z,\n        }\n    }\n}\n","import React from 'react';\n\nexport function download(filename, text) {\n  let element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport function getSafeFileName(string) {\n    return string.replace(/[^a-z0-9]/gi, '_').toLowerCase();\n}\n\nexport class JSONDownloadButton extends React.Component {\n    downloadJSON() {\n        let downloadInfo = this.props.getDownloadInfo();\n        download(getSafeFileName(downloadInfo.filename)+\".json\", JSON.stringify(downloadInfo.data));\n    }\n\n    render() {\n        return(\n            <button onClick={()=>this.downloadJSON()} className={this.props.className}>\n                {this.props.title}\n            </button>\n        );\n    }\n}\n\nexport class JSONUploadButton extends React.Component {\n    handleUpload() {\n        let fr = new FileReader();\n        fr.readAsText(document.getElementById(this.props.id).files[0]);\n        fr.onload = function(oFREvent) {\n            this.props.handleJSON(JSON.parse(oFREvent.target.result));\n            document.getElementById(this.props.id)\n        }.bind(this);\n    }\n\n    render() {\n        return(\n            <span className=\"control\">\n                <span className=\"file is-small\">\n                    <label className=\"file-label\">\n                        <input\n                            type=\"file\"\n                            id={this.props.id}\n                            className=\"file-input\"\n                            onChange={()=>this.handleUpload()}\n                        />\n                        <span className=\"file-cta\">\n                            <span className=\"file-icon\">\n                                <i className=\"fas fa-upload\"></i>\n                            </span>\n                            <span className=\"file-label\">\n                                Choose a file...\n                            </span>\n                        </span>\n                    </label>\n                </span>\n            </span>\n        )\n    }\n}","import React from 'react';\nimport $ from 'jquery';\nimport ls from \"local-storage\";\n\nimport {\n    planet_data,\n    system_data,\n} from '../data/tile_data.js';\nimport default_layouts from '../data/default_layouts.json';\n\nimport {\n    Map,\n    MapSpace,\n    SystemBox,\n    PlanetBox,\n    System,\n} from \"../map-logic\";\n\nwindow.jQuery = $;\n\nexport class BaseEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.planet_box = new PlanetBox(planet_data);\n        this.system_box = new SystemBox(system_data, this.planet_box);\n        this.default_layouts = default_layouts;\n\n        this.state = {\n            \"map\": null,\n            \"message\": \"\",\n            \"input_title\": \"\",\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n            \"selected_item\": this.getNewStringValue(),\n        };\n    }\n\n    getMessageHtml() {\n        let message = null;\n        if(this.state.message !== null && this.state.message!==\"\") {\n            message = (\n                <div className=\"block content for-message\">\n                      <blockquote>{this.state.message}</blockquote>\n                    <div\n                        className=\"close-button\"\n                        onClick={()=>this.setNoMessage()}\n                    >\n                        <i className=\"fa fa-window-close fa-2x\"></i>\n                    </div>\n                </div>\n            );\n        }\n        return message;\n    }\n\n    setNoMessage() {\n        this.setState({\"message\": null});\n    }\n\n    componentWillUnmount() {\n        this.props.sendStateBeforeDeath(this.state);\n    }\n\n    setMap(new_map) {\n        this.setState({\"map\": new_map});\n    }\n\n    getLayoutFromJSON(data) {\n        let new_map = new Map(false);\n        for(let one_space_data of data) {\n            let space_system = null;\n            if(one_space_data.system!==null) {\n                space_system = new System(one_space_data.system, this.planet_box);\n            }\n            new_map.spaces.push(new MapSpace(\n                one_space_data.x,\n                one_space_data.y,\n                one_space_data.z,\n                one_space_data.warp_spaces,\n                one_space_data.type,\n                space_system,\n            ));\n        }\n        return new_map;\n    }\n\n    getJSONDataFromSpaces(spaces) {\n        let spaces_data = [];\n        for(let one_space of spaces) {\n            let space_data = Object.assign({}, one_space, {\"system\": null});\n            if(one_space.system !== null) {\n                let system_data = Object.assign({}, one_space.system, {\"planets\":[]});\n                for(let one_planet of one_space.system.planets) {\n                    system_data.planets.push(one_planet.name);\n                }\n                space_data.system = system_data;\n            }\n            spaces_data.push(space_data);\n        }\n        return spaces_data;\n    }\n\n    getCurrentLayoutJSON() {\n        let l_title = \"Untitled Layout\";\n        if($('#layout-title').val() !== '') {\n            l_title = $('#layout-title').val();\n        }\n        return {\n            \"title\": l_title,\n            \"data\": this.getJSONDataFromSpaces(this.state.map.spaces),\n        };\n    }\n\n    getCurrentLayoutJSONFileInfo() {\n        let data = this.getCurrentLayoutJSON();\n        this.setState({\"message\": \"\"});\n        return {\n            \"filename\": data.title,\n            \"data\": [data]\n        };\n    }\n\n    getAllLayoutJSONFileInfo() {\n        this.setState({\"message\": \"\"});\n        let data = ls.get(this.props.storage_key) || [];\n        return {\n            \"filename\": \"All \"+this.props.subject_plural,\n            \"data\": data\n        };\n    }\n\n    setLayout(data, selected_item=\"new\", new_map=null) {\n        if(new_map===null) new_map = this.getLayoutFromJSON(data.data);\n        let loadedTitle = data.title;\n        let new_message = this.props.subject+\" '\"+loadedTitle+\"' displayed.\";\n        this.setMap(new_map);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": selected_item.toString(),\n        });\n    }\n\n    addLayoutsFromJSON(data) {\n        if(data.length>0) {\n            let saved_data = Object.assign([], this.state.saved_data);\n            for(let dataToSave of data) {\n                saved_data.push(dataToSave);\n            }\n            ls.set(this.props.storage_key, saved_data);\n            this.setLayout(saved_data[saved_data.length-1], saved_data.length-1);\n            let new_map = this.getLayoutFromJSON(saved_data[saved_data.length-1].data);\n            this.setMap(new_map);\n            this.setState({\n                \"saved_data\": ls.get(this.props.storage_key) || [],\n                \"message\": \"Layouts loaded.\",\n                \"selected_item\": saved_data.length-1,\n                \"input_title\": saved_data[saved_data.length-1].title,\n            });\n        } else {\n            this.setState({\"message\": \"There were no \"+this.props.subject_plural+\" to load.\"})\n        }\n    }\n\n    getSelectValue() {\n        let int_select = document.getElementById(\"layout-select\");\n        return int_select.options[int_select.selectedIndex].value;\n    }\n\n    saveCurrent() {\n        let dataToSave = this.getCurrentLayoutJSON();\n        let currentIndex = this.getSelectValue();\n        let saved_data = Object.assign([], this.state.saved_data);\n        let new_selected = saved_data.length;\n        if(\n            currentIndex.split(\"_\")[0] === \"new\" ||\n            currentIndex.split(\"_\")[0] === \"newc\"\n        ) {\n            saved_data.push(dataToSave);\n        } else {\n            saved_data[parseInt(currentIndex)] = dataToSave;\n            new_selected = parseInt(currentIndex);\n        }\n        ls.set(this.props.storage_key, saved_data);\n        this.setState({\n            \"selected_item\": new_selected.toString(),\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n            \"message\": this.props.subject+\" '\"+dataToSave.title+\"' saved.\",\n        });\n    }\n\n    deleteCurrent() {\n        let currentIndex = this.getSelectValue();\n        let saved_data = Object.assign([], this.state.saved_data);\n        let toDel = saved_data.splice(parseInt(currentIndex), 1)[0];\n        ls.set(this.props.storage_key, saved_data);\n        this.setMap(this.getNewLayout());\n        this.setState({\n            \"input_title\": \"\",\n            \"selected_item\": this.getNewStringValue(),\n            \"message\": this.props.subject+\" '\"+toDel.title+\"' deleted.\",\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n        });\n    }\n\n    deleteAll() {\n        ls.remove(this.props.storage_key);\n        this.setMap(this.getNewLayout());\n        this.setState({\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n            \"selected_item\": this.getNewStringValue(),\n            \"input_title\": \"\",\n            \"message\": \"All saved \"+this.props.subject_plural+\" have been deleted.\",\n            \"bank_systems\": this.syncBankSystems(this.getNewLayout()),\n        });\n    }\n}","export function compareByID(a, b) {\n    if(a.id > b.id) {\n        return 1;\n    } else if(a.id < b.id) {\n        return -1;\n    }\n    return 0;\n}\n\nexport function shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n}\n\n","import React from 'react';\nimport $ from 'jquery';\nimport ls from \"local-storage\";\n\nimport {WORMHOLES} from \"../data/tile_data\";\nimport default_variables from '../data/default_evaluators.json';\nimport map_string_order from '../data/map_string_order.json';\n\nimport {getObjFromCoord, SystemBox} from \"../map-logic\";\nimport {\n    SYSTEM_FORMATS,\n    MapComponent,\n    MAP_SPACE_TYPES,\n    SystemBankComponent\n} from \"../map-components\";\nimport {\n    JSONDownloadButton,\n    JSONUploadButton,\n} from \"../download-helpers\";\nimport {BaseEditor} from \"./base-editor\";\nimport {\n    shuffle,\n    compareByID,\n} from \"../utilities\";\n\nwindow.jQuery = $;\nconst LOOPS_TO_TRY = 10000;\n\nexport class MapEditor extends BaseEditor {\n    constructor(props) {\n        super(props);\n        let starting_layout = this.getLayoutFromJSON(this.default_layouts[0].data);\n        this.state.map = starting_layout;\n        this.state.selected_bank_system = null;\n        this.state.system_format = SYSTEM_FORMATS.STREAMLINED_WITH_NAME;\n        this.state.draggedSystem = null;\n        this.state.option_pair_wormholes = true;\n        this.state.option_include_all_wormholes = true;\n        this.state.target_blue_total = \"random\";\n        this.state.bank_systems = this.syncBankSystems(starting_layout, true);\n        this.state.eval_option=\"default_0\";\n        this.state.eval_variables=default_variables[0];\n        this.state.home_values = {};\n        this.state.balance_difference = null;\n        this.state.map_string = \"\";\n        this.state.balance_options = {\n            \"dont_move_wormholes\": false,\n            \"dont_move_anomalies\": false,\n            \"dont_move_empty\": false,\n        };\n        this.state.include_expansion_systems = true;\n        this.state.long_op = false;\n        if(this.props.state_to_import) {\n            let matching_options = this.getOptions().filter(option => option.index === this.props.state_to_import.selected_item);\n            let matching_evals = this.getEvalOptions().filter(option => option.index === this.props.state_to_import.eval_option);\n            if (matching_options.length > 0 && matching_evals.length > 0) {\n                this.state = this.props.state_to_import;\n            }\n        }\n    }\n\n    setMap(new_map, home_values=null, balance_difference=null, eval_var=null) {\n        if(new_map.isComplete()) {\n            if(home_values===null) {\n                if(eval_var===null) eval_var = this.state.eval_variables;\n                home_values = this.getHomeValues(new_map, eval_var);\n            }\n            if(balance_difference===null) {\n                balance_difference = this.getBalanceDifference(home_values);\n            }\n        } else {\n            home_values = {};\n            balance_difference = null;\n        }\n        this.setState({\n            \"map\": new_map,\n            \"bank_systems\": this.syncBankSystems(new_map),\n            \"home_values\": home_values,\n            \"balance_difference\": balance_difference,\n            \"map_string\": this.getMapString(new_map),\n        });\n    }\n\n    syncBankSystems(map, include_expansion_systems=null) {\n        if(include_expansion_systems===null) include_expansion_systems = this.state.include_expansion_systems;\n        let bank_systems = new SystemBox([], []);\n        for(let system of this.system_box.systems) {\n            if(\n                (\n                    map===null\n                    || !map.containsSystem(system.id)\n                )\n                && (\n                    system.id<59\n                    || include_expansion_systems\n                )\n            ) {\n                 bank_systems.systems.push(system);\n             }\n        }\n        bank_systems.systems.sort(compareByID);\n        return bank_systems;\n    }\n\n    setActiveBankSystem(system) {\n        this.setState({\"selected_bank_system\": system});\n    }\n\n    handleSelectChange() {\n        let new_value = this.getSelectValue();\n        let new_check = this.getSelectNewMapValue();\n        if(!(new_check === null)) {\n            if(this.getSelectNewMapType() === \"newc\") {\n                this.loadCustomLayout(new_check);\n            } else {\n                this.loadDefault(new_check);\n            }\n        } else {\n            let valIndex = parseInt(new_value);\n            this.setLayout(this.state.saved_data[valIndex], new_value);\n        }\n    }\n\n    handleEvalChange(value) {\n        let e_kind = value.split(\"_\")[0];\n        let e_index = value.split(\"_\")[1];\n        let e_var = null;\n        if(e_kind===\"default\") {\n            e_var = default_variables[e_index];\n        } else {\n            e_var = ls.get(this.props.eval_storage_key)[e_index];\n        }\n        this.setState({\n            \"eval_option\": value,\n            \"eval_variables\": e_var,\n        });\n        this.setMap(this.state.map, null, null, e_var);\n    }\n\n    getSelectNewMapValue(selected_item=null) {\n        let new_value = selected_item;\n        if(new_value===null) {\n            new_value = this.getSelectValue();\n        }\n        new_value = new_value.toString();\n        let new_check = new_value.split(\"_\");\n        if(\n            new_check.length===2\n            &&\n            (new_check[0]===\"new\"||new_check[0]===\"newc\")) {\n            return(parseInt(new_check[1]));\n        }\n        return null;\n    }\n\n    getSelectNewMapType() {\n        return this.getSelectValue().split(\"_\")[0];\n    }\n\n    getNewStringValue() {\n        if(!this.state) return \"new_0\";\n        if(this.state.selected_item.toString().substr(0, 3)===\"new\") return this.state.selected_item;\n        return \"new_0\";\n    }\n\n    isSelectNew(selected_item=null) {\n        return this.getSelectNewMapValue(selected_item)!==null;\n    }\n\n        handleFormatDisplayChange() {\n        let int_select = document.getElementById(\"select-system-display\");\n        this.setState({\"system_format\": parseInt(int_select.options[int_select.selectedIndex].value)});\n    }\n\n    onSelectedSystemDrag(event) {\n        this.setState({\n          draggedSystem: this.state.selected_bank_system,\n          message: \"\",\n        });\n    }\n\n    onSystemDrag(event, system) {\n        this.setState({\n          draggedSystem: system,\n          message: \"\",\n        });\n    }\n\n    onSystemDragEnd(event) {\n        this.setState({\n          draggedSystem: null,\n          message: \"\",\n        });\n    }\n\n    onSystemDropped(event, space_index) {\n        if(this.state.draggedSystem !== null) {\n            let new_map = this.state.map.makeCopy();\n            let selected_bank_system = this.state.selected_bank_system;\n            let is_changed = false;\n            if(space_index !== null) {\n                let space = new_map.spaces[space_index];\n                if(space.type === MAP_SPACE_TYPES.OPEN) {\n                    if(this.state.selected_bank_system !== null && this.state.selected_bank_system.id === this.state.draggedSystem.id) {\n                        selected_bank_system = null;\n                    }\n                    let old_space = new_map.getSpaceBySystemID(this.state.draggedSystem.id);\n                    if(old_space) {\n                        old_space.type = MAP_SPACE_TYPES.OPEN;\n                        old_space.system = null;\n                    }\n                    space.system = this.state.draggedSystem;\n                    space.type = MAP_SPACE_TYPES.SYSTEM;\n                    is_changed = true;\n                } else if(space.type === MAP_SPACE_TYPES.SYSTEM && !space.system.isMecatolRexSystem()) {\n                    let replaced_system = space.system;\n                    if (selected_bank_system !== null && selected_bank_system.id === this.state.draggedSystem.id) {\n                        selected_bank_system = replaced_system;\n                    } else {\n                        new_map.getSpaceBySystemID(this.state.draggedSystem.id).system = replaced_system;\n                    }\n                    space.system = this.state.draggedSystem;\n                    is_changed = true;\n                }\n            } else {\n                let old_space = new_map.getSpaceBySystemID(this.state.draggedSystem.id);\n                if(old_space) {\n                    selected_bank_system = old_space.system;\n                    old_space.type = MAP_SPACE_TYPES.OPEN;\n                    old_space.system = null;\n                    is_changed = true;\n                }\n            }\n\n            if(is_changed) {\n                this.setMap(new_map);\n                this.setState({\"selected_bank_system\": selected_bank_system,});\n            }\n            this.onSystemDragEnd(event);\n        }\n    }\n\n    handleIncludeWormholesChange() {\n        let isChecked = document.getElementById(\"require-all-wormholes\").checked;\n        this.setState(\n            {\"option_include_all_wormholes\": isChecked}\n        );\n    }\n\n    handlePairWormholesChange() {\n        let isChecked = document.getElementById(\"pair-wormholes\").checked;\n        this.setState(\n            {\"option_pair_wormholes\": isChecked}\n        );\n    }\n\n    handleTargetRatioChange() {\n        let int_select = document.getElementById(\"target-ratio\");\n        let int_value = int_select.options[int_select.selectedIndex].value\n        if(int_value !== \"random\") int_value = parseInt(int_value);\n        this.setState({\"target_blue_total\": int_value});\n    }\n\n    loadDefault(index) {\n        let toLoad = this.default_layouts[index];\n        this.setLayout(toLoad, \"new_\"+index);\n        let loadedTitle = toLoad.title;\n        let new_message = \"Blank map '\"+loadedTitle+\"' displayed.\";\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n        });\n    }\n\n    loadCustomLayout(index) {\n        let toLoad = ls.get(this.props.layout_storage_key)[index];\n        let new_map = this.getLayoutFromJSON(toLoad.data);\n        let loadedTitle = toLoad.title;\n        let new_message = \"Custom layout '\"+loadedTitle+\"' displayed.\";\n        this.setMap(new_map);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": \"newc_\"+index,\n        });\n    }\n\n    getNewLayout() {\n        let toLoad = this.default_layouts[0];\n        let new_map = this.getLayoutFromJSON(toLoad.data);\n        return new_map;\n    }\n\n    getMapString(map = this.state.map) {\n        let final_string = \"\";\n        let is_first = \"\";\n        let coord_order = map_string_order.slice();\n        if(map.spaces.length<=37) coord_order.splice(36, 24);\n        for(let one_coor of coord_order) {\n            let one_space = getObjFromCoord(one_coor, map.spaces);\n            if(one_space && one_space.type===MAP_SPACE_TYPES.SYSTEM && one_space.system) {\n                final_string+=is_first+one_space.system.id;\n            } else {\n                final_string+=is_first+\"0\";\n            }\n            is_first = \" \";\n        }\n        return final_string;\n    }\n\n    loadMapFromString(map_string = this.state.map_string) {\n        let new_map = this.state.map.makeCopy();\n        let new_bank = this.state.bank_systems;\n        let id_list = map_string.split(\" \");\n        let coord_list = map_string_order.slice();\n        if(id_list.length<=37) coord_list.splice(36, 24);\n        for(let [index, one_id_string] of id_list.entries()) {\n            let one_id = parseInt(one_id_string);\n            if(one_id!==0) {\n                let one_system = new_bank.getSystemByID(one_id);\n                if(!one_system) {\n                    let one_system_space = new_map.getSpaceBySystemID(one_id);\n                    if(!one_system_space) {\n                        this.setState({\"message\":\"Space not found.\"});\n                        return;\n                    }\n                    one_system = one_system_space.system;\n                    one_system_space.type = MAP_SPACE_TYPES.OPEN;\n                    one_system_space.system = null;\n                    new_bank = this.syncBankSystems(new_map);\n                }\n                let new_space = getObjFromCoord(coord_list[index], new_map.spaces);\n                if(!new_space) {\n                    this.setState({\"message\":\"Invalid: Too many systems listed.\"});\n                    return;\n                }\n                if(new_space.type!==MAP_SPACE_TYPES.OPEN && new_space.type!==MAP_SPACE_TYPES.SYSTEM) {\n                    this.setState({\"message\":\"Invalid: Placing system on improper space.\"});\n                    return;\n                }\n                if(new_space.type===MAP_SPACE_TYPES.SYSTEM && new_space.system.isMecatolRexSystem()) {\n                    this.setState({\"message\":\"Invalid: Systems on top of Mecatol Rex.\"});\n                    return;\n                }\n                if(new_space.type===MAP_SPACE_TYPES.OPEN) {\n                    new_space.type = MAP_SPACE_TYPES.SYSTEM;\n                }\n                new_space.system = one_system;\n                new_bank = this.syncBankSystems(new_map);\n            }\n        }\n        this.setState({\"message\": \"Map string loaded.\"});\n        this.setMap(new_map);\n    }\n\n    clickedSpace(index) {\n        let newState = Object.assign({},{\n            \"message\": \"\",\n            \"selected_bank_system\": this.state.selected_bank_system,\n        });\n        let new_map = this.state.map.makeCopy();\n        let clickedSpace = new_map.spaces[index];\n        let isChanged = false;\n\n        switch(clickedSpace.type) {\n            case MAP_SPACE_TYPES.OPEN:\n                if(newState.selected_bank_system !== null) {\n                    clickedSpace.system = newState.selected_bank_system;\n                    clickedSpace.type = MAP_SPACE_TYPES.SYSTEM;\n                    newState.selected_bank_system = null;\n                    isChanged = true;\n                }\n                break;\n            case MAP_SPACE_TYPES.SYSTEM:\n                if(!clickedSpace.system.isMecatolRexSystem()) {\n                    if(newState.selected_bank_system !== null) {\n                        let replacement_system = newState.selected_bank_system;\n                        newState.selected_bank_system = clickedSpace.system;\n                        clickedSpace.system = replacement_system;\n                        isChanged = true;\n                    } else {\n                        newState.selected_bank_system = clickedSpace.system;\n                        clickedSpace.system = null;\n                        clickedSpace.type = MAP_SPACE_TYPES.OPEN;\n                        isChanged = true;\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n\n        if(isChanged) {\n            this.setState(newState);\n            this.setMap(new_map);\n        }\n\n    }\n\n    autoCompleteStart() {\n        if(!this.state.long_op) {\n            this.setState({\n                    \"message\": \"Thinking...\",\n                    \"long_op\": true,\n                },\n                () => {\n                    setTimeout(this.autoComplete.bind(this), 1);\n                }\n            );\n        }\n    }\n\n    autoComplete() {\n        let map_history = [{\n            \"map\": this.state.map.makeCopy(this.planet_box),\n            \"system_box\": this.state.bank_systems.makeCopy(),\n        }];\n        let gotamap = true;\n        while(!map_history[map_history.length-1].map.isComplete()) {\n            map_history = this._autoCompleteSteps(map_history, 1);\n            if(map_history===false) {\n                gotamap=false;\n                break;\n            }\n        }\n        let message = \"Unable to find a legal completion of this map.\";\n        if(gotamap) {\n            this.setMap(map_history[map_history.length-1].map);\n            message = \"Map completed randomly.\";\n            this.setState({\n                \"message\": message,\n                \"selected_bank_system\": null,\n                \"long_op\": false,\n            });\n        }\n    }\n\n    _autoCompleteSteps(current_history, steps_forward, current_try_total=0, backwards_length=null) {\n        if(backwards_length===null) backwards_length=current_history.length;\n        let starting_length = current_history.length;\n        for(let tries=current_try_total; tries<LOOPS_TO_TRY; tries++) {\n            let new_history = this._addOneSystem(current_history[current_history.length-1]);\n            if(!(new_history===false)) {\n                current_history.push(new_history);\n                if(current_history.length >= starting_length+steps_forward) {\n                    return current_history;\n                } else {\n                    return this._autoCompleteSteps(current_history, steps_forward-1, tries, backwards_length);\n                }\n            }\n        }\n        let steps_forward_add = 0;\n        while(current_history.length>=backwards_length) {\n            steps_forward_add++;\n            current_history.pop();\n        }\n        if(current_history.length===0) {\n            return false;\n        }\n        return this._autoCompleteSteps(\n            current_history,\n            steps_forward+steps_forward_add,\n            0,\n            backwards_length-1);\n    }\n\n    _addOneSystem(newest_history) {\n        let avail_sys_pool = [];\n        let system_box = newest_history.system_box;\n        let map = newest_history.map;\n        for(let one_sys of system_box.systems) {\n            let can_add = true;\n            if (\n                this.state.option_include_all_wormholes &&\n                one_sys.wormhole === null &&\n                system_box.getWormholeSystems().length >= map.getOpenSpacesTotal()\n            ) {\n                can_add = false;\n            } else {\n                if (this.state.option_pair_wormholes) {\n                    let total_needed = 0;\n                    let b_holes = system_box.getWormholeSystems(WORMHOLES.BETA).length;\n                    let a_holes = system_box.getWormholeSystems(WORMHOLES.ALPHA).length;\n                    if (b_holes === 1) total_needed++;\n                    if (a_holes === 1) total_needed++;\n                    if (\n                        total_needed >= map.getOpenSpacesTotal()\n                        &&\n                        (\n                            one_sys.wormhole === null\n                            ||\n                            (one_sys.wormhole !== WORMHOLES.BETA && a_holes !== 1)\n                            ||\n                            (one_sys.wormhole !== WORMHOLES.ALPHA && b_holes !== 1)\n                        )\n                    ) can_add = false;\n                }\n                if (can_add) avail_sys_pool.push(one_sys);\n            }\n        }\n        if(this.state.target_blue_total!==\"random\") {\n            let target_ratio = this.state.target_blue_total/(map.getPossibleSystemTotal()-this.state.target_blue_total);\n            let current_ratio = map.getBlueSystemTotal()/map.getRedSystemTotal();\n            if(target_ratio<current_ratio) {\n                let replacement_pool = [];\n                for(let one_sys of avail_sys_pool) {\n                    if(one_sys.isRed()) replacement_pool.push(one_sys);\n                }\n                if(replacement_pool.length>0) avail_sys_pool = replacement_pool;\n            } else if(target_ratio>current_ratio) {\n                let replacement_pool = [];\n                for(let one_sys of avail_sys_pool) {\n                    if(one_sys.isBlue()) replacement_pool.push(one_sys);\n                }\n                if(replacement_pool.length>0) avail_sys_pool = replacement_pool;\n            }\n        }\n        let chosen_system = avail_sys_pool[Math.floor(Math.random() * avail_sys_pool.length)];\n        let avail_space_pool = [];\n        for(let [index, one_space] of map.spaces.entries()) {\n            if(one_space.type===MAP_SPACE_TYPES.OPEN) avail_space_pool.push(index);\n        }\n        let chosen_space_index = avail_space_pool[Math.floor(Math.random() * avail_space_pool.length)];\n        let new_map = map.makeCopy();\n        new_map.spaces[chosen_space_index].type = MAP_SPACE_TYPES.SYSTEM;\n        new_map.spaces[chosen_space_index].system = chosen_system;\n        let new_box = this.syncBankSystems(new_map);\n\n        if(new_map.isLegal()) {\n            return {\n                \"map\": new_map,\n                \"system_box\": new_box,\n            }\n        } else {\n            return false;\n        }\n    }\n\n    getHomeValues(map = this.state.map, evars = this.state.eval_variables) {\n        let home_values = {};\n        for(let [index, one_space] of map.spaces.entries()) {\n            if(one_space.type === MAP_SPACE_TYPES.HOME) {\n                home_values[index.toString()] = map.getHomeValue(\n                    one_space, evars,\n                );\n            }\n        }\n        return home_values;\n    }\n\n    getBalanceDifference(home_values = this.state.home_values) {\n        let max = null;\n        let min = null;\n        for(let one_home_key in home_values) {\n            if(home_values.hasOwnProperty(one_home_key)) {\n                if (max === null || home_values[one_home_key] > max) max = home_values[one_home_key];\n                if (min === null || home_values[one_home_key] < min) min = home_values[one_home_key];\n            }\n        }\n        return max-min;\n    }\n\n    handleBalanceOptionChange(which_option) {\n        let options = Object.assign({}, this.state.balance_options);\n        options[which_option] = !options[which_option];\n        this.setState({\"balance_options\": options});\n    }\n\n    improveBalanceStart() {\n        if(!this.state.long_op) {\n            this.setState({\n                    \"message\": \"Thinking...\",\n                    \"long_op\": true,\n                },\n                ()=>{\n                    setTimeout(this.improveBalance.bind(this), 1);\n                }\n            );\n        }\n    }\n\n    improveBalance() {\n        return new Promise((resolve)=> {\n            let map = this.state.map;\n            let eligible_system_spaces = [];\n            for (let [index, one_space] of map.spaces.entries()) {\n                if (one_space.type === MAP_SPACE_TYPES.SYSTEM) {\n                    if (\n                        !one_space.system.isMecatolRexSystem()\n                        &&\n                        (!this.state.balance_options.dont_move_wormholes\n                            || one_space.system.wormhole === null)\n                        &&\n                        (!this.state.balance_options.dont_move_anomalies\n                            || one_space.system.anomaly === null)\n                        &&\n                        (!this.state.balance_options.dont_move_empty\n                            || one_space.system.wormhole !== null\n                            || one_space.system.anomaly !== null\n                            || one_space.system.planets.length > 0)\n                    ) eligible_system_spaces.push(index);\n                }\n            }\n            shuffle(eligible_system_spaces);\n            let found_it = false;\n            let new_map = null;\n            let new_hv = null;\n            let new_diff = null;\n            for(let a=0; a<eligible_system_spaces.length; a++) {\n                for(let b=0; b<eligible_system_spaces.length; b++) {\n                    if(a!==b) {\n                        new_map = this.state.map.makeCopy();\n                        let replaced_system = new_map.spaces[eligible_system_spaces[b]].system;\n                        new_map.spaces[eligible_system_spaces[b]].system = new_map.spaces[eligible_system_spaces[a]].system;\n                        new_map.spaces[eligible_system_spaces[a]].system = replaced_system;\n                        if (new_map.isLegal()) {\n                            new_hv = this.getHomeValues(new_map);\n                            new_diff = this.getBalanceDifference(new_hv);\n                            if (new_diff < this.state.balance_difference) {\n                                found_it = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if(found_it) break;\n            }\n            if (found_it) {\n                this.setMap(new_map, new_hv, new_diff);\n                this.setState({\n                    \"message\": \"Balance gap has been improved.\",\n                    \"long_op\": false,\n                });\n            } else {\n                this.setState({\n                    \"message\": \"Failed to improve balance gap.\",\n                    \"long_op\": false,\n                });\n            }\n        });\n    }\n\n    getEvalOptions() {\n        let options = [];\n        for(let [index, one_default] of default_variables.entries()) {\n            options.push({\n                \"index\": \"default_\"+index,\n                \"title\": one_default.title,\n            })\n        }\n        let evals = ls.get(this.props.eval_storage_key) || [];\n        for(let [index, one_saved] of evals.entries() || []) {\n            options.push({\n                \"index\": \"custom_\"+index.toString(),\n                \"title\": one_saved.title,\n            });\n        }\n        return options;\n    }\n\n    getOptions() {\n        let options = [];\n        for(let [index, one_default] of this.default_layouts.entries()) {\n            options.push({\n                \"index\": \"new_\"+index,\n                \"title\": \"New from default layout \"+one_default.title,\n            });\n        }\n        for(let [index, one_custom_l] of (ls.get(this.props.layout_storage_key) || []).entries()) {\n            if(this.getLayoutFromJSON(one_custom_l.data).areWarpsLogical()) {\n                options.push({\n                    \"index\": \"newc_\" + index,\n                    \"title\": \"New from custom layout \" + one_custom_l.title,\n                });\n            }\n        }\n        for(let [index, one_saved] of this.state.saved_data.entries()) {\n            options.push({\n                \"index\": index,\n                \"title\": one_saved.title\n            });\n        }\n        return options;\n    }\n\n    toggleExpansion() {\n        this.setState({\n            include_expansion_systems: !this.state.include_expansion_systems,\n            bank_systems: this.syncBankSystems(this.state.map, !this.state.include_expansion_systems),\n        });\n    }\n\n    render() {\n        let is_legal = (<label className=\"button is-outlined is-small is-danger\">Illegal</label>);\n        if(this.state.map.isLegal()) is_legal = (<label className=\"button is-small is-outlined is-success\">Legal</label>);\n        let is_complete = (<label className=\"button is-outlined is-small is-danger\">Incomplete</label>);\n        if(this.state.map.isComplete()) is_complete = (<label className=\"button is-small is-outlined is-success\">Complete</label>);\n\n        let options = [];\n        for(let opt of this.getOptions()) {\n            options.push(\n                <option value={opt.index} key={opt.index}>{opt.title}</option>\n            );\n        }\n\n        let eval_options = [];\n        for(let opt of this.getEvalOptions()) {\n            eval_options.push(\n                <option value={opt.index} key={opt.index}>{opt.title}</option>\n            );\n        }\n\n        let auto_complete_ratios = [(<option value=\"random\" key=\"random\">B/R Target Ratio: Random</option>)];\n        let red_total = this.state.map.getRedSystemTotal();\n        let blue_total = this.state.map.getBlueSystemTotal();\n        let open_spaces = this.state.map.getOpenSpacesTotal();\n        let blue_avail = this.state.bank_systems.getBlueSystemTotal();\n        let red_avail = this.state.bank_systems.getRedSystemTotal();\n        for(let s=0; s<=open_spaces; s++) {\n            if(s<=blue_avail && open_spaces-s<=red_avail) {\n                auto_complete_ratios.push((\n                    <option\n                        value={s+blue_total}\n                        key={s+blue_total}\n                    >\n                        B/R Target Ratio: {s+blue_total}/{open_spaces-s+red_total}\n                    </option>\n                ));\n            }\n\n        }\n\n        let bal_diff =  null;\n        if(this.state.balance_difference!==null) {\n            bal_diff = (<p className=\"control\"><label className=\"label\">Balance Gap: {this.state.balance_difference}</label></p>);\n        }\n\n\n        return(\n            <div className=\"block\">\n                <h2 className=\"title is-size-4\">Map Editor</h2>\n                <div className=\"block map-lab-control-panel\">\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Saved/Defaults:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <span className=\"select is-small\">\n                                        <select id=\"layout-select\" value={this.state.selected_item}\n                                                onChange={() => this.handleSelectChange()}>\n                                            {options}\n                                        </select>\n                                    </span>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download All\"\n                                        getDownloadInfo={() => this.getAllLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button onClick={() => this.deleteAll()} className=\"button is-small\">Delete All\n                                    </button>\n                                </p>\n                                <JSONUploadButton\n                                    id=\"layout-json-upload\"\n                                    title=\"Upload\"\n                                    handleJSON={(data) => this.addLayoutsFromJSON(data)}\n                                    className=\"button is-small\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Map Title:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <input\n                                        className=\"input is-small\"\n                                        type=\"text\"\n                                        id=\"layout-title\"\n                                        value={this.state.input_title}\n                                        onChange={function() {\n                                            this.setState(\n                                                {\n                                                    \"input_title\": document.getElementById(\"layout-title\").value,\n                                                    \"message\": \"\"\n                                                }\n                                            );\n                                        }.bind(this)}\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.saveCurrent()}>Save</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.handleSelectChange()}>Reset</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button\n                                        className=\"button is-small\"\n                                        onClick={()=>this.deleteCurrent()}\n                                        disabled={this.isSelectNew(this.state.selected_item)}\n                                    >Delete</button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download\"\n                                        className=\"button is-small\"\n                                        getDownloadInfo={()=>this.getCurrentLayoutJSONFileInfo()}\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">System Display:</label>\n                        </div>\n                        <div className=\"field-body\">\n                             <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <span className=\"select is-small\">\n                                        <select\n                                            id=\"select-system-display\"\n                                            value={this.state.system_format}\n                                            onChange={()=>this.handleFormatDisplayChange()}\n                                        >\n                                            <option value={SYSTEM_FORMATS.STREAMLINED}>Streamlined</option>\n                                            <option value={SYSTEM_FORMATS.STREAMLINED_WITH_NAME}>Streamlined + Name</option>\n                                            <option value={SYSTEM_FORMATS.COLORBLIND_FRIENDLY}>Colorblind Friendly</option>\n                                            <option value={SYSTEM_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME}>Colorblind Friendly + Name</option>\n                                            <option value={SYSTEM_FORMATS.ID_ONLY}>ID Only</option>\n                                        </select>\n                                    </span>\n                                </p>\n                                <p className=\"control\">\n                                    <label className=\"label\">Map Status:</label>\n                                </p>\n                                <p className=\"control\">\n                                    {is_complete}\n                                </p>\n                                <p className=\"control\">\n                                    {is_legal}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Map String:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control is-expanded\">\n                                    <input\n                                        className=\"input is-small\"\n                                        type=\"text\"\n                                        id=\"map-string\"\n                                        value={this.state.map_string}\n                                        onChange={function() {\n                                            this.setState(\n                                                {\n                                                    \"map_string\": document.getElementById(\"map-string\").value,\n                                                    \"message\": \"\"\n                                                }\n                                            );\n                                        }.bind(this)}\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.loadMapFromString()}>\n                                        Load From String\n                                    </button>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"columns\">\n                    <div className=\"column is-one-fifth-desktop is-narrow-tablet map-controls-column\">\n                        {this.getMessageHtml()}\n                        <div className=\"field\">\n                            <label className=\"label\">Auto-Complete</label>\n                            <p className=\"control\">\n                                <input\n                                    id=\"require-all-wormholes\"\n                                    type=\"checkbox\"\n                                    checked={this.state.option_include_all_wormholes}\n                                    onChange={()=>this.handleIncludeWormholesChange()}\n                                />\n                                <label htmlFor=\"require-all-wormholes\"> Require Wormholes</label>\n                            </p>\n                            <p className=\"control\">\n                                <input\n                                    id=\"pair-wormholes\"\n                                    type=\"checkbox\"\n                                    checked={this.state.option_pair_wormholes}\n                                    onChange={()=>this.handlePairWormholesChange()}\n                                />\n                                <label htmlFor=\"pair-wormholes\"> Pair Wormholes</label>\n                            </p>\n                            <p className=\"control\">\n                                <span className=\"select is-small\">\n                                    <select\n                                        id=\"target-ratio\"\n                                        value={this.state.target_blue_total}\n                                        onChange={()=>this.handleTargetRatioChange()}\n                                    >\n                                        {auto_complete_ratios}\n                                    </select>\n                                </span>\n                            </p>\n                            <p className=\"control\">\n                                <button\n                                    onClick={()=>this.autoCompleteStart()}\n                                    disabled={\n                                        !this.state.map.isLegal()\n                                        || this.state.map.isComplete()\n                                        || this.state.long_op===true\n                                    }\n                                    className=\"button is-small is-primary\"\n                                >\n                                    Auto-Complete Map\n                                </button>\n                            </p>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Improve Balance</label>\n                            <p className=\"control\">\n                                <span className=\"select is-small\">\n                                    <select id=\"eval-select\" value={this.state.eval_option}\n                                            onChange={(event) => this.handleEvalChange(event.target.value)}>\n                                        {eval_options}\n                                    </select>\n                                </span>\n                            </p>\n                            {bal_diff}\n                            <p className=\"control\">\n                                <input\n                                    id=\"dont-move-wormholes\"\n                                    type=\"checkbox\"\n                                    checked={this.state.balance_options.dont_move_wormholes}\n                                    onChange={()=>this.handleBalanceOptionChange(\"dont_move_wormholes\")}\n                                />\n                                <label htmlFor=\"dont-move-wormholes\"> Lock Wormholes</label>\n                            </p>\n                            <p className=\"control\">\n                                <input\n                                    id=\"dont-move-anomalies\"\n                                    type=\"checkbox\"\n                                    checked={this.state.balance_options.dont_move_anomalies}\n                                    onChange={()=>this.handleBalanceOptionChange(\"dont_move_anomalies\")}\n                                />\n                                 <label htmlFor=\"dont-move-anomalies\"> Lock Anomalies</label>\n                            </p>\n                            <p className=\"control\">\n                                <input\n                                    id=\"dont-move-empty\"\n                                    type=\"checkbox\"\n                                    checked={this.state.balance_options.dont_move_empty}\n                                    onChange={()=>this.handleBalanceOptionChange(\"dont_move_empty\")}\n                                />\n                                <label htmlFor=\"dont-move-empty\"> Lock Empty Spaces</label>\n                            </p>\n                            <p className=\"control\">\n                                <button\n                                    onClick={()=>this.improveBalanceStart()}\n\n                                    disabled={!this.state.map.isComplete() || this.state.long_op===true}\n                                    className=\"button is-small is-primary\"\n                                >\n                                    Improve Balance\n                                </button>\n                            </p>\n                        </div>\n                        <SystemBankComponent\n                            systems={this.state.bank_systems}\n                            include_expansion_systems={this.state.include_expansion_systems}\n                            toggleExpansion={()=>this.toggleExpansion()}\n                            active_system={this.state.selected_bank_system}\n                            setActiveSystem={(system)=>this.setActiveBankSystem(system)}\n                            system_format={this.state.system_format}\n                            onSelectedSystemDrag={(event)=>this.onSelectedSystemDrag(event)}\n                            onSystemDragEnd={(event)=>this.onSystemDragEnd(event)}\n                            onSystemDropped={(event)=>this.onSystemDropped(event,null)}\n                            eval_variables={this.state.eval_variables}\n                        />\n                    </div>\n                    <div className=\"column map-container\">\n                        <MapComponent\n                            map={this.state.map}\n                            eval_variables={this.state.eval_variables}\n                            system_format={this.state.system_format}\n                            system_box={this.system_box}\n                            clickedSpace={(index)=>this.clickedSpace(index)}\n                            map_class=\"map-map\"\n                            systems_draggable={!this.state.long_op}\n                            onSystemDrag={(event, system)=>this.onSystemDrag(event, system)}\n                            onSystemDragEnd={(event)=>this.onSystemDragEnd(event)}\n                            onSystemDropped={(event, space)=>this.onSystemDropped(event, space)}\n                            home_values={this.state.home_values}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport $ from 'jquery';\n\nimport {warp_configs} from \"../data/warp_data\";\n\nimport {\n    Map,\n    MapSpace,\n    areCoordsInList,\n} from \"../map-logic\";\nimport {\n    SYSTEM_FORMATS,\n    MapComponent,\n    MAP_SPACE_TYPES,\n} from \"../map-components\";\nimport {\n    JSONDownloadButton,\n    JSONUploadButton,\n} from \"../download-helpers\";\nimport {BaseEditor} from \"./base-editor\";\nimport {compareByID} from \"../utilities\";\n\nwindow.jQuery = $;\n\nexport class LayoutEditor extends BaseEditor {\n    constructor(props) {\n        super(props);\n        this.state.map = this.getNewLayout();\n        this.state.show_warps = false;\n        this.state.show_wormholes = false;\n        this.state.show_anomalies = false;\n        if(this.props.state_to_import) {\n            let matching_options = this.getOptions().filter(option => option.index === this.props.state_to_import.selected_item);\n            if (matching_options.length > 0) {\n                this.state = this.props.state_to_import;\n            }\n        }\n    }\n\n    handleSelectChange() {\n        let new_value = this.getSelectValue();\n        if(new_value === \"new\") {\n            this.setNewLayout();\n        } else {\n            let valIndex = parseInt(new_value);\n            this.setLayout(this.state.saved_data[valIndex], new_value);\n        }\n    }\n\n    isSelectNew(selected_item=null) {\n        if(selected_item !== null) return selected_item===\"new\";\n        return this.getSelectValue() === \"new\";\n    }\n\n    getNewStringValue() {\n        return \"new\";\n    }\n\n    handleWarpChange() {\n        let isChecked = document.getElementById(\"warp-checkbox\").checked;\n        this.setState({\"show_warps\": isChecked});\n    }\n    handleWormholeChange() {\n        let isChecked = document.getElementById(\"wormhole-checkbox\").checked;\n        this.setState({\"show_wormholes\": isChecked});\n    }\n    handleAnomaliesChange() {\n        let isChecked = document.getElementById(\"anomalies-checkbox\").checked;\n        this.setState({\"show_anomalies\": isChecked});\n    }\n\n    clickedSpace(index) {\n        let new_map = this.state.map.makeCopy();\n        let new_message = \"\";\n        let clickedSpace = new_map.spaces[index];\n        let go_next_type = false;\n\n        switch(clickedSpace.type) {\n            case MAP_SPACE_TYPES.WARP:\n                if(!this.state.show_warps) {\n                    go_next_type=true;\n                    clickedSpace.warp_spaces = null;\n                } else {\n                    clickedSpace.warp_spaces = this._getNextWarp(new_map, clickedSpace);\n                    if(clickedSpace.warp_spaces===null) go_next_type=true;\n                }\n                break;\n            case MAP_SPACE_TYPES.SYSTEM:\n                clickedSpace.system = this._getNextSystem(new_map, clickedSpace);\n                if(clickedSpace.system===null) go_next_type = true;\n                break;\n            default:\n                go_next_type = true;\n                break;\n        }\n        if(go_next_type) {\n            let keep_going = true;\n            while(keep_going) {\n                clickedSpace.type++;\n                if(clickedSpace.type > MAP_SPACE_TYPES.WARP) {\n                    clickedSpace.type = 1;\n                }\n                switch(clickedSpace.type) {\n                    case MAP_SPACE_TYPES.SYSTEM:\n                        clickedSpace.system = this._getNextSystem(new_map, clickedSpace);\n                        if(clickedSpace.system!==null) keep_going = false;\n                        break;\n                    case MAP_SPACE_TYPES.WARP:\n                        if(this.state.show_warps){\n                            clickedSpace.warp_spaces = this._getNextWarp(new_map, clickedSpace);\n                            if(clickedSpace.warp_spaces!==null) keep_going=false;\n                        }\n                        break;\n                    default:\n                        keep_going = false;\n                        break;\n                }\n            }\n\n        }\n        if(!new_map.areWarpsLogical()) {\n            new_message = \"Warps do not yet connect to legal spaces. Layout not usable until warps connect.\";\n        }\n        this.setMap(new_map);\n        this.setState({\"message\": new_message,})\n    }\n\n    loadDefault(index) {\n        let toLoad = this.default_layouts[index];\n        let new_map = this.getLayoutFromJSON(toLoad.data);\n        let loadedTitle = toLoad.title;\n        let new_message = \"Default layout '\"+loadedTitle+\"' displayed.\";\n        this.setMap(new_map);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": this.getNewStringValue(),\n        });\n    }\n\n    getNewLayout() {\n        let starting_space = new MapSpace(0,0,0);\n        return new Map(true, starting_space, 3);\n    }\n\n    setNewLayout() {\n        let map = this.getNewLayout();\n        this.setMap(map);\n        this.setState({\"selected_item\": this.getNewStringValue(), \"message\": \"\", \"input_title\": \"\"});\n    }\n\n    _getNextWarp(map, space) {\n        let proposed_warp = space.warp_spaces;\n        if(proposed_warp === null) {\n            proposed_warp = 0;\n        } else {\n            proposed_warp++;\n        }\n        while(proposed_warp < warp_configs.length) {\n            let proposed_config = warp_configs[proposed_warp];\n            let is_legal = true;\n            for(let one_warp of proposed_config) {\n                for(let one_coord of one_warp) {\n                    if(!areCoordsInList(\n                        space.getWarpDirectionCoordinates(one_coord),\n                        map.spaces\n                    )) {\n                        is_legal = false;\n                        break;\n                    }\n                }\n            }\n            if(is_legal) {\n                break;\n            }\n            proposed_warp++;\n        }\n        if(proposed_warp >= warp_configs.length) {\n            return null;\n        }\n        return proposed_warp;\n    }\n\n    _getNextSystem(map, space) {\n        let eligible_systems = [];\n        let current_id = 0;\n        if(space.system!==null) current_id=space.system.id;\n        for(let one_system of this.system_box.systems) {\n            if(\n                map.getSpaceBySystemID(one_system.id)===null\n                &&\n                one_system.id>current_id\n                &&\n                (\n                    one_system.isMecatolRexSystem()\n                    ||\n                    (one_system.wormhole!==null && this.state.show_wormholes)\n                    ||\n                    (one_system.anomaly!==null && this.state.show_anomalies)\n                )\n            ) {\n                eligible_systems.push(one_system);\n            }\n        }\n        if(eligible_systems.length===0) return null;\n        eligible_systems.sort(compareByID);\n        return eligible_systems[0];\n    }\n\n    getOptions() {\n        let options = [{\n            \"index\": \"new\",\n            \"title\": \"New Layout\",\n        }];\n        for(let [index, one_saved] of this.state.saved_data.entries()) {\n            options.push({\n                \"index\": index.toString(),\n                \"title\": one_saved.title,\n            });\n        }\n        return options;\n    }\n\n    render() {\n        let options = [];\n        for(let opt of this.getOptions()) {\n            options.push(\n                <option value={opt.index} key={opt.index}>{opt.title}</option>\n            );\n        }\n        let defaults = [];\n        for(let [index, one_default] of this.default_layouts.entries()) {\n            defaults.push(\n                <p className=\"control\" key={index}>\n                    <button\n                        className=\"button is-small is-link\"\n                        onClick={()=>this.loadDefault(index)}\n                        key={\"default_layout_\"+index}\n                    >\n                        {one_default.title}\n                    </button>\n                </p>\n            )\n        }\n\n        return(\n            <div className=\"block\">\n                <h2 className=\"title is-size-4\">Layout Editor</h2>\n                <div className=\"block map-lab-control-panel\">\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Default Layouts:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                {defaults}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Saved Layouts:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <span className=\"select is-small\">\n                                        <select\n                                            id=\"layout-select\"\n                                            value={this.state.selected_item}\n                                            onChange={()=>this.handleSelectChange()}\n                                        >\n                                            {options}\n                                        </select>\n                                    </span>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download All\"\n                                        getDownloadInfo={()=>this.getAllLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button onClick={()=>this.deleteAll()} className=\"button is-small\">\n                                        Delete All\n                                    </button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONUploadButton\n                                        id=\"layout-json-upload\"\n                                        title=\"Upload\"\n                                        handleJSON={(data)=>this.addLayoutsFromJSON(data)}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Layout Title:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <input\n                                        type=\"text\"\n                                        id=\"layout-title\"\n                                        value={this.state.input_title}\n                                        className=\"input is-small\"\n                                        onChange={function() {\n                                            this.setState(\n                                                {\n                                                    \"input_title\": document.getElementById(\"layout-title\").value,\n                                                    \"message\": \"\"\n                                                }\n                                            );\n                                        }.bind(this)}\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.saveCurrent()}>Save</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.handleSelectChange()}>Reset</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button\n                                        onClick={()=>this.deleteCurrent()}\n                                        disabled={this.isSelectNew(this.state.selected_item)}\n                                        className=\"button is-small\"\n                                    >Delete</button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download\"\n                                        getDownloadInfo={()=>this.getCurrentLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"columns\">\n                        <div className=\"column is-one-fifth-desktop is-narrow-tablet map-controls-column\">\n                            {this.getMessageHtml()}\n                            <div className=\"field\">\n                                <label className=\"label\">Click Cycle</label>\n                                <p className=\"control\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={this.state.show_warps}\n                                        onChange={()=>this.handleWarpChange()}\n                                        id=\"warp-checkbox\"\n                                    />\n                                    <label htmlFor=\"warp-checkbox\"> Include Warps in Click Cycle</label>\n                                </p>\n                                <p className=\"control\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={this.state.show_wormholes}\n                                        onChange={()=>this.handleWormholeChange()}\n                                        id=\"wormhole-checkbox\"\n                                    />\n                                    <label htmlFor=\"wormhole-checkbox\"> Include Womholes in Click Cycle</label>\n                                </p>\n                                <p className=\"control\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={this.state.show_anomalies}\n                                        onChange={()=>this.handleAnomaliesChange()}\n                                        id=\"anomalies-checkbox\"\n                                    />\n                                    <label htmlFor=\"anomalies-checkbox\"> Include Anomalies in Click Cycle</label>\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"column map-container\">\n                            <MapComponent\n                                map={this.state.map}\n                                system_format={SYSTEM_FORMATS.STREAMLINED}\n                                system_box={this.system_box}\n                                clickedSpace={(index)=>this.clickedSpace(index)}\n                                map_class=\"layout-map\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {PLANET_EVAL_STRATEGIES} from \"./map-logic\";\n\nexport const EVAL_ASPECTS = {\n    \"BASE_PLANET_MOD\": \"BASE_PLANET_MOD\",\n    \"RESOURCES_MULTIPLIER\": \"RESOURCES_MULTIPLIER\",\n    \"INFLUENCE_MULTIPLIER\": \"INFLUENCE_MULTIPLIER\",\n    \"TECH_MOD\": \"TECH_MOD\",\n    \"TECH_PROPULSION_MOD\": \"TECH_PROPULSION_MOD\",\n    \"TECH_WARFARE_MOD\": \"TECH_WARFARE_MOD\",\n    \"TECH_BIOTIC_MOD\": \"TECH_BIOTIC_MOD\",\n    \"TECH_CYBERNETIC_MOD\": \"TECH_CYBERNETIC_MOD\",\n    \"PLANET_STRATEGY\": \"PLANET_STRATEGY\",\n    \"NONZERO_RESOURCES_MOD\": \"NONZERO_RESOURCES_MOD\",\n    \"NONZERO_INFLUENCE_MOD\": \"NONZERO_INFLUENCE_MOD\",\n    \"TRAIT_CULTURAL_MOD\": \"TRAIT_CULTURAL_MOD\",\n    \"TRAIT_HAZARDOUS_MOD\": \"TRAIT_HAZARDOUS_MOD\",\n    \"TRAIT_INDUSTRIAL_MOD\": \"TRAIT_INDUSTRIAL_MOD\",\n    \"SINGLE_PLANET_MOD\": \"SINGLE_PLANET_MOD\",\n    \"MULTI_PLANET_MOD\": \"MULTI_PLANET_MOD\",\n    \"MATCHING_PLANETS_MOD\": \"MATCHING_PLANETS_MOD\",\n    \"NONMATCHING_PLANETS_MOD\": \"NONMATCHING_PLANETS_MOD\",\n    \"MECATOL_REX_SYS_MOD\": \"MECATOL_REX_SYS_MOD\",\n    \"LEGENDARY_PLANET_SYS_MOD\": \"LEGENDARY_PLANET_SYS_MOD\",\n    \"DISTANCE_MOD_BASE\": \"DISTANCE_MOD_BASE\",\n    \"DISTANCE_MOD_PLANET\": \"DISTANCE_MOD_PLANET\",\n    \"DISTANCE_MOD_EMPTY\": \"DISTANCE_MOD_EMPTY\",\n    \"DISTANCE_MOD_SUPERNOVA\": \"DISTANCE_MOD_SUPERNOVA\",\n    \"DISTANCE_MOD_ASTEROID_FIELD\": \"DISTANCE_MOD_ASTEROID_FIELD\",\n    \"DISTANCE_MOD_GRAVITY_RIFT\": \"DISTANCE_MOD_GRAVITY_RIFT\",\n    \"DISTANCE_MOD_EMPTY_WORMHOLE\": \"DISTANCE_MOD_EMPTY_WORMHOLE\",\n    \"DISTANCE_MOD_PLANET_WORMHOLE\": \"DISTANCE_MOD_PLANET_WORMHOLE\",\n    \"DISTANCE_MOD_NEBULA\": \"DISTANCE_MOD_NEBULA\",\n    \"DISTANCE_MOD_ADJACENT_TO_OPPONENT\": \"DISTANCE_MOD_ADJACENT_TO_OPPONENT\",\n    \"DISTANCE_MULTIPLIER\": \"DISTANCE_MULTIPLIER\",\n};\n\n\nexport class EvaluatorLine extends React.Component {\n    render() {\n        let null_box = null;\n        let nul_val = this.props.num_value===false;\n        if(this.props.hasNullBox) {\n            null_box = (<p className=\"control checkbox-holder\"><input\n                    id={this.props.id+\"-null-box\"}\n                    type=\"checkbox\"\n                    checked={nul_val}\n                    onChange={event => this.props.onNullChange(event.target.checked)}\n            /> Impassable&nbsp;</p>);\n        }\n        let num_value = this.props.num_value;\n        if(num_value===false) num_value = \"\";\n        return(\n            <div className=\"field line-container\">\n                <div>\n                    <label className=\"label\">{this.props.label}:</label>\n                </div>\n                <div>\n                    <div className=\"field all-parts\">\n                        <div className=\"both-controls\">\n                            <div className=\"field is-horizontal input-only\">\n                                <div className=\"m\">\n                                    {this.props.m}\n                                </div>\n                                <p className=\"control\">\n                                     <input\n                                        type=\"number\"\n                                        id={this.props.id+\"-num\"}\n                                        value={num_value}\n                                        className=\"input is-small\"\n                                        onChange={event => this.props.onInputChange(parseInt(event.target.value))}\n                                        disabled={nul_val}\n                                    />\n                                </p>\n                            </div>\n                            {null_box}\n                        </div>\n                        <div className=\"info-container\">\n                            <i className=\"fas fa-info-circle\"></i>\n                            <div className=\"input-info\">\n                                {this.props.helperText}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport class EvaluatorForm extends React.Component {\n    reportChange(which_aspect, value, distance=null) {\n        this.props.changeHandler(which_aspect, value, distance);\n    }\n\n    reportNullChange(which_aspect, value) {\n        if(value===false) {\n            this.reportChange(which_aspect, 0);\n        } else {\n            this.reportChange(which_aspect, false);\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"block content evaluator-form\">\n                <div className=\"form-container\">\n                    <h3>Planet Evaluation</h3>\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Base Planet\"\n                        num_value={this.props.values.BASE_PLANET_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.BASE_PLANET_MOD, value)}\n                        helperText=\"Base value of each planet.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Resources\"\n                        num_value={this.props.values.RESOURCES_MULTIPLIER}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.RESOURCES_MULTIPLIER, value)}\n                        helperText=\"Number to multiply planet resource value by.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Influence\"\n                        num_value={this.props.values.INFLUENCE_MULTIPLIER}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.INFLUENCE_MULTIPLIER, value)}\n                        helperText=\"Number to multiply planet influence value by.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Tech\"\n                        num_value={this.props.values.TECH_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_MOD, value)}\n                        helperText=\"Number to add if the planet has a tech specialty.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Propulsion Tech\"\n                        num_value={this.props.values.TECH_PROPULSION_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_PROPULSION_MOD, value)}\n                        helperText=\"Number to add if the planet has a propulsion tech specialty.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Warfare Tech\"\n                        num_value={this.props.values.TECH_WARFARE_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_WARFARE_MOD, value)}\n                        helperText=\"Number to add if the planet has a warfare tech specialty.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Biotic Tech\"\n                        num_value={this.props.values.TECH_BIOTIC_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_BIOTIC_MOD, value)}\n                        helperText=\"Number to add if the planet has a biotic tech specialty.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Cybernetic Tech\"\n                        num_value={this.props.values.TECH_CYBERNETIC_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_CYBERNETIC_MOD, value)}\n                        helperText=\"Number to add if the planet has a cybernetic tech specialty.\"\n                    />\n                    <div className=\"field line-container\">\n                        <div>\n                            <label className=\"label\">Planet Eval Strategy:</label>\n                        </div>\n                        <div>\n                            <div className=\"field is-grouped\">\n                                <div className=\"field is-horizontal\">\n                                    <p className=\"control\">\n                                        <span className=\"select is-small\">\n                                            <select\n                                                value={this.props.values.PLANET_STRATEGY}\n                                                onChange={event => this.reportChange(\n                                                    EVAL_ASPECTS.PLANET_STRATEGY, event.target.value\n                                                )}\n                                            >\n                                                <option\n                                                    value={PLANET_EVAL_STRATEGIES.SUM}\n                                                    key={PLANET_EVAL_STRATEGIES.SUM}\n                                                >\n                                                    Sum\n                                                </option>\n                                                <option\n                                                    value={PLANET_EVAL_STRATEGIES.GREATEST}\n                                                    key={PLANET_EVAL_STRATEGIES.GREATEST}\n                                                >\n                                                    Greatest\n                                                </option>\n                                                <option\n                                                    value={PLANET_EVAL_STRATEGIES.GREATEST_PLUS_TECH}\n                                                    key={PLANET_EVAL_STRATEGIES.GREATEST_PLUS_TECH}\n                                                >\n                                                    Greatest+Tech\n                                                </option>\n                                            </select>\n                                        </span>\n                                    </p>\n                                </div>\n                                <div className=\"info-container\">\n                                    <i className=\"fas fa-info-circle\"></i>\n                                    <div className=\"input-info\">\n                                        How to combine resources, influence and tech values above.\n                                        <br /><br />Sum = R+I+T\n                                        <br /><br />Greatest = largest of R/I/T\n                                        <br /><br />Greatest+Tech = largest of R/I, +T\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Resources > 0\"\n                        num_value={this.props.values.NONZERO_RESOURCES_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.NONZERO_RESOURCES_MOD, value)}\n                        helperText=\"Number to add if planet resource value is greater than 0.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Influence > 0\"\n                        num_value={this.props.values.NONZERO_INFLUENCE_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.NONZERO_INFLUENCE_MOD, value)}\n                        helperText=\"Number to add if planet influence value is greater than 0.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Cultural Trait\"\n                        num_value={this.props.values.TRAIT_CULTURAL_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TRAIT_CULTURAL_MOD, value)}\n                        helperText=\"Number to add if the planet has the cultural trait.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Hazardous Trait\"\n                        num_value={this.props.values.TRAIT_HAZARDOUS_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TRAIT_HAZARDOUS_MOD, value)}\n                        helperText=\"Number to add if the planet has the hazardous trait.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Industrial Trait\"\n                        num_value={this.props.values.TRAIT_INDUSTRIAL_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TRAIT_INDUSTRIAL_MOD, value)}\n                        helperText=\"Number to add if the planet has the industrial trait.\"\n                    />\n                    <h3>System Evaluation</h3>\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Single Planet System\"\n                        num_value={this.props.values.SINGLE_PLANET_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.SINGLE_PLANET_MOD, value)}\n                        helperText=\"Number to add if the system has exactly 1 planet.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Multi-planet System\"\n                        num_value={this.props.values.MULTI_PLANET_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.MULTI_PLANET_MOD, value)}\n                        helperText=\"Number to add if the system has more than 1 planet.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Matching Planets System\"\n                        num_value={this.props.values.MATCHING_PLANETS_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.MATCHING_PLANETS_MOD, value)}\n                        helperText=\"Number to add if a system has 2 planets with the same trait.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Non-Matching Planets System\"\n                        num_value={this.props.values.NONMATCHING_PLANETS_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.NONMATCHING_PLANETS_MOD, value)}\n                        helperText=\"Number to add if a system has 2 planets with different traits.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Mecatol Rex System\"\n                        num_value={this.props.values.MECATOL_REX_SYS_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.MECATOL_REX_SYS_MOD, value)}\n                        helperText=\"Number to add if the system contains Mecatol Rex.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Legendary Planet System\"\n                        num_value={this.props.values.LEGENDARY_PLANET_SYS_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.LEGENDARY_PLANET_SYS_MOD, value)}\n                        helperText=\"Number to add if the system contains a Legendary Planet.\"\n                    />\n                    <h3>Home to System Distance Evaluation</h3>\n                    <h4>Distance Measurement</h4>\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Distance Base\"\n                        num_value={this.props.values.DISTANCE_MOD_BASE}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_BASE, value)}\n                        helperText=\"Base distance unit for every space moved through.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Planet\"\n                        num_value={this.props.values.DISTANCE_MOD_PLANET}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_PLANET, value)}\n                        helperText=\"Distance modifier for systems with 1 or more planets.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_PLANET, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Empty Space\"\n                        num_value={this.props.values.DISTANCE_MOD_EMPTY}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_EMPTY, value)}\n                        helperText=\"Distance modifier for empty space systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_EMPTY, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Supernova\"\n                        num_value={this.props.values.DISTANCE_MOD_SUPERNOVA}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_SUPERNOVA, value)}\n                        helperText=\"Distance modifier for supernova systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_SUPERNOVA, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Asteroid\"\n                        num_value={this.props.values.DISTANCE_MOD_ASTEROID_FIELD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_ASTEROID_FIELD, value)}\n                        helperText=\"Distance modifier for asteroid field systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_ASTEROID_FIELD, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Gravity Rift\"\n                        num_value={this.props.values.DISTANCE_MOD_GRAVITY_RIFT}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_GRAVITY_RIFT, value)}\n                        helperText=\"Distance modifier for gravity rift systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_GRAVITY_RIFT, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Wormholes Without Planets\"\n                        num_value={this.props.values.DISTANCE_MOD_EMPTY_WORMHOLE}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_EMPTY_WORMHOLE, value)}\n                        helperText=\"Distance modifier for wormhole systems without planets.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_EMPTY_WORMHOLE, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Wormholes With a Planet\"\n                        num_value={this.props.values.DISTANCE_MOD_PLANET_WORMHOLE}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_PLANET_WORMHOLE, value)}\n                        helperText=\"Distance modifier for wormhole systems with a planet.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_PLANET_WORMHOLE, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Nebula\"\n                        num_value={this.props.values.DISTANCE_MOD_NEBULA}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_NEBULA, value)}\n                        helperText=\"Distance modifier for nebula systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_NEBULA, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Opponent Adj Sys\"\n                        num_value={this.props.values.DISTANCE_MOD_ADJACENT_TO_OPPONENT}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_ADJACENT_TO_OPPONENT, value)}\n                        helperText=\"Distance modifier for systems adjacent to your opponents' home systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_ADJACENT_TO_OPPONENT, value)}\n                    />\n                    <h4>System Value Multipliers Based on Modified Distance</h4>\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of <1\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[0]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 0)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 0 or less.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 1\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[1]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 1)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 1.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 2\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[2]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 2)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 2.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 3\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[3]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 3)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 3.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 4\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[4]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 4)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 4.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 5\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[5]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 5)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 5.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 6\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[6]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 6)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 6.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 7\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[7]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 7)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 7.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 8\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[8]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 8)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 8.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 9\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[9]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 9)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 9.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 10+\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[10]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 10)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is greater than 9.\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport $ from 'jquery';\n\nimport {\n    JSONDownloadButton,\n    JSONUploadButton,\n} from \"../download-helpers\";\nimport {BaseEditor} from \"./base-editor\";\nimport {EvaluatorForm, EVAL_ASPECTS} from '../evaluator-components';\nimport default_evaluators from '../data/default_evaluators.json';\nimport ls from \"local-storage\";\n\nwindow.jQuery = $;\n\nexport class EvaluationEditor extends BaseEditor {\n    constructor(props) {\n        super(props);\n        this.default_evaluators = default_evaluators;\n        this.state.values = Object.assign({}, this.default_evaluators[0].data);\n        if(this.props.state_to_import) {\n            let matching_options = this.getOptions().filter(option => option.index === this.props.state_to_import.selected_item);\n            if (matching_options.length > 0) {\n                this.state = this.props.state_to_import;\n            }\n        }\n    }\n\n    changeHandler(which_aspect, value, distance) {\n        let new_values = Object.assign(this.state.values);\n        if(which_aspect === EVAL_ASPECTS.DISTANCE_MULTIPLIER) {\n            new_values[which_aspect][distance] = value;\n        } else {\n            new_values[which_aspect] = value;\n        }\n        this.setState({\"values\": new_values});\n    }\n\n    setValues(new_values) {\n        this.setState({\n            \"values\": Object.assign({}, new_values),\n        });\n    }\n\n    isSelectNew(selected_item=null) {\n        if(selected_item !== null) return selected_item===\"new\";\n        return this.getSelectValue() === \"new\";\n    }\n\n    getNewStringValue() {\n        return \"new\";\n    }\n\n    handleSelectChange() {\n        let new_value = this.getSelectValue();\n        if(new_value === \"new\") {\n            this.setValuesFull(Object.assign({}, this.default_evaluators[0]));\n        } else {\n            let valIndex = parseInt(new_value);\n            this.setValuesFull(Object.assign({}, this.state.saved_data[valIndex]), new_value);\n        }\n    }\n\n    setValuesFull(data, selected_item=\"new\", new_eval=null) {\n        if(new_eval===null) new_eval = data.data;\n        let loadedTitle = data.title;\n        let new_message = this.props.subject+\" '\"+loadedTitle+\"' displayed.\";\n        this.setValues(new_eval);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": selected_item.toString(),\n        });\n    }\n\n    getCurrentLayoutJSON() {\n        let l_title = \"Untitled Evaluator\";\n        if($('#layout-title').val() !== '') {\n            l_title = $('#layout-title').val();\n        }\n        return {\n            \"title\": l_title,\n            \"data\": Object.assign(this.state.values),\n        };\n    }\n\n    deleteAll() {\n        ls.remove(this.props.storage_key);\n        this.setValuesFull(Object.assign({}, this.default_evaluators[0]));\n        this.setState({\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n            \"selected_item\": this.getNewStringValue(),\n            \"input_title\": \"\",\n            \"message\": \"All saved \"+this.props.subject_plural+\" have been deleted.\",\n        });\n    }\n\n    deleteCurrent() {\n        let currentIndex = this.getSelectValue();\n        let saved_data = Object.assign([], this.state.saved_data);\n        let toDel = saved_data.splice(parseInt(currentIndex), 1)[0];\n        ls.set(this.props.storage_key, saved_data);\n        this.setValuesFull(Object.assign(this.default_evaluators[0]));\n        this.setState({\n            \"input_title\": \"\",\n            \"selected_item\": this.getNewStringValue(),\n            \"message\": this.props.subject+\" '\"+toDel.title+\"' deleted.\",\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n        });\n    }\n\n    loadDefault(index) {\n        let toLoad = this.default_evaluators[index];\n        let new_values = toLoad.data;\n        let loadedTitle = toLoad.title;\n        let new_message = \"Default evaluator '\"+loadedTitle+\"' displayed.\";\n        this.setValues(new_values);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": this.getNewStringValue(),\n        });\n    }\n\n    addLayoutsFromJSON(data) {\n        if(data.length>0) {\n            let saved_data = Object.assign([], this.state.saved_data);\n            for(let dataToSave of data) {\n                saved_data.push(dataToSave);\n            }\n            ls.set(this.props.storage_key, saved_data);\n            this.setValuesFull(saved_data[saved_data.length-1], saved_data.length-1);\n            this.setState({\n                \"saved_data\": ls.get(this.props.storage_key) || [],\n                \"message\": \"Evaluators loaded.\",\n                \"selected_item\": saved_data.length-1,\n                \"input_title\": saved_data[saved_data.length-1].title,\n            });\n        } else {\n            this.setState({\"message\": \"There were no \"+this.props.subject_plural+\" to load.\"})\n        }\n    }\n\n    getOptions() {\n        let options = [{\n            \"index\": \"new\",\n            \"title\": \"New Evaluator\",\n        }];\n        for(let [index, one_saved] of this.state.saved_data.entries()) {\n            options.push({\n                \"index\": index.toString(),\n                \"title\": one_saved.title,\n            });\n        }\n        return options;\n    }\n\n    render() {\n        let options = [];\n        for(let opt of this.getOptions()) {\n            options.push(\n                <option value={opt.index} key={opt.index}>{opt.title}</option>\n            );\n        }\n        let defaults = [];\n        for(let [index, one_default] of this.default_evaluators.entries()) {\n            defaults.push(\n                <p className=\"control\" key={index}>\n                    <button\n                        className=\"button is-small is-link\"\n                        onClick={()=>this.loadDefault(index)}\n                        key={\"default_layout_\"+index}\n                    >\n                        {one_default.title}\n                    </button>\n                </p>\n            )\n        }\n\n        return(\n            <div className=\"block\">\n                <h2 className=\"title is-size-4\">Evaluator Editor</h2>\n                <div className=\"block map-lab-control-panel\">\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Default Evaluators:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                {defaults}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Saved Evaluators:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <span className=\"select is-small\">\n                                        <select\n                                            id=\"layout-select\"\n                                            value={this.state.selected_item}\n                                            onChange={()=>this.handleSelectChange()}\n                                        >\n                                            {options}\n                                        </select>\n                                    </span>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download All\"\n                                        getDownloadInfo={()=>this.getAllLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button onClick={()=>this.deleteAll()} className=\"button is-small\">\n                                        Delete All\n                                    </button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONUploadButton\n                                        id=\"layout-json-upload\"\n                                        title=\"Upload\"\n                                        handleJSON={(data)=>this.addLayoutsFromJSON(data)}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Evaluator Title:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <input\n                                        type=\"text\"\n                                        id=\"layout-title\"\n                                        value={this.state.input_title}\n                                        className=\"input is-small\"\n                                        onChange={function() {\n                                            this.setState(\n                                                {\n                                                    \"input_title\": document.getElementById(\"layout-title\").value,\n                                                    \"message\": \"\"\n                                                }\n                                            );\n                                        }.bind(this)}\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.saveCurrent()}>Save</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.handleSelectChange()}>Reset</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button\n                                        onClick={()=>this.deleteCurrent()}\n                                        disabled={this.isSelectNew(this.state.selected_item)}\n                                        className=\"button is-small\"\n                                    >Delete</button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download\"\n                                        getDownloadInfo={()=>this.getCurrentLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    {this.getMessageHtml()}\n\n                </div>\n                <EvaluatorForm\n                    values={this.state.values}\n                    changeHandler={(which_aspect, value, distance)=>this.changeHandler(which_aspect, value, distance)}\n                />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"./styles/map-lab.scss\";\nimport {MapEditor} from \"./editors/map-editor\";\nimport {LayoutEditor} from './editors/layout-editor';\nimport {EvaluationEditor} from \"./editors/eval-editor\";\n\nimport $ from \"jquery\";\nwindow.jQuery = $;\n\nconst SCREENS = {\n    \"MAP_EDITOR\": 1,\n    \"LAYOUT_EDITOR\": 2,\n    \"SYSTEM_EVALUATOR\": 3,\n    \"INSTRUCTIONS\": 4,\n};\n\nfunction toggleMenu() {\n    $(\".navbar-burger\").toggleClass(\"is-active\");\n    $(\".navbar-menu\").toggleClass(\"is-active\");\n}\n\n\nclass MapLabNavigator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"active_screen\": SCREENS.MAP_EDITOR,\n        };\n        this.map_state = null;\n        this.layout_state = null;\n        this.eval_state = null;\n    }\n\n    storeState(which_screen, state) {\n        switch(which_screen) {\n            case SCREENS.SYSTEM_EVALUATOR:\n                this.eval_state = state;\n                break;\n            case SCREENS.LAYOUT_EDITOR:\n                this.layout_state = state;\n                break;\n            case SCREENS.MAP_EDITOR:\n                this.map_state = state;\n                console.log(state);\n                break;\n            default:\n                break;\n        }\n    }\n\n    changeScreen(new_screen) {\n        this.setState({\n            \"active_screen\": new_screen,\n        });\n    }\n\n    render() {\n        let screen_return = null;\n        switch(this.state.active_screen) {\n            case SCREENS.MAP_EDITOR:\n                screen_return = (\n                    <MapEditor\n                        storage_key=\"maps\"\n                        subject=\"Map\"\n                        subject_plural=\"Maps\"\n                        layout_storage_key=\"layouts\"\n                        eval_storage_key=\"evaluators\"\n                        state_to_import={this.map_state}\n                        sendStateBeforeDeath={(state_to_store)=>this.storeState(SCREENS.MAP_EDITOR, state_to_store)}\n                    />\n                );\n                break;\n            case SCREENS.LAYOUT_EDITOR:\n                screen_return = (\n                    <LayoutEditor\n                        storage_key=\"layouts\"\n                        subject=\"Layout\"\n                        subject_plural=\"Layouts\"\n                        state_to_import={this.layout_state}\n                        sendStateBeforeDeath={(state_to_store)=>this.storeState(SCREENS.LAYOUT_EDITOR, state_to_store)}\n                    />\n                );\n                break;\n            case SCREENS.SYSTEM_EVALUATOR:\n                screen_return = (\n                    <EvaluationEditor\n                        storage_key=\"evaluators\"\n                        subject=\"Evaluator\"\n                        subject_plural=\"Evaluators\"\n                        state_to_import={this.eval_state}\n                        sendStateBeforeDeath={(state_to_store)=>this.storeState(SCREENS.SYSTEM_EVALUATOR, state_to_store)}\n                    />\n                );\n                break;\n            case SCREENS.INSTRUCTIONS:\n                screen_return = (\n                    <div className=\"block content\">\n                        <h2>Getting Started</h2>\n                        <h3>Basic Map Generation</h3>\n                        <ol>\n                            <li>Go to the Map Editor screen (the default screen).</li>\n                            <li>If you don't want the default 6-player map, choose another \"new from\" option under\n                                \"Saved/Defaults\"</li>\n                            <li>Scroll down and click \"Auto-Complete Map.\"</li>\n                            <li>Click the \"Improve Balance\" button a few times to make the map more fair according to the\n                                current Evaluator algorithm. The number in each Home System represents the strength of that\n                                home system's position based on the quality of and distance from systems on the map.</li>\n                            <li>Change \"Joebrew\" to another evaluator to get a different view on the\n                                strength of the home system positions.</li>\n                            <li>Drag and drop systems to switch them with each other as you wish (On mobile, click a\n                                system to send it back to the system bank, or click a space to put the currently selected\n                                system bank system in that space.)</li>\n                            <li>Name your map via \"Map Title\" and click \"Save\" at the top. Saves in your browser only.\n                                Can be loaded in the future from the \"Saved/Defaults\" dropdown.</li>\n                            <li>Copy the Map String or download the json file to share.</li>\n                        </ol>\n                        <h3>Building a Map From Scratch</h3>\n                        <ol>\n                            <li>Choose the layout you want to build from the \"Saved/Defaults\" dropdown.</li>\n                            <li>Scroll down to the System Bank and select the first system you want to place. (Suggestion:\n                                Start with the wormholes.) The system appears under the dropdown.</li>\n                            <li>Drag the system to the space where you want it. (On mobile, just touch the space.)</li>\n                            <li>Continue the above steps until you've placed all the systems you care about.</li>\n                            <li>Choose the desired blue/red target ratio from the dropdown under Auto-Complete.</li>\n                            <li>Click Auto-Complete to fill out the rest of the map.</li>\n                            <li>Change the \"Simple Slice\" dropdown to another evaluator algorithm for different perspectives\n                                on the strength of each home space's position.</li>\n                            <li>Use the \"Lock\" checkboxes to fix certain spaces in place, before clicking \"Improve Balance\"\n                                a few times to improve the overall system allocation.</li>\n                            <li>Don't forget to save your map at the top early and often.</li>\n                        </ol>\n                        <h3>Creating New Layouts</h3>\n                        <ol>\n                            <li>Choose \"Layout Editor\" at the top.</li>\n                            <li>Click spaces to cycle through \"open\" (open for systems), home system, closed, and\n                                Mecatol Rex.</li>\n                            <li>Use the checkboxes under \"Click Cycle\" to also include things like warp (hyperlane)\n                                hexes, anomalies, and/or wormholes.</li>\n                            <li>Be sure to name and save your layout. Once saved, as long as it doesn't have nonsensical\n                                warp hexes, it will appear in the map editor under its own \"New from...\" option.</li>\n                        </ol>\n                        <h3>Customize an Evaluator</h3>\n                        <ol>\n                            <li>Use the \"System Evaluator\" menu item at the top to make your own custom evaluations of\n                                planets, systems, and home system positions.</li>\n                            <li>The variables under \"Planet Evaluation\" define how much a planet is worth.</li>\n                            <li>The variables under \"System Evaluation\" define how much a system is worth by taken\n                                their planet values and adding these modifiers.</li>\n                            <li>The variables under \"Home to System Distance Evaluation\" define how far (in an abstracted\n                                sense) a home system is to each system, based on the kinds of hexes it has to go through\n                                to get there. \"Distance Base\" is added for every hex that must be moved into. The other modifiers,\n                                if set ot 1 or more, will increase that base hex number for those types of hexes. (Example:\n                                The path to a 2-planet system is through empty space, then through a nebula. In the evaluator, Base Hex\n                                is set to 2, empty space is set to 0, and nebula is set to 1. Therefore, it is 2 distance\n                                to move into the empty space, 3 to move into the nebula, and 2 to move into the 2-planet system.\n                                Therefore, the total modified distance is 7, even though the physical distance is only\n                                three hexes.)</li>\n                            <li>The variables under \"System Value Multipliers Based on Distance\" define what to multiply\n                                a system's worth by, based on the modified distance it is from a home system. Any modified\n                                distance above 10 is not eligible to hold value to the home system.</li>\n                            <li>Don't forget to save your evaluator. Then, it will show up uner the \"Improve Balance\" dropdown\n                                on the Map Editor screen.</li>\n                        </ol>\n                    </div>\n                );\n                break;\n            default:\n                break;\n        }\n\n\n        return(\n            <div className=\"block map-lab\">\n                <nav className=\"navbar is-primary\">\n                    <div className=\"navbar-brand\">\n                        <h1 className=\"title is-3 is-marginless\">TI4 Map Lab</h1>\n                        {/*eslint-disable-next-line*/}\n                        <a\n                            role=\"button\"\n                            className=\"navbar-burger is-\"\n                            aria-label=\"menu\"\n                            aria-expanded=\"false\"\n                            onClick={()=>toggleMenu()}\n                        >\n                            <span aria-hidden=\"true\"></span>\n                            <span aria-hidden=\"true\"></span>\n                            <span aria-hidden=\"true\"></span>\n                        </a>\n                    </div>\n                    <div className=\"navbar-menu\">\n                        <div className=\"navbar-start\">\n                        </div>\n                            <div className=\"navbar-end\">\n                                {/*eslint-disable-next-line*/}\n                                <a role=\"button\"\n                                    disabled={this.state.active_screen===SCREENS.INSTRUCTIONS}\n                                    onClick={()=>this.changeScreen(SCREENS.INSTRUCTIONS)}\n                                    className=\"navbar-item\"\n                                >\n                                    Instructions\n                                </a>\n                                {/*eslint-disable-next-line*/}\n                                <a role=\"button\"\n                                    disabled={this.state.active_screen===SCREENS.MAP_EDITOR}\n                                    onClick={()=>this.changeScreen(SCREENS.MAP_EDITOR)}\n                                    className=\"navbar-item\"\n                                >\n                                    Map Editor\n                                </a>\n                                {/*eslint-disable-next-line*/}\n                                <a role=\"button\"\n                                    disabled={this.state.active_screen===SCREENS.LAYOUT_EDITOR}\n                                    onClick={()=>this.changeScreen(SCREENS.LAYOUT_EDITOR)}\n                                    className=\"navbar-item\"\n                                >\n                                    Layout Editor\n                                </a>\n                                {/*eslint-disable-next-line*/}\n                                <a role=\"button\"\n                                    disabled={this.state.active_screen===SCREENS.SYSTEM_EVALUATOR}\n                                    onClick={()=>this.changeScreen(SCREENS.SYSTEM_EVALUATOR)}\n                                    className=\"navbar-item\"\n                                >\n                                    System Evaluator\n                                </a>\n                        </div>\n                    </div>\n                </nav>\n                {screen_return}\n            </div>\n        );\n    }\n\n}\n\nReactDOM.render(\n    <MapLabNavigator />,\n    document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}