{"version":3,"sources":["serviceWorker.js","data/tile_data.js","data/warp_data.js","map-components.js","map-logic.js","download-helpers.js","editors/base-editor.js","utilities.js","editors/map-editor.js","editors/layout-editor.js","evaluator-components.js","editors/eval-editor.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","PLANET_TRAITS","TECH_SPECIALTIES","ANOMALIES","WORMHOLES","planet_data","system_data","WARP_DIRECTIONS","warp_configs","NORTH","SOUTHEAST","SOUTH","SOUTHWEST","NORTHEAST","NORTHWEST","getHexSizeFromScreen","innerWidth","SystemBankComponent","int_select","document","getElementById","options","selectedIndex","value","new_value","this","getSelectValue","props","setActiveSystem","systems","getSystemByID","parseInt","hexSize","key","system","push","id","getStringName","selected_value","system_to_display","className","active_system","format","system_format","posStyle","onClick","draggable","onDrag","event","onSelectedSystemDrag","onDragEnd","onSystemDragEnd","onDrop","onSystemDropped","eval_variables","onDragOver","preventDefault","onChange","handleSelectChange","disabled","selectNoSystems","React","Component","MapComponent","system_box","setState","Object","assign","updateDimensions","addEventListener","bind","removeEventListener","mapHeight","hexSpace","mapWidth","mapCenterH","mapCenterV","display","index","space","is_draggable","type","MAP_SPACE_TYPES","SYSTEM","systems_draggable","isMecatolRexSystem","home_value","HOME","home_values","toString","clickedSpace","onSystemDrag","map","spaces","entries","mapStyle","map_class","style","HexComponent","onDragStart","hexClass","points","svgElements","children","MapSpaceComponent","spaceOffsetV","spaceOffsetH","x","y","z","getPositionStyle","OPEN","home_text","CLOSED","WARP","warps","warp_spaces","WarpComponent","coords","warp_lines","one_warp","start_coords","get_endpoint_coords","end_coords","x1","y1","x2","y2","SYSTEM_FORMATS","SystemComponent","id_div","extras","value_div","isBlue","evaluate","wormhole","anomaly","rex_class","hex_props","ID_ONLY","STREAMLINED_WITH_NAME","planets","planet","name","PLANET_FORMATS","STREAMLINED","COLORBLIND_FRIENDLY","COLORBLIND_FRIENDLY_WITH_NAME","PlanetComponent","trait_class","trait_abbr","trait","tech_class","tech_abbr","tech_specialty","name_stuff","values","resources","influence","PLANET_EVAL_STRATEGIES","Planet","obj_data","variables","v","data","BASE_PLANET_MOD","r","RESOURCES_MULTIPLIER","i","INFLUENCE_MULTIPLIER","t","TECH_MOD","TECH_WARFARE_MOD","TECH_PROPULSION_MOD","TECH_BIOTIC_MOD","TECH_CYBERNETIC_MOD","PLANET_STRATEGY","GREATEST","to_add","AVERAGE","high_one","NONZERO_RESOURCES_MOD","NONZERO_INFLUENCE_MOD","TRAIT_CULTURAL_MOD","TRAIT_HAZARDOUS_MOD","TRAIT_INDUSTRIAL_MOD","PlanetBox","one_planet_data","one_planet","System","planet_box","planet_name","plToAdd","getPlanetByName","length","SINGLE_PLANET_MOD","MULTI_PLANET_MOD","MATCHING_PLANETS_MOD","NONMATCHING_PLANETS_MOD","MECATOL_REX_SYS_MOD","DISTANCE_MOD_BASE","DISTANCE_MOD_PLANET","DISTANCE_MOD_PLANET_WORMHOLE","DISTANCE_MOD_EMPTY_WORMHOLE","DISTANCE_MOD_EMPTY","DISTANCE_MOD_ASTEROID_FIELD","DISTANCE_MOD_GRAVITY_RIFT","DISTANCE_MOD_NEBULA","DISTANCE_MOD_SUPERNOVA","isRed","name_array","join","SystemBox","one_system_data","total","splice","sysindex","getSystemIndexByID","new_system_box","one_system","systems_to_return","one_sys","getDistanceMultiplier","modded_distance","d","DISTANCE_MULTIPLIER","Map","load_default","starting_space","iterations","addAdjacentSpaces","new_map","one_space","new_space","MapSpace","system_id","getSpaceBySystemID","one_warp_dir","doesWarpDirectionConnect","warp_direction","checked_spaces","spaceItGoes","getObjFromCoord","getWarpDirectionCoordinates","areCoordsInList","oppositeDirection","directions_to_check","one_next_warp","one_direction","is_legal","map_space","getAdjacentSystems","home_total","spaces_to_get_to","shortest_distance","_getShortestModdedDistance","start_space","dest_space","finished_paths","act_paths","first_steps","getAdjacentSystemsIncludingWormholes","one_step","getDistanceModifier","getMapDistanceModifier","new_path","new_active_paths","one_path","results","_extendPath","finished","one_done","ongoing","one_ongoing","first_yet","shortest","path_length","_calculateModdedDistanceFromRaw","path","completed_paths","ongoing_paths","last_step","next_steps","path_copy","modded_dist","one_index","adj_spaces","getAdjacentSpacesIncludingWormholes","DISTANCE_MOD_ADJACENT_TO_OPPONENT","coords_to_add","adjacent_coords","getAdjacentCoordinates","one_adjacent_coords","one_coords_to_add","system_space","warp_space","adj_systems","direction_from","warps_to_follow","one_warp_direction","next_space","farther_systems","_getAdjacentSpacesThroughWarps","one_far_sys","getAdjacentSpaces","adj_coords","potential_space","potential_systems","one_system_space","wh_systems","getMatchingWormholeSpaces","one_whs","matching_spaces","list","existing_coords","JSONDownloadButton","string","downloadInfo","getDownloadInfo","filename","text","element","createElement","setAttribute","encodeURIComponent","body","appendChild","click","removeChild","download","replace","toLowerCase","JSON","stringify","downloadJSON","title","JSONUploadButton","fr","FileReader","readAsText","files","onload","oFREvent","handleJSON","parse","target","result","handleUpload","jQuery","$","BaseEditor","default_layouts","ls","get","storage_key","getNewStringValue","sendStateBeforeDeath","one_space_data","space_system","spaces_data","space_data","l_title","val","getJSONDataFromSpaces","getCurrentLayoutJSON","subject_plural","selected_item","getLayoutFromJSON","loadedTitle","new_message","subject","setMap","saved_data","dataToSave","set","setLayout","currentIndex","new_selected","split","toDel","getNewLayout","remove","syncBankSystems","compareByID","a","b","MapEditor","starting_layout","selected_bank_system","draggedSystem","option_pair_wormholes","option_include_all_wormholes","target_blue_total","bank_systems","eval_option","default_variables","balance_difference","map_string","balance_options","long_op","state_to_import","matching_options","getOptions","filter","option","matching_evals","getEvalOptions","eval_var","isComplete","getHomeValues","getBalanceDifference","getMapString","containsSystem","sort","new_check","getSelectNewMapValue","getSelectNewMapType","loadCustomLayout","loadDefault","valIndex","e_kind","e_index","e_var","eval_storage_key","substr","message","space_index","makeCopy","is_changed","old_space","replaced_system","isChecked","checked","int_value","toLoad","layout_storage_key","final_string","is_first","map_string_order","one_coor","new_bank","id_list","one_id_string","one_id","newState","isChanged","replacement_system","setTimeout","autoComplete","map_history","gotamap","_autoCompleteSteps","current_history","steps_forward","current_try_total","backwards_length","starting_length","tries","new_history","_addOneSystem","steps_forward_add","pop","newest_history","avail_sys_pool","can_add","getWormholeSystems","getOpenSpacesTotal","total_needed","b_holes","a_holes","target_ratio","getPossibleSystemTotal","current_ratio","getBlueSystemTotal","getRedSystemTotal","replacement_pool","chosen_system","Math","floor","random","avail_space_pool","chosen_space_index","new_box","isLegal","evars","getHomeValue","max","min","one_home_key","hasOwnProperty","which_option","improveBalance","Promise","resolve","eligible_system_spaces","dont_move_wormholes","dont_move_anomalies","dont_move_empty","j","shuffle","found_it","new_hv","new_diff","one_default","evals","one_saved","one_custom_l","areWarpsLogical","is_complete","opt","eval_options","auto_complete_ratios","red_total","blue_total","open_spaces","blue_avail","red_avail","s","bal_diff","getAllLayoutJSONFileInfo","deleteAll","addLayoutsFromJSON","input_title","saveCurrent","deleteCurrent","isSelectNew","getCurrentLayoutJSONFileInfo","handleFormatDisplayChange","loadMapFromString","handleIncludeWormholesChange","htmlFor","handlePairWormholesChange","handleTargetRatioChange","autoCompleteStart","handleEvalChange","handleBalanceOptionChange","improveBalanceStart","setActiveBankSystem","LayoutEditor","show_warps","show_wormholes","show_anomalies","setNewLayout","go_next_type","_getNextWarp","_getNextSystem","keep_going","proposed_warp","proposed_config","one_coord","eligible_systems","current_id","defaults","handleWarpChange","handleWormholeChange","handleAnomaliesChange","EVAL_ASPECTS","EvaluatorLine","null_box","nul_val","num_value","hasNullBox","onNullChange","label","m","onInputChange","helperText","EvaluatorForm","which_aspect","distance","changeHandler","reportChange","SUM","GREATEST_PLUS_TECH","reportNullChange","EvaluationEditor","default_evaluators","new_values","setValuesFull","new_eval","setValues","SCREENS","MapLabNavigator","MAP_EDITOR","map_state","layout_state","eval_state","which_screen","SYSTEM_EVALUATOR","LAYOUT_EDITOR","new_screen","screen_return","active_screen","state_to_store","storeState","INSTRUCTIONS","role","aria-label","aria-expanded","toggleClass","aria-hidden","changeScreen","ReactDOM","render","URL","process","href","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.de3082d5.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","export const PLANET_TRAITS = {\n    \"HAZARDOUS\": 0,\n    \"INDUSTRIAL\": 1,\n    \"CULTURAL\": 2,\n};\n\nexport const TECH_SPECIALTIES = {\n    \"BIOTIC\": 0,\n    \"WARFARE\": 1,\n    \"PROPULSION\": 2,\n    \"CYBERNETIC\": 3,\n};\n\nexport const ANOMALIES = {\n    \"NEBULA\": 0,\n    \"GRAVITY_RIFT\": 1,\n    \"ASTEROID_FIELD\": 2,\n    \"SUPERNOVA\": 3,\n};\n\nexport const WORMHOLES = {\n    \"ALPHA\": 0,\n    \"BETA\": 1,\n    \"DELTA\": 2,\n};\n\nexport let planet_data = [\n    {\n        \"name\": \"Mecatol Rex\",\n        \"trait\": null,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 6,\n    },\n    {\n        \"name\": \"Abyz\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Fria\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Arinam\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Meer\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": TECH_SPECIALTIES.WARFARE,\n        \"resources\": 0,\n        \"influence\": 4,\n    },\n    {\n        \"name\": \"Arnor\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Lor\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Bereg\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Lirta IV\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Centauri\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Gral\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.PROPULSION,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Corneeq\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Resculon\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Dal Bootha\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Xxehan\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Lazar\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.CYBERNETIC,\n        \"resources\": 1,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Sakulag\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Lodor\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Mehar Xull\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": TECH_SPECIALTIES.WARFARE,\n        \"resources\": 1,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Mellon\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Zohbat\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"New Albion\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.BIOTIC,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Starpoint\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 3,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Quann\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Qucen'n\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Rarron\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Saudor\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Tar'Mann\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.BIOTIC,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Tequ'ran\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 0,\n    },\n    {\n        \"name\": \"Torkan\",\n        \"trait\": PLANET_TRAITS.CULTURAL,\n        \"tech_specialty\": null,\n        \"resources\": 0,\n        \"influence\": 3,\n    },\n    {\n        \"name\": \"Thibah\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.PROPULSION,\n        \"resources\": 1,\n        \"influence\": 1,\n    },\n    {\n        \"name\": \"Vefut II\",\n        \"trait\": PLANET_TRAITS.HAZARDOUS,\n        \"tech_specialty\": null,\n        \"resources\": 2,\n        \"influence\": 2,\n    },\n    {\n        \"name\": \"Wellon\",\n        \"trait\": PLANET_TRAITS.INDUSTRIAL,\n        \"tech_specialty\": TECH_SPECIALTIES.CYBERNETIC,\n        \"resources\": 1,\n        \"influence\": 2,\n    },\n\n];\n\nexport let system_data = [\n    {\n        \"id\": 18,\n        \"planets\": [\"Mecatol Rex\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 39,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": WORMHOLES.ALPHA\n    },\n    {\n        \"id\": 43,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.SUPERNOVA,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 46,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 49,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 44,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.ASTEROID_FIELD,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 40,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": WORMHOLES.BETA\n    },\n    {\n        \"id\": 48,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 45,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.ASTEROID_FIELD,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 47,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 42,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.NEBULA,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 50,\n        \"planets\": [],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 41,\n        \"planets\": [],\n        \"anomaly\": ANOMALIES.GRAVITY_RIFT,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 32,\n        \"planets\": [\"Dal Bootha\", \"Xxehan\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 26,\n        \"planets\": [\"Lodor\"],\n        \"anomaly\": null,\n        \"wormhole\": WORMHOLES.ALPHA\n    },\n    {\n        \"id\": 29,\n        \"planets\": [\"Qucen'n\", \"Rarron\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 38,\n        \"planets\": [\"Abyz\", \"Fria\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 22,\n        \"planets\": [\"Tar'Mann\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 21,\n        \"planets\": [\"Thibah\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 33,\n        \"planets\": [\"Corneeq\", \"Resculon\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 19,\n        \"planets\": [\"Wellon\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 28,\n        \"planets\": [\"Tequ'ran\", \"Torkan\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 24,\n        \"planets\": [\"Mehar Xull\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 37,\n        \"planets\": [\"Arinam\", \"Meer\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 30,\n        \"planets\": [\"Mellon\", \"Zohbat\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 20,\n        \"planets\": [\"Vefut II\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 27,\n        \"planets\": [\"New Albion\", \"Starpoint\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 23,\n        \"planets\": [\"Saudor\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 31,\n        \"planets\": [\"Lazar\", \"Sakulag\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 35,\n        \"planets\": [\"Bereg\", \"Lirta IV\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 34,\n        \"planets\": [\"Centauri\", \"Gral\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 36,\n        \"planets\": [\"Arnor\", \"Lor\"],\n        \"anomaly\": null,\n        \"wormhole\": null\n    },\n    {\n        \"id\": 25,\n        \"planets\": [\"Quann\"],\n        \"anomaly\": null,\n        \"wormhole\": WORMHOLES.BETA\n    },\n];\n\n","export const WARP_DIRECTIONS = {\n    \"NORTH\": {\"x\": 0, \"y\": 1, \"z\": -1},\n    \"NORTHEAST\": {\"x\": 1, \"y\": 0, \"z\": -1},\n    \"SOUTHEAST\": {\"x\": 1, \"y\": -1, \"z\": 0},\n    \"SOUTH\": {\"x\": 0, \"y\": -1, \"z\": 1},\n    \"SOUTHWEST\": {\"x\": -1, \"y\": 0, \"z\": 1},\n    \"NORTHWEST\": {\"x\": -1, \"y\": 1, \"z\": 0},\n};\n\nexport let warp_configs = [\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTH],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTH],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.NORTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHEAST],\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.NORTH, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.NORTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTH],\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.SOUTHEAST, WARP_DIRECTIONS.SOUTHWEST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTH],\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTHWEST],\n        [WARP_DIRECTIONS.SOUTH, WARP_DIRECTIONS.NORTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.SOUTHWEST, WARP_DIRECTIONS.NORTH],\n        [WARP_DIRECTIONS.SOUTHWEST, WARP_DIRECTIONS.NORTHEAST],\n        [WARP_DIRECTIONS.SOUTHWEST, WARP_DIRECTIONS.SOUTHEAST],\n    ],\n    [\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.SOUTHEAST],\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.SOUTH],\n        [WARP_DIRECTIONS.NORTHWEST, WARP_DIRECTIONS.NORTHEAST],\n    ],\n];","import React from 'react';\nimport {ANOMALIES, PLANET_TRAITS, TECH_SPECIALTIES, WORMHOLES} from \"./data/tile_data\";\nimport {warp_configs, WARP_DIRECTIONS} from \"./data/warp_data\";\n\nconst hexSpace = 6;\n\nfunction getHexSizeFromScreen() {\n    if(window.innerWidth >= 1024) {\n        return 110;\n    } else if(window.innerWidth >= 769) {\n        return 80;\n    } else {\n        return 55;\n    }\n}\n\nexport class SystemBankComponent extends React.Component {\n\n    getSelectValue() {\n        let int_select = document.getElementById(\"system-bank-select\");\n        return int_select.options[int_select.selectedIndex].value;\n    }\n\n    handleSelectChange() {\n        let new_value = this.getSelectValue();\n        if(new_value === \"none\") {\n            this.props.setActiveSystem(null);\n        } else {\n            this.props.setActiveSystem(\n                this.props.systems.getSystemByID(parseInt(new_value))\n            );\n        }\n    }\n\n    selectNoSystems() {\n        this.props.setActiveSystem(null);\n    }\n\n    render() {\n        let hexSize = getHexSizeFromScreen();\n\n        let options = [(<option value=\"none\" key=\"sys_none\">(none)</option>)];\n        for(let system of this.props.systems.systems) {\n            options.push(<option\n                value={system.id} key={\"sys_\"+system.id}\n            >{system.getStringName()}</option>)\n        }\n\n        let selected_value = \"none\";\n        let system_to_display = (<span className=\"hex-container\"></span>);\n        if(this.props.active_system!==null) {\n            selected_value = this.props.active_system.id;\n            system_to_display = (\n                <SystemComponent\n                    system={this.props.active_system}\n                    format={this.props.system_format}\n                    posStyle={{\"position\": \"relative\"}}\n                    onClick={()=>{}}\n                    hexSize={hexSize}\n                    draggable={true}\n                    onDrag={(event)=>this.props.onSelectedSystemDrag(event)}\n                    onDragEnd={(event)=>this.props.onSystemDragEnd(event)}\n                    onDrop={(event)=>this.props.onSystemDropped(event)}\n                    eval_variables={this.props.eval_variables}\n                />\n            );\n        }\n\n        return(\n                <div\n                    className=\"system-bank field\"\n                    onDragOver={(event)=>{event.preventDefault();}}\n                    onDrop={(event)=>this.props.onSystemDropped(event)}\n                >\n                    <label className=\"label\">\n                        System Bank\n                    </label>\n                    <p className=\"control\">\n                        <span className=\"select is-small\">\n                            <select\n                                id=\"system-bank-select\"\n                                value={selected_value}\n                                onChange={()=>this.handleSelectChange()}\n                            >\n                                {options}\n                            </select>\n                        </span>\n                    </p>\n                    <p className=\"control\">\n                        <button\n                            disabled={this.props.active_system===null}\n                            onClick={()=>this.selectNoSystems()}\n                            className=\"button is-small\"\n                        >\n                            Select None\n                        </button>\n                    </p>\n                    <div className=\"control\">\n                        {system_to_display}\n                    </div>\n                </div>\n        );\n    }\n}\n\nexport class MapComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"system_format\": this.props.system_format,\n            \"hexSize\": getHexSizeFromScreen(),\n        };\n        this.system_box = this.props.system_box;\n    }\n\n    updateDimensions() {\n        this.setState(Object.assign({}, this.state, {\"hexSize\": getHexSizeFromScreen()}));\n    }\n\n    componentDidMount() {\n        this.updateDimensions();\n        window.addEventListener(\"resize\", this.updateDimensions.bind(this));\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.updateDimensions.bind(this));\n    }\n\n\n    render() {\n        let hexSize = this.state.hexSize;\n        let mapHeight = hexSize*.866*7 + hexSpace*6;\n        let mapWidth = hexSize*5.5 + hexSpace*6;\n        let mapCenterH = mapWidth/2;\n        let mapCenterV = mapHeight/2;\n        let display=[];\n        for(let [index, space] of this.props.map.spaces.entries()) {\n            let is_draggable=false;\n            if(space.type===MAP_SPACE_TYPES.SYSTEM && this.props.systems_draggable) {\n                if(!space.system.isMecatolRexSystem()) is_draggable=true;\n            }\n            let home_value = null;\n            if(\n                space.type===MAP_SPACE_TYPES.HOME\n                &&\n                this.props.home_values !== null\n                &&\n                (this.props.home_values && index.toString() in this.props.home_values)\n            ) {\n                home_value = this.props.home_values[index.toString()];\n            }\n\n            display.push(\n                <MapSpaceComponent\n                    space={space}\n                    key={\"map_space_\"+index}\n                    system_format={this.props.system_format}\n                    onClick={()=>this.props.clickedSpace(index)}\n                    hexSize={hexSize}\n                    mapCenterH={mapCenterH}\n                    mapCenterV={mapCenterV}\n                    draggable={is_draggable}\n                    onDrag={(event)=>this.props.onSystemDrag(event, space.system)}\n                    onDragEnd={(event)=>this.props.onSystemDragEnd(event)}\n                    onDrop={(event)=>{if(this.props.systems_draggable) this.props.onSystemDropped(event, index);}}\n                    eval_variables={this.props.eval_variables}\n                    home_value={home_value}\n                />\n            );\n        }\n\n        let mapStyle = {\n            \"width\": mapWidth+\"px\",\n            \"height\": mapHeight+\"px\",\n        };\n        return (\n            <div className={\"map \"+this.props.map_class} style={mapStyle}>\n                {display}\n            </div>\n        );\n    }\n}\n\nexport const MAP_SPACE_TYPES = {\n    \"OPEN\": 1,\n    \"HOME\": 2,\n    \"SYSTEM\": 3,\n    \"CLOSED\": 4,\n    \"WARP\": 5,\n};\n\nexport class HexComponent extends React.Component {\n    onDrop(event) {\n        if(this.props.onDrop) {\n            this.props.onDrop(event);\n        }\n    }\n\n    render() {\n        let hexSize = this.props.hexSize;\n        return(\n            <div\n                className=\"hex-container\"\n                style={this.props.posStyle}\n                draggable={this.props.draggable}\n                onDragStart={(event)=>this.props.onDrag(event)}\n                onDragEnd={(event)=>this.props.onDragEnd(event)}\n            >\n                <svg className=\"shape-container\">\n                    <polygon\n                        onClick={()=>this.props.onClick()}\n                        className={\"hexagon \"+this.props.hexClass}\n                        points={\n                            (hexSize)+\", \"+(hexSize*.433)+\" \"+\n                            (hexSize*.75)+\", \"+(hexSize*.866)+\" \"+\n                            (hexSize*.25)+\", \"+(hexSize*.866)+\" \"+\n                            \"0, \"+(hexSize*.433)+\" \"+\n                            (hexSize*.25)+\", 0 \"+\n                            (hexSize*.75)+\", 0\"\n                        }\n                    >\n                    </polygon>\n                    {this.props.svgElements}\n                </svg>\n                <div\n                    className={\"hex-content \"+this.props.hexClass}\n                    onClick={()=>this.props.onClick()}\n                    onDragOver={(event)=>{event.preventDefault();}}\n                    onDrop={(event)=>this.onDrop(event)}\n                >\n                    {this.props.children}\n                </div>\n            </div>\n\n        );\n    }\n}\n\nexport class MapSpaceComponent extends React.Component {\n    getPositionStyle() {\n        let hexSize = this.props.hexSize;\n        let mapCenterH = this.props.mapCenterH;\n        let mapCenterV = this.props.mapCenterV;\n        let spaceOffsetV = hexSize *.5*.866;\n        let spaceOffsetH = hexSize*.5;\n        let x = this.props.space.x;\n        let y = this.props.space.y;\n        let z = this.props.space.z;\n\n        let xhmod = x*hexSize*.75/2 + x*hexSpace*.5;\n        let xvmod = 0;\n        let yhmod = -y*hexSize*.75/2 - y*hexSpace*.5;\n        let yvmod = -y*(hexSize*.866/2) - y*(hexSpace/2);\n        let zhmod = -z*hexSize*.75/2 - z*hexSpace*.5;\n        let zvmod = z*(hexSize*.866/2) + z*(hexSpace/2);\n\n        let left = mapCenterH - spaceOffsetH + xhmod + yhmod + zhmod;\n        let top = mapCenterV - spaceOffsetV + xvmod + yvmod + zvmod;\n\n        return {\"left\": left+\"px\", \"top\": top+\"px\"};\n    }\n\n    render() {\n        let display = null;\n        let type = this.props.space.type;\n        let posStyle = this.getPositionStyle();\n        switch(type) {\n            case MAP_SPACE_TYPES.OPEN:\n                display = (\n                    <HexComponent\n                        onClick={()=>this.props.onClick()}\n                        posStyle={posStyle}\n                        hexSize={this.props.hexSize}\n                        hexClass=\"open\"\n                        onDrop={(event)=>this.props.onDrop(event)}\n                    >\n                        +\n                    </HexComponent>\n                );\n                break;\n            case MAP_SPACE_TYPES.HOME:\n                let home_text = \"H\";\n                if(this.props.home_value !== null) {\n                    home_text = this.props.home_value;\n                }\n                display = (\n                    <HexComponent\n                        onClick={()=>this.props.onClick()}\n                        posStyle={posStyle}\n                        hexSize={this.props.hexSize}\n                        hexClass=\"home\"\n                    >\n                        {home_text}\n                    </HexComponent>\n                );\n                break;\n            case MAP_SPACE_TYPES.SYSTEM:\n                display = (\n                    <SystemComponent\n                        system={this.props.space.system}\n                        format={this.props.system_format}\n                        posStyle={posStyle}\n                        onClick={()=>this.props.onClick()}\n                        hexSize={this.props.hexSize}\n                        draggable={this.props.draggable}\n                        onDrag={(event)=>this.props.onDrag(event)}\n                        onDragEnd={(event)=>this.props.onDragEnd(event)}\n                        onDrop={(event)=>this.props.onDrop(event)}\n                        eval_variables={this.props.eval_variables}\n                    />\n                );\n                break;\n            case MAP_SPACE_TYPES.CLOSED:\n                display = (\n                    <HexComponent\n                        onClick={()=>this.props.onClick()}\n                        posStyle={posStyle}\n                        hexSize={this.props.hexSize}\n                        hexClass=\"closed\"\n                    >\n                    </HexComponent>\n                );\n                break;\n            case MAP_SPACE_TYPES.WARP:\n                display = (\n                    <WarpComponent\n                        posStyle={posStyle}\n                        onClick={()=>this.props.onClick()}\n                        warps={this.props.space.warp_spaces}\n                        hexSize={this.props.hexSize}\n                    />\n                );\n                break;\n            default:\n                break;\n        }\n        return display;\n    }\n}\n\nexport class WarpComponent extends React.Component {\n    get_endpoint_coords(coords, hexSize) {\n        switch(coords) {\n            case WARP_DIRECTIONS.NORTH:\n                return {\n                    \"x\": hexSize*.5,\n                    \"y\": 0,\n                };\n            case WARP_DIRECTIONS.NORTHEAST:\n                return {\n                    \"x\": hexSize*(7/8),\n                    \"y\": .866*hexSize*(1/4),\n                };\n            case WARP_DIRECTIONS.SOUTHEAST:\n                return {\n                    \"x\": hexSize*(7/8),\n                    \"y\": .866*hexSize*(3/4),\n                };\n            case WARP_DIRECTIONS.SOUTH:\n                return {\n                    \"x\": hexSize*.5,\n                    \"y\": hexSize*.866,\n                };\n            case WARP_DIRECTIONS.SOUTHWEST:\n                return {\n                    \"x\": hexSize*(1/8),\n                    \"y\": hexSize*.866*(3/4),\n                };\n            case WARP_DIRECTIONS.NORTHWEST:\n                return {\n                    \"x\": hexSize*(1/8),\n                    \"y\": hexSize*.866*(1/4),\n                };\n            default:\n                return {\n                    \"x\": 0,\n                    \"y\": 0,\n                };\n        }\n    }\n\n\n    render() {\n        let posStyle = this.props.posStyle;\n\n        let warp_lines = [];\n        let hexSize = this.props.hexSize;\n        for(let [index, one_warp] of warp_configs[this.props.warps].entries()) {\n            let start_coords = this.get_endpoint_coords(one_warp[0], hexSize);\n            let end_coords = this.get_endpoint_coords(one_warp[1], hexSize);\n            warp_lines.push(\n                <line className=\"warp-line\"\n                    x1={start_coords.x}\n                    y1={start_coords.y}\n                    x2={end_coords.x}\n                    y2={end_coords.y}\n                    onClick={()=>this.props.onClick()}\n                    key={\"warp_line_\"+index}\n                />\n            );\n        }\n\n        return(\n            <HexComponent\n                onClick={()=>this.props.onClick()}\n                posStyle={posStyle}\n                hexSize={this.props.hexSize}\n                hexClass={\"warp\"}\n                svgElements={warp_lines}\n            >\n            </HexComponent>\n        );\n    }\n}\n\nexport const SYSTEM_FORMATS = {\n    \"STREAMLINED\": 0,\n    \"STREAMLINED_WITH_NAME\": 1,\n    \"COLORBLIND_FRIENDLY\": 2,\n    \"COLORBLIND_FRIENDLY_WITH_NAME\": 3,\n    \"ID_ONLY\": 4,\n};\n\nexport class SystemComponent extends React.Component {\n\n    render() {\n        let system = this.props.system;\n        let format = this.props.format;\n        let posStyle = this.props.posStyle;\n        let display = null;\n        let id_div = (<div className=\"id\">{system.id}</div>);\n        let extras = [];\n        let value_div = null;\n        if(this.props.eval_variables && system.isBlue()) {\n            value_div = (<div className=\"value\">={system.evaluate(this.props.eval_variables)}</div>);\n        }\n        if(system.wormhole !== null) {\n            switch(system.wormhole) {\n                case WORMHOLES.ALPHA:\n                    extras.push(<div className=\"wormhole alpha\" key=\"alpha_wh\">a</div>);\n                    break;\n                case WORMHOLES.BETA:\n                    extras.push(<div className=\"wormhole beta\" key=\"alpha_wh\">b</div>);\n                    break;\n                default: break;\n            }\n        }\n        if(system.anomaly !== null) {\n            switch(system.anomaly) {\n                case ANOMALIES.SUPERNOVA:\n                    extras.push(<div className=\"supernova\" key=\"supernova\"></div>);\n                    break;\n                case ANOMALIES.GRAVITY_RIFT:\n                    extras.push(<div className=\"gravity-rift\" key=\"gravity-rift\"></div>);\n                    break;\n                case ANOMALIES.NEBULA:\n                    extras.push(<div className=\"nebula\" key=\"nebula\"></div>);\n                    break;\n                case ANOMALIES.ASTEROID_FIELD:\n                    extras.push(\n                        <div className=\"asteroid-field\" key=\"asteroid-field\">\n                            <div className=\"asteroid a\"></div>\n                            <div className=\"asteroid b\"></div>\n                            <div className=\"asteroid c\"></div>\n                            <div className=\"asteroid d\"></div>\n                            <div className=\"asteroid e\"></div>\n                        </div>\n                    );\n                    break;\n                default:\n                    break;\n            }\n        }\n        let rex_class = \"\";\n        if(system.isMecatolRexSystem()) rex_class = \"rex\";\n        let hex_props = {\n            onClick:()=>this.props.onClick(),\n            posStyle:posStyle,\n            hexSize:this.props.hexSize,\n            hexClass:rex_class,\n            draggable:this.props.draggable,\n            onDrag:(event)=>this.props.onDrag(event),\n            onDragEnd:(event)=>this.props.onDragEnd(event),\n            onDrop:(event)=>this.props.onDrop(event),\n        };\n\n        switch(format) {\n            case SYSTEM_FORMATS.ID_ONLY:\n                display = (\n                    <HexComponent {...hex_props} >\n                        <span className=\"id-alone\">\n                            {system.id}\n                        </span>\n                    </HexComponent>\n                );\n                break;\n            case SYSTEM_FORMATS.STREAMLINED_WITH_NAME:\n                display = (\n                    <HexComponent {...hex_props} >\n                        {id_div}\n                        {value_div}\n                        {system.planets.map(function(planet, index) {\n                            return(\n                                <PlanetComponent\n                                    planet={planet}\n                                    key={planet.name}\n                                    format={PLANET_FORMATS.STREAMLINED_WITH_NAME}\n                                />\n                            )\n                        }, this)}\n                        {extras}\n                    </HexComponent>\n                );\n                break;\n            case SYSTEM_FORMATS.STREAMLINED:\n                display = (\n                    <HexComponent {...hex_props} >\n                        {id_div}\n                        {value_div}\n                        {system.planets.map(function(planet, index) {\n                            return(\n                                <PlanetComponent\n                                    planet={planet}\n                                    key={planet.name}\n                                    format={PLANET_FORMATS.STREAMLINED}\n                                />\n                            )\n                        }, this)}\n                        {extras}\n                    </HexComponent>\n                );\n                break;\n            case SYSTEM_FORMATS.COLORBLIND_FRIENDLY:\n                display = (\n                    <HexComponent {...hex_props} >\n                        {id_div}\n                        {value_div}\n                        {system.planets.map(function(planet, index) {\n                            return(\n                                <PlanetComponent\n                                    planet={planet}\n                                    key={planet.name}\n                                    format={PLANET_FORMATS.COLORBLIND_FRIENDLY}\n                                />\n                            )\n                        }, this)}\n                    </HexComponent>\n                );\n                break;\n            case SYSTEM_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME:\n                display = (\n                    <HexComponent {...hex_props} >\n                        {id_div}\n                        {value_div}\n                        {system.planets.map(function(planet, index) {\n                            return(\n                                <PlanetComponent\n                                    planet={planet}\n                                    key={planet.name}\n                                    format={PLANET_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME}\n                                />\n                            )\n                        }, this)}\n                    </HexComponent>\n                );\n                break;\n            default:\n                break;\n        }\n        return display;\n    }\n}\n\nexport const PLANET_FORMATS = {\n    \"STREAMLINED\": 0,\n    \"STREAMLINED_WITH_NAME\": 1,\n    \"COLORBLIND_FRIENDLY\": 2,\n    \"COLORBLIND_FRIENDLY_WITH_NAME\": 3,\n};\n\nexport class PlanetComponent extends React.Component {\n\n    render() {\n        let planet = this.props.planet;\n        let format = this.props.format;\n        let trait_class = \"\";\n        let trait_abbr = \"\";\n        switch(planet.trait) {\n            case PLANET_TRAITS.INDUSTRIAL:\n                trait_class = \"industrial\";\n                trait_abbr = \"I\";\n                break;\n            case PLANET_TRAITS.HAZARDOUS:\n                trait_class = \"hazardous\";\n                trait_abbr = \"H\";\n                break;\n            case PLANET_TRAITS.CULTURAL:\n                trait_class=\"cultural\";\n                trait_abbr = \"C\";\n                break;\n            default:\n                break;\n        }\n        let tech_class = \"\";\n        let tech_abbr = \"\";\n        switch(planet.tech_specialty) {\n            case TECH_SPECIALTIES.CYBERNETIC:\n                tech_class = \"cybernetic\";\n                tech_abbr = \"Y\";\n                break;\n            case TECH_SPECIALTIES.PROPULSION:\n                tech_class = \"propulsion\";\n                tech_abbr = \"B\";\n                break;\n            case TECH_SPECIALTIES.BIOTIC:\n                tech_class = \"biotic\";\n                tech_abbr = \"G\";\n                break;\n            case TECH_SPECIALTIES.WARFARE:\n                tech_class = \"warfare\";\n                tech_abbr = \"R\";\n                break;\n            default:\n                break;\n        }\n        let name_stuff = null;\n        if(\n            format===PLANET_FORMATS.STREAMLINED_WITH_NAME\n            || format===PLANET_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME\n        ) {\n            name_stuff=(<span className=\"name\">{ planet.name }</span>);\n        }\n        let values = (\n            <div className=\"value_container\">\n                <span className=\"resources\">{ planet.resources }</span>\n                <span className=\"influence\">{ planet.influence }</span>\n            </div>);\n        if(\n            format===PLANET_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME\n            || format===PLANET_FORMATS.COLORBLIND_FRIENDLY\n        ) {\n            values = (\n                <div className=\"value_container\">\n                    <span className={\"tech \"+tech_class}>{tech_abbr}</span>\n                    <span className=\"resources\">{ planet.resources }</span>\n                    <span className=\"influence\">{ planet.influence }</span>\n                    <span className={\"trait \"+trait_class}>{trait_abbr}</span>\n                </div>\n            )\n        }\n        return (\n            <div className={\"planet \"+trait_class+\" \"+tech_class}>\n                {values}\n                {name_stuff}\n            </div>\n        );\n    }\n}","import {MAP_SPACE_TYPES} from \"./map-components\";\nimport {warp_configs} from \"./data/warp_data\";\nimport {ANOMALIES, PLANET_TRAITS, TECH_SPECIALTIES, WORMHOLES} from \"./data/tile_data\";\n\nexport const PLANET_EVAL_STRATEGIES = {\n    \"SUM\": 1,\n    \"GREATEST\": 2,\n    \"GREATEST_PLUS_TECH\": 3,\n};\n\nexport class Planet {\n    constructor(obj_data) {\n        this.trait = obj_data.trait;\n        this.tech_specialty = obj_data.tech_specialty;\n        this.resources = obj_data.resources;\n        this.influence = obj_data.influence;\n        this.name = obj_data.name;\n    }\n\n    evaluate(variables) {\n        let v = variables.data;\n        let value = v.BASE_PLANET_MOD;\n        let r = this.resources*v.RESOURCES_MULTIPLIER,\n            i = this.influence*v.INFLUENCE_MULTIPLIER;\n        let t = 0;\n        if(this.tech_specialty!==null) {\n            t+=v.TECH_MOD;\n            switch(this.tech_specialty) {\n                case TECH_SPECIALTIES.WARFARE:\n                    t+=v.TECH_WARFARE_MOD;\n                    break;\n                case TECH_SPECIALTIES.PROPULSION:\n                    t+=v.TECH_PROPULSION_MOD;\n                    break;\n                case TECH_SPECIALTIES.BIOTIC:\n                    t+=v.TECH_BIOTIC_MOD;\n                    break;\n                case TECH_SPECIALTIES.CYBERNETIC:\n                    t+=v.TECH_CYBERNETIC_MOD;\n                    break;\n                default:\n                    break;\n            }\n        }\n        switch(v.PLANET_STRATEGY) {\n            case PLANET_EVAL_STRATEGIES.GREATEST:\n                let to_add = r;\n                if(i>to_add) to_add = i;\n                if(t>to_add) to_add = t;\n                value += to_add;\n                break;\n            case PLANET_EVAL_STRATEGIES.AVERAGE:\n                value += (r+i+t)/3;\n                break;\n            default:\n                let high_one = r;\n                if(i>high_one) high_one = i;\n                value += high_one+t;\n                break;\n        }\n        if(r>0) value+= v.NONZERO_RESOURCES_MOD;\n        if(i>0) value+= v.NONZERO_INFLUENCE_MOD;\n        switch(this.trait) {\n            case PLANET_TRAITS.CULTURAL:\n                value+=v.TRAIT_CULTURAL_MOD;\n                break;\n            case PLANET_TRAITS.HAZARDOUS:\n                value+=v.TRAIT_HAZARDOUS_MOD;\n                break;\n            case PLANET_TRAITS.INDUSTRIAL:\n                value+=v.TRAIT_INDUSTRIAL_MOD;\n                break;\n            default:\n                break;\n        }\n        return value;\n    }\n}\n\nexport class PlanetBox {\n    constructor(planet_data) {\n        this.planets = [];\n        for(let one_planet_data of planet_data) {\n            this.planets.push(new Planet(one_planet_data));\n        }\n    }\n\n    getPlanetByName(name) {\n        for(let one_planet of this.planets) {\n            if (one_planet.name === name) {\n                return one_planet;\n            }\n        }\n        return null;\n    }\n}\n\nexport class System {\n    constructor(obj_data, planet_box) {\n        this.id = obj_data.id;\n        this.anomaly = obj_data.anomaly;\n        this.wormhole = obj_data.wormhole;\n        this.planets = [];\n        for(let planet_name of obj_data.planets) {\n            let plToAdd = planet_box.getPlanetByName(planet_name);\n            if(plToAdd) this.planets.push(plToAdd);\n        }\n    }\n\n    evaluate(variables) {\n        let v = variables.data;\n        let value=0;\n        for(let one_planet of this.planets) {\n            value+=one_planet.evaluate(variables);\n        }\n        if(this.planets.length===1) {\n            value+=v.SINGLE_PLANET_MOD;\n        } else if(this.planets.length>1) {\n            value+=v.MULTI_PLANET_MOD;\n            if(this.planets[0].trait === this.planets[1].trait) {\n                value+=v.MATCHING_PLANETS_MOD;\n            } else {\n                value+=v.NONMATCHING_PLANETS_MOD;\n            }\n        }\n        if(this.isMecatolRexSystem()) {\n            value+=v.MECATOL_REX_SYS_MOD;\n        }\n        return value;\n    }\n\n    getDistanceModifier(variables = {}) {\n        let v = variables.data;\n        let value = v.DISTANCE_MOD_BASE;\n        if(this.isBlue()) {\n            if(v.DISTANCE_MOD_PLANET===false) return false;\n            value+=v.DISTANCE_MOD_PLANET;\n            if(this.wormhole!==null) {\n                if(v.DISTANCE_MOD_PLANET_WORMHOLE===false) return false;\n                value+=v.DISTANCE_MOD_PLANET_WORMHOLE;\n            }\n        } else if(this.anomaly===null) {\n            if(this.wormhole!==null) {\n                if(v.DISTANCE_MOD_EMPTY_WORMHOLE===false) return false;\n                value+=v.DISTANCE_MOD_EMPTY_WORMHOLE;\n            } else {\n                if(v.DISTANCE_MOD_EMPTY===false) return false;\n                value+=v.DISTANCE_MOD_EMPTY;\n            }\n        } else {\n            switch(this.anomaly) {\n                case ANOMALIES.ASTEROID_FIELD:\n                    if(v.DISTANCE_MOD_ASTEROID_FIELD===false) return false;\n                    value+=v.DISTANCE_MOD_ASTEROID_FIELD;\n                    break;\n                case ANOMALIES.GRAVITY_RIFT:\n                    if(v.DISTANCE_MOD_GRAVITY_RIFT===false) return false;\n                    value+=v.DISTANCE_MOD_GRAVITY_RIFT;\n                    break;\n                case ANOMALIES.NEBULA:\n                    if(v.DISTANCE_MOD_NEBULA===false) return false;\n                    value+=v.DISTANCE_MOD_NEBULA;\n                    break;\n                case ANOMALIES.SUPERNOVA:\n                    if(v.DISTANCE_MOD_SUPERNOVA===false) return false;\n                    value+=v.DISTANCE_MOD_SUPERNOVA;\n                    break;\n                default:\n                    return false;\n            }\n        }\n        return value;\n    }\n\n    isMecatolRexSystem() {\n        for(let planet of this.planets) {\n            if (planet.name === \"Mecatol Rex\") return true;\n        }\n        return false;\n    }\n\n    isRed() {\n        if(this.planets.length<1) return true;\n        return false;\n    }\n\n    isBlue() {\n        return !this.isRed();\n    }\n\n    getStringName() {\n        let system = this;\n        let name_array = [];\n        for(let planet of system.planets) {\n            name_array.push(planet.name+\" (\"+planet.resources+\"/\"+planet.influence+\")\");\n        }\n        if(system.wormhole !== null) {\n            switch(system.wormhole) {\n                case WORMHOLES.ALPHA:\n                    name_array.push(\"(a)\");\n                    break;\n                case WORMHOLES.BETA:\n                    name_array.push(\"(b)\");\n                    break;\n                default: break;\n            }\n        }\n        if(system.anomaly !== null) {\n            switch(system.anomaly) {\n                case ANOMALIES.SUPERNOVA:\n                    name_array.push(\"Supernova\");\n                    break;\n                case ANOMALIES.GRAVITY_RIFT:\n                    name_array.push(\"Gravity Rift\");\n                    break;\n                case ANOMALIES.NEBULA:\n                    name_array.push(\"Nebula\");\n                    break;\n                case ANOMALIES.ASTEROID_FIELD:\n                    name_array.push(\"Asteroid Field\");\n                    break;\n                default:\n                    break;\n            }\n        }\n        if(name_array.length===0) name_array.push(\"Empty Space\");\n        return system.id+\": \"+name_array.join(\", \");\n    }\n}\n\nexport class SystemBox {\n    constructor(system_data, planet_box) {\n        this.systems = [];\n        this.planet_box = planet_box;\n        for(let one_system_data of system_data) {\n            this.systems.push(new System(one_system_data, planet_box));\n        }\n    }\n\n    getBlueSystemTotal() {\n        let total = 0;\n        for(let system of this.systems) {\n            if(system.isBlue()) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    getRedSystemTotal() {\n        let total = 0;\n        for(let system of this.systems) {\n            if(system.isRed()) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    getSystemIndexByID(id) {\n        for(let [index, system] of this.systems.entries()) {\n            if(system.id === id) return index;\n        }\n        return null;\n    }\n\n    getSystemByID(id, splice=false) {\n        let sysindex = this.getSystemIndexByID(id);\n        if (sysindex!==null && splice) return this.systems.splice(sysindex, 1);\n        if (sysindex!==null) return this.systems[sysindex];\n        return null;\n    }\n\n    makeCopy() {\n        let new_system_box = new SystemBox([], this.planet_box);\n        for(let one_system of this.systems) {\n            new_system_box.systems.push(one_system);\n        }\n        return new_system_box;\n    }\n\n    getWormholeSystems(type=null) {\n        let systems_to_return = [];\n        for(let one_sys of this.systems) {\n            if(\n                one_sys.wormhole!==null\n                &&\n                (\n                    type===null\n                    ||\n                    one_sys.wormhole===type\n                )\n            ) {\n                systems_to_return.push(one_sys);\n            }\n        }\n        return systems_to_return;\n    }\n}\n\nexport function getDistanceMultiplier(modded_distance, variables) {\n    let v = variables.data;\n    let d = modded_distance;\n    if(d<0) d = 0;\n    if(d>10) d = 10;\n    return v.DISTANCE_MULTIPLIER[d];\n}\n\nexport class Map {\n    constructor(load_default=true, starting_space=null, iterations=3) {\n        if(load_default) {\n            this.spaces = [starting_space];\n            for(let i=0; i<iterations; i++) {\n                this.addAdjacentSpaces();\n            }\n        } else {\n            this.spaces = [];\n        }\n    }\n\n    makeCopy() {\n        let new_map = new Map(false);\n        for(let one_space of this.spaces) {\n            let new_space = new MapSpace(\n                one_space.x,\n                one_space.y,\n                one_space.z,\n                one_space.warp_spaces,\n                one_space.type,\n                one_space.system,\n            );\n            new_map.spaces.push(new_space);\n        }\n        return new_map;\n    }\n\n    containsSystem(system_id) {\n        return (this.getSpaceBySystemID(system_id) !== null);\n    }\n\n    getSpaceBySystemID(id) {\n        for(let one_space of this.spaces) {\n            if(\n                one_space.system!==null\n                && one_space.system.id===id\n            ) return one_space;\n        }\n        return null;\n    }\n\n    getOpenSpacesTotal() {\n        let total = 0;\n        for(let space of this.spaces) {\n            if(space.type===MAP_SPACE_TYPES.OPEN) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    getBlueSystemTotal() {\n        let total = 0;\n        for(let space of this.spaces) {\n            if(space.type===MAP_SPACE_TYPES.SYSTEM && space.system.isBlue()) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    getRedSystemTotal() {\n        let total = 0;\n        for(let space of this.spaces) {\n            if(space.type===MAP_SPACE_TYPES.SYSTEM && space.system.isRed()) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n    getPossibleSystemTotal() {\n        let total = 0;\n        for(let space of this.spaces) {\n            if(\n                space.type===MAP_SPACE_TYPES.SYSTEM\n                || space.type===MAP_SPACE_TYPES.OPEN\n            ) {\n                total++;\n            }\n        }\n        return total;\n    }\n\n   areWarpsLogical() {\n        for(let space of this.spaces) {\n            if (space.type === MAP_SPACE_TYPES.WARP) {\n                for(let one_warp of warp_configs[space.warp_spaces]) {\n                    for(let one_warp_dir of one_warp) {\n                        if(!this.doesWarpDirectionConnect(one_warp_dir, space, [space])) {\n                            return false;\n                        }\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    doesWarpDirectionConnect(warp_direction, space, checked_spaces) {\n        let whereItGoes = space.getWarpDirectionCoordinates(warp_direction);\n        let spaceItGoes = getObjFromCoord(whereItGoes, this.spaces);\n        if(!spaceItGoes) return false;\n        if(areCoordsInList(spaceItGoes, checked_spaces)) return false;\n        if(spaceItGoes.type === MAP_SPACE_TYPES.CLOSED) return false;\n        if(spaceItGoes.type === MAP_SPACE_TYPES.WARP) {\n            let oppositeDirection = {\n                \"x\": warp_direction.x*-1,\n                \"y\": warp_direction.y*-1,\n                \"z\": warp_direction.z*-1,\n            };\n            let directions_to_check = [];\n            for(let one_next_warp of warp_configs[spaceItGoes.warp_spaces]) {\n                if(areCoordsInList(oppositeDirection, [one_next_warp[0]])) {\n                    directions_to_check.push(one_next_warp[1]);\n                } else if(areCoordsInList(oppositeDirection, [one_next_warp[1]])) {\n                    directions_to_check.push(one_next_warp[0]);\n                }\n            }\n            if(directions_to_check.length === 0) return false;\n            checked_spaces.push(spaceItGoes);\n            for(let one_direction of directions_to_check) {\n                if(!this.doesWarpDirectionConnect(one_direction, spaceItGoes, checked_spaces)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    isComplete() {\n        for(let map_space of this.spaces) {\n            if(map_space.type===MAP_SPACE_TYPES.OPEN) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    isLegal() {\n        let is_legal = true;\n        for(let map_space of this.spaces) {\n            if(map_space.type===MAP_SPACE_TYPES.SYSTEM && map_space.system.wormhole !== null) {\n                for(let one_sys of this.getAdjacentSystems(map_space)) {\n                    if(one_sys.type===MAP_SPACE_TYPES.SYSTEM && one_sys.system.wormhole===map_space.system.wormhole) {\n                        is_legal = false;\n                        break;\n                    }\n                }\n            }\n            if(map_space.type===MAP_SPACE_TYPES.SYSTEM && map_space.system.anomaly !== null) {\n                for(let one_sys of this.getAdjacentSystems(map_space)) {\n                    if(one_sys.type===MAP_SPACE_TYPES.SYSTEM && one_sys.system.anomaly!==null) {\n                        is_legal = false;\n                        break;\n                    }\n                }\n            }\n            if(!is_legal) break;\n        }\n        return is_legal;\n    }\n\n    getHomeValue(space, variables) {\n        let home_total = 0;\n        let spaces_to_get_to = [];\n        for(let one_space of this.spaces) {\n            if(\n                one_space.type===MAP_SPACE_TYPES.SYSTEM &&\n                one_space.system.evaluate(variables) > 0\n            ) {\n                spaces_to_get_to.push(one_space);\n            }\n        }\n        for(let one_space of spaces_to_get_to) {\n            let shortest_distance = this._getShortestModdedDistance(\n                space, one_space, variables\n            );\n            if(!(shortest_distance===null)) {\n                home_total+=getDistanceMultiplier(\n                    shortest_distance, variables\n                )*one_space.system.evaluate(variables);\n            }\n        }\n        return home_total;\n    }\n\n    _getShortestModdedDistance(start_space, dest_space, variables) {\n        let finished_paths = [];\n        let act_paths = [];\n\n        let first_steps = this.getAdjacentSystemsIncludingWormholes(start_space);\n        for(let one_step of first_steps) {\n            if(\n                one_step.system.getDistanceModifier(variables)!==false\n                && this.getMapDistanceModifier(start_space, dest_space, variables)!==false\n            ) {\n                let new_path = [one_step.system.id];\n                if(one_step.system.id===dest_space.system.id) {\n                    finished_paths.push(new_path);\n                } else {\n                    act_paths.push(new_path);\n                }\n            }\n        }\n        while(act_paths.length>0) {\n            let new_active_paths = [];\n            for(let one_path of act_paths) {\n                let results = this._extendPath(start_space, dest_space, one_path, variables);\n                for(let one_done of results.finished) {\n                    finished_paths.push(one_done);\n                }\n                for(let one_ongoing of results.ongoing) {\n                    new_active_paths.push(one_ongoing);\n                }\n            }\n            act_paths=new_active_paths;\n        }\n        let first_yet = false;\n        let shortest = null;\n        for(let one_path of finished_paths) {\n            let path_length = this._calculateModdedDistanceFromRaw(one_path, variables, start_space);\n            if(!first_yet || path_length<shortest) {\n                shortest = path_length;\n                first_yet = true;\n            }\n        }\n        return shortest;\n    }\n\n    _extendPath(start_space, dest_space, path, variables) {\n        let completed_paths = [];\n        let ongoing_paths = [];\n        let last_step = this.getSpaceBySystemID(path[path.length-1]);\n        let next_steps = this.getAdjacentSystemsIncludingWormholes(last_step);\n        for(let one_step of next_steps) {\n            if(one_step.system.id===dest_space.system.id) {\n                let path_copy = [...path];\n                path_copy.push(one_step.system.id);\n                completed_paths.push(path_copy);\n            } else if (\n                !(one_step.system.id in path)\n                && one_step.system.getDistanceModifier(variables)!==false\n                && this.getMapDistanceModifier(start_space, dest_space, variables)!==false\n                && path.length<4\n            ) {\n                let path_copy = [...path];\n                path_copy.push(one_step.system.id);\n                ongoing_paths.push(path_copy);\n            }\n        }\n        return({\n            \"finished\": completed_paths,\n            \"ongoing\": ongoing_paths,\n        });\n    }\n\n\n    _calculateModdedDistanceFromRaw(path, variables, start_space) {\n        let modded_dist = 0;\n        for(let one_index of path) {\n            let one_sys = this.getSpaceBySystemID(one_index);\n            modded_dist+=\n                one_sys.system.getDistanceModifier(variables)\n                +this.getMapDistanceModifier(start_space, one_sys, variables);\n        }\n        return modded_dist;\n    }\n\n    getMapDistanceModifier(start_space, dest_space, variables) {\n        let adj_spaces = this.getAdjacentSpacesIncludingWormholes(dest_space);\n        for(let one_space of adj_spaces) {\n            if(\n                one_space.type===MAP_SPACE_TYPES.HOME &&\n                !areCoordsInList(start_space, [one_space]\n                )\n            ) {\n                return variables.data.DISTANCE_MOD_ADJACENT_TO_OPPONENT;\n            }\n        }\n        return 0;\n    }\n\n\n\n    addAdjacentSpaces() {\n        let coords_to_add = [];\n        for(let map_space of this.spaces) {\n            let adjacent_coords = map_space.getAdjacentCoordinates();\n            for(let one_adjacent_coords of adjacent_coords) {\n                if(\n                    !areCoordsInList(one_adjacent_coords, coords_to_add) &&\n                    !areCoordsInList(one_adjacent_coords, this.spaces)\n                ) {\n                    coords_to_add.push(one_adjacent_coords);\n                }\n            }\n        }\n        for(let one_coords_to_add of coords_to_add) {\n            this.spaces.push(new MapSpace(\n                one_coords_to_add.x,\n                one_coords_to_add.y,\n                one_coords_to_add.z,\n            ));\n        }\n    }\n\n    _getAdjacentSpacesThroughWarps(system_space, warp_space) {\n        let adj_systems = [];\n        let direction_from = {\n            \"x\": system_space.x - warp_space.x,\n            \"y\": system_space.y - warp_space.y,\n            \"z\": system_space.z - warp_space.z,\n        };\n        let warps_to_follow = [];\n        for(let one_warp of warp_configs[warp_space.warp_spaces]) {\n            if(areCoordsInList(direction_from, one_warp)) {\n                warps_to_follow.push(one_warp);\n            }\n        }\n        for(let one_warp of warps_to_follow) {\n            for(let one_warp_direction of one_warp) {\n                if(!areCoordsInList(one_warp_direction, [direction_from])) {\n                    let next_space = getObjFromCoord(\n                        warp_space.getWarpDirectionCoordinates(one_warp_direction),\n                        this.spaces\n                    );\n                    if(next_space!==null) {\n                        if(next_space.type!==MAP_SPACE_TYPES.WARP) {\n                            if (!areCoordsInList(next_space, adj_systems)) {\n                                adj_systems.push(next_space);\n                            }\n                        } else {\n                            let farther_systems = this._getAdjacentSpacesThroughWarps(warp_space, next_space);\n                            for(let one_far_sys of farther_systems) {\n                                if(!areCoordsInList(one_far_sys, adj_systems)) {\n                                    adj_systems.push(one_far_sys);\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return adj_systems;\n    }\n\n    getAdjacentSystems(space) {\n        let adj_spaces = this.getAdjacentSpaces(space);\n        let adj_systems = [];\n        for(let one_space of adj_spaces) {\n            if(one_space.type===MAP_SPACE_TYPES.SYSTEM){\n                adj_systems.push(one_space);\n            }\n        }\n        return adj_systems;\n    }\n\n    getAdjacentSpaces(space) {\n        let adj_coords = space.getAdjacentCoordinates();\n        let adj_systems = [];\n        for(let one_coord of adj_coords) {\n            let potential_space = getObjFromCoord(one_coord, this.spaces);\n            if(potential_space !== null) {\n                if(potential_space.type!==MAP_SPACE_TYPES.WARP){\n                    if(!areCoordsInList(potential_space, adj_systems)) {\n                        adj_systems.push(potential_space);\n                    }\n                } else {\n                    let potential_systems = this._getAdjacentSpacesThroughWarps(space, potential_space);\n                    for(let one_system_space of potential_systems) {\n                        if(!areCoordsInList(one_system_space, adj_systems)) {\n                            adj_systems.push(one_system_space);\n                        }\n                    }\n                }\n            }\n        }\n        return adj_systems;\n    }\n\n    getAdjacentSystemsIncludingWormholes(space) {\n        let adj_spaces = this.getAdjacentSpacesIncludingWormholes(space);\n        let adj_systems = [];\n        for(let one_space of adj_spaces) {\n            if(one_space.type===MAP_SPACE_TYPES.SYSTEM) {\n                adj_systems.push(one_space);\n            }\n        }\n        return adj_systems;\n    }\n\n    getAdjacentSpacesIncludingWormholes(space) {\n        let adj_systems = this.getAdjacentSpaces(space);\n        let wh_systems = this.getMatchingWormholeSpaces(space);\n        for(let one_whs of wh_systems) {\n            if(!areCoordsInList(one_whs, adj_systems)) {\n                adj_systems.push(one_whs);\n            }\n        }\n        return adj_systems;\n    }\n\n    getMatchingWormholeSpaces(space) {\n        let matching_spaces = [];\n        if(space.type===MAP_SPACE_TYPES.SYSTEM && space.system.wormhole!==null) {\n            for(let one_space of this.spaces) {\n                if(\n                    one_space.type===MAP_SPACE_TYPES.SYSTEM &&\n                    one_space.system.wormhole===space.system.wormhole &&\n                    one_space.system.id !== space.system.id\n                ) {\n                    matching_spaces.push(one_space);\n                }\n            }\n        }\n        return matching_spaces;\n    }\n\n}\n\nexport function getObjFromCoord(coords, list) {\n        for(let existing_coords of list) {\n        if(\n            coords.x === existing_coords.x &&\n            coords.y === existing_coords.y &&\n            coords.z === existing_coords.z\n        ) {\n            return existing_coords;\n        }\n    }\n    return null;\n}\n\nexport function areCoordsInList(coords, list) {\n    if(getObjFromCoord(coords, list)) {\n        return true;\n    }\n    return false;\n}\n\nexport class MapSpace {\n    constructor(x, y, z, warp_spaces=null, type=MAP_SPACE_TYPES.OPEN, system=null) {\n        this.x = x;\n        this.y = y;\n        this.z = z;\n        this.warp_spaces = warp_spaces;\n        this.type = type;\n        this.system = system;\n    }\n\n    getAdjacentCoordinates() {\n        let x = this.x;\n        let y = this.y;\n        let z = this.z;\n        return [\n            {\"x\":x+1,\"y\":y-1,\"z\":z},\n            {\"x\":x+1,\"y\":y,\"z\":z-1},\n            {\"x\":x-1,\"y\":y+1,\"z\":z},\n            {\"x\":x,\"y\":y+1,\"z\":z-1},\n            {\"x\":x-1,\"y\":y,\"z\":z+1},\n            {\"x\":x,\"y\":y-1,\"z\":z+1},\n        ];\n    }\n\n    getWarpDirectionCoordinates(warp_direction) {\n        return {\n            \"x\": this.x+warp_direction.x,\n            \"y\": this.y+warp_direction.y,\n            \"z\": this.z+warp_direction.z,\n        }\n    }\n}","import React from 'react';\n\nexport function download(filename, text) {\n  let element = document.createElement('a');\n  element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n  element.setAttribute('download', filename);\n\n  element.style.display = 'none';\n  document.body.appendChild(element);\n\n  element.click();\n\n  document.body.removeChild(element);\n}\n\nexport function getSafeFileName(string) {\n    return string.replace(/[^a-z0-9]/gi, '_').toLowerCase();\n}\n\nexport class JSONDownloadButton extends React.Component {\n    downloadJSON() {\n        let downloadInfo = this.props.getDownloadInfo();\n        download(getSafeFileName(downloadInfo.filename)+\".json\", JSON.stringify(downloadInfo.data));\n    }\n\n    render() {\n        return(\n            <button onClick={()=>this.downloadJSON()} className={this.props.className}>\n                {this.props.title}\n            </button>\n        );\n    }\n}\n\nexport class JSONUploadButton extends React.Component {\n    handleUpload() {\n        let fr = new FileReader();\n        fr.readAsText(document.getElementById(this.props.id).files[0]);\n        fr.onload = function(oFREvent) {\n            this.props.handleJSON(JSON.parse(oFREvent.target.result));\n            document.getElementById(this.props.id)\n        }.bind(this);\n    }\n\n    render() {\n        return(\n            <span className=\"control\">\n                <span className=\"file is-small\">\n                    <label className=\"file-label\">\n                        <input\n                            type=\"file\"\n                            id={this.props.id}\n                            className=\"file-input\"\n                            onChange={()=>this.handleUpload()}\n                        />\n                        <span className=\"file-cta\">\n                            <span className=\"file-icon\">\n                                <i className=\"fas fa-upload\"></i>\n                            </span>\n                            <span className=\"file-label\">\n                                Choose a file...\n                            </span>\n                        </span>\n                    </label>\n                </span>\n            </span>\n        )\n    }\n}","import React from 'react';\nimport $ from 'jquery';\nimport ls from \"local-storage\";\n\nimport {\n    planet_data,\n    system_data,\n} from '../data/tile_data.js';\nimport default_layouts from '../data/default_layouts.json';\n\nimport {\n    Map,\n    MapSpace,\n    SystemBox,\n    PlanetBox,\n    System,\n} from \"../map-logic\";\n\nwindow.jQuery = $;\n\nexport class BaseEditor extends React.Component {\n    constructor(props) {\n        super(props);\n        this.planet_box = new PlanetBox(planet_data);\n        this.system_box = new SystemBox(system_data, this.planet_box);\n        this.default_layouts = default_layouts;\n\n        this.state = {\n            \"map\": null,\n            \"message\": \"\",\n            \"input_title\": \"\",\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n            \"selected_item\": this.getNewStringValue(),\n        };\n    }\n\n    componentWillUnmount() {\n        this.props.sendStateBeforeDeath(this.state);\n    }\n\n    setMap(new_map) {\n        this.setState({\"map\": new_map});\n    }\n\n    getLayoutFromJSON(data) {\n        let new_map = new Map(false);\n        for(let one_space_data of data) {\n            let space_system = null;\n            if(one_space_data.system!==null) {\n                space_system = new System(one_space_data.system, this.planet_box);\n            }\n            new_map.spaces.push(new MapSpace(\n                one_space_data.x,\n                one_space_data.y,\n                one_space_data.z,\n                one_space_data.warp_spaces,\n                one_space_data.type,\n                space_system,\n            ));\n        }\n        return new_map;\n    }\n\n    getJSONDataFromSpaces(spaces) {\n        let spaces_data = [];\n        for(let one_space of spaces) {\n            let space_data = Object.assign({}, one_space, {\"system\": null});\n            if(one_space.system !== null) {\n                let system_data = Object.assign({}, one_space.system, {\"planets\":[]});\n                for(let one_planet of one_space.system.planets) {\n                    system_data.planets.push(one_planet.name);\n                }\n                space_data.system = system_data;\n            }\n            spaces_data.push(space_data);\n        }\n        return spaces_data;\n    }\n\n    getCurrentLayoutJSON() {\n        let l_title = \"Untitled Layout\";\n        if($('#layout-title').val() !== '') {\n            l_title = $('#layout-title').val();\n        }\n        return {\n            \"title\": l_title,\n            \"data\": this.getJSONDataFromSpaces(this.state.map.spaces),\n        };\n    }\n\n    getCurrentLayoutJSONFileInfo() {\n        let data = this.getCurrentLayoutJSON();\n        this.setState({\"message\": \"\"});\n        return {\n            \"filename\": data.title,\n            \"data\": [data]\n        };\n    }\n\n    getAllLayoutJSONFileInfo() {\n        this.setState({\"message\": \"\"});\n        let data = ls.get(this.props.storage_key) || [];\n        return {\n            \"filename\": \"All \"+this.props.subject_plural,\n            \"data\": data\n        };\n    }\n\n    setLayout(data, selected_item=\"new\", new_map=null) {\n        if(new_map===null) new_map = this.getLayoutFromJSON(data.data);\n        let loadedTitle = data.title;\n        let new_message = this.props.subject+\" '\"+loadedTitle+\"' displayed.\";\n        this.setMap(new_map);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": selected_item.toString(),\n        });\n    }\n\n    addLayoutsFromJSON(data) {\n        if(data.length>0) {\n            let saved_data = Object.assign([], this.state.saved_data);\n            for(let dataToSave of data) {\n                saved_data.push(dataToSave);\n            }\n            ls.set(this.props.storage_key, saved_data);\n            this.setLayout(saved_data[saved_data.length-1], saved_data.length-1);\n            let new_map = this.getLayoutFromJSON(saved_data[saved_data.length-1].data);\n            this.setMap(new_map);\n            this.setState({\n                \"saved_data\": ls.get(this.props.storage_key) || [],\n                \"message\": \"Layouts loaded.\",\n                \"selected_item\": saved_data.length-1,\n                \"input_title\": saved_data[saved_data.length-1].title,\n            });\n        } else {\n            this.setState({\"message\": \"There were no \"+this.props.subject_plural+\" to load.\"})\n        }\n    }\n\n    getSelectValue() {\n        let int_select = document.getElementById(\"layout-select\");\n        return int_select.options[int_select.selectedIndex].value;\n    }\n\n    saveCurrent() {\n        let dataToSave = this.getCurrentLayoutJSON();\n        let currentIndex = this.getSelectValue();\n        let saved_data = Object.assign([], this.state.saved_data);\n        let new_selected = saved_data.length;\n        if(\n            currentIndex.split(\"_\")[0] === \"new\" ||\n            currentIndex.split(\"_\")[0] === \"newc\"\n        ) {\n            saved_data.push(dataToSave);\n        } else {\n            saved_data[parseInt(currentIndex)] = dataToSave;\n            new_selected = parseInt(currentIndex);\n        }\n        ls.set(this.props.storage_key, saved_data);\n        this.setState({\n            \"selected_item\": new_selected.toString(),\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n            \"message\": this.props.subject+\" '\"+dataToSave.title+\"' saved.\",\n        });\n    }\n\n    deleteCurrent() {\n        let currentIndex = this.getSelectValue();\n        let saved_data = Object.assign([], this.state.saved_data);\n        let toDel = saved_data.splice(parseInt(currentIndex), 1)[0];\n        ls.set(this.props.storage_key, saved_data);\n        this.setMap(this.getNewLayout());\n        this.setState({\n            \"input_title\": \"\",\n            \"selected_item\": this.getNewStringValue(),\n            \"message\": this.props.subject+\" '\"+toDel.title+\"' deleted.\",\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n        });\n    }\n\n    deleteAll() {\n        ls.remove(this.props.storage_key);\n        this.setMap(this.getNewLayout());\n        this.setState({\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n            \"selected_item\": this.getNewStringValue(),\n            \"input_title\": \"\",\n            \"message\": \"All saved \"+this.props.subject_plural+\" have been deleted.\",\n            \"bank_systems\": this.syncBankSystems(this.getNewLayout()),\n        });\n    }\n}","export function compareByID(a, b) {\n    if(a.id > b.id) {\n        return 1;\n    } else if(a.id < b.id) {\n        return -1;\n    }\n    return 0;\n}\n\nexport function shuffle(a) {\n    for (let i = a.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [a[i], a[j]] = [a[j], a[i]];\n    }\n    return a;\n}\n\n","import React from 'react';\nimport $ from 'jquery';\nimport ls from \"local-storage\";\n\nimport {WORMHOLES} from \"../data/tile_data\";\nimport default_variables from '../data/default_evaluators.json';\nimport map_string_order from '../data/map_string_order.json';\n\nimport {getObjFromCoord, SystemBox} from \"../map-logic\";\nimport {\n    SYSTEM_FORMATS,\n    MapComponent,\n    MAP_SPACE_TYPES,\n    SystemBankComponent\n} from \"../map-components\";\nimport {\n    JSONDownloadButton,\n    JSONUploadButton,\n} from \"../download-helpers\";\nimport {BaseEditor} from \"./base-editor\";\nimport {\n    shuffle,\n    compareByID,\n} from \"../utilities\";\n\nwindow.jQuery = $;\nconst LOOPS_TO_TRY = 10000;\n\nexport class MapEditor extends BaseEditor {\n    constructor(props) {\n        super(props);\n        let starting_layout = this.getLayoutFromJSON(this.default_layouts[0].data);\n        this.state.map = starting_layout;\n        this.state.selected_bank_system = null;\n        this.state.system_format = SYSTEM_FORMATS.STREAMLINED_WITH_NAME;\n        this.state.draggedSystem = null;\n        this.state.option_pair_wormholes = true;\n        this.state.option_include_all_wormholes = true;\n        this.state.target_blue_total = \"random\";\n        this.state.bank_systems = this.syncBankSystems(starting_layout);\n        this.state.eval_option=\"default_0\";\n        this.state.eval_variables=default_variables[0];\n        this.state.home_values = {};\n        this.state.balance_difference = null;\n        this.state.map_string = \"\";\n        this.state.balance_options = {\n            \"dont_move_wormholes\": false,\n            \"dont_move_anomalies\": false,\n            \"dont_move_empty\": false,\n        };\n        this.state.long_op = false;\n        if(this.props.state_to_import) {\n            let matching_options = this.getOptions().filter(option => option.index === this.props.state_to_import.selected_item);\n            let matching_evals = this.getEvalOptions().filter(option => option.index === this.props.state_to_import.eval_option);\n            if (matching_options.length > 0 && matching_evals.length > 0) {\n                this.state = this.props.state_to_import;\n            }\n        }\n    }\n\n    setMap(new_map, home_values=null, balance_difference=null, eval_var=null) {\n        if(new_map.isComplete()) {\n            if(home_values===null) {\n                if(eval_var===null) eval_var = this.state.eval_variables;\n                home_values = this.getHomeValues(new_map, eval_var);\n            }\n            if(balance_difference===null) {\n                balance_difference = this.getBalanceDifference(home_values);\n            }\n        } else {\n            home_values = {};\n            balance_difference = null;\n        }\n        this.setState({\n            \"map\": new_map,\n            \"bank_systems\": this.syncBankSystems(new_map),\n            \"home_values\": home_values,\n            \"balance_difference\": balance_difference,\n            \"map_string\": this.getMapString(new_map),\n        });\n    }\n\n    syncBankSystems(map) {\n        let bank_systems = new SystemBox([], []);\n        for(let system of this.system_box.systems) {\n            if(map===null || !map.containsSystem(system.id)) {\n                 bank_systems.systems.push(system);\n             }\n        }\n        bank_systems.systems.sort(compareByID);\n        return bank_systems;\n    }\n\n    setActiveBankSystem(system) {\n        this.setState({\"selected_bank_system\": system});\n    }\n\n    handleSelectChange() {\n        let new_value = this.getSelectValue();\n        let new_check = this.getSelectNewMapValue();\n        if(!(new_check === null)) {\n            if(this.getSelectNewMapType() === \"newc\") {\n                this.loadCustomLayout(new_check);\n            } else {\n                this.loadDefault(new_check);\n            }\n        } else {\n            let valIndex = parseInt(new_value);\n            this.setLayout(this.state.saved_data[valIndex], new_value);\n        }\n    }\n\n    handleEvalChange(value) {\n        let e_kind = value.split(\"_\")[0];\n        let e_index = value.split(\"_\")[1];\n        let e_var = null;\n        if(e_kind===\"default\") {\n            e_var = default_variables[e_index];\n        } else {\n            e_var = ls.get(this.props.eval_storage_key)[e_index];\n        }\n        this.setState({\n            \"eval_option\": value,\n            \"eval_variables\": e_var,\n        });\n        this.setMap(this.state.map, null, null, e_var);\n    }\n\n    getSelectNewMapValue(selected_item=null) {\n        let new_value = selected_item;\n        if(new_value===null) {\n            new_value = this.getSelectValue();\n        }\n        new_value = new_value.toString();\n        let new_check = new_value.split(\"_\");\n        if(\n            new_check.length===2\n            &&\n            (new_check[0]===\"new\"||new_check[0]===\"newc\")) {\n            return(parseInt(new_check[1]));\n        }\n        return null;\n    }\n\n    getSelectNewMapType() {\n        return this.getSelectValue().split(\"_\")[0];\n    }\n\n    getNewStringValue() {\n        if(!this.state) return \"new_0\";\n        if(this.state.selected_item.toString().substr(0, 3)===\"new\") return this.state.selected_item;\n        return \"new_0\";\n    }\n\n    isSelectNew(selected_item=null) {\n        return this.getSelectNewMapValue(selected_item)!==null;\n    }\n\n        handleFormatDisplayChange() {\n        let int_select = document.getElementById(\"select-system-display\");\n        this.setState({\"system_format\": parseInt(int_select.options[int_select.selectedIndex].value)});\n    }\n\n    onSelectedSystemDrag(event) {\n        this.setState({\n          draggedSystem: this.state.selected_bank_system,\n          message: \"\",\n        });\n    }\n\n    onSystemDrag(event, system) {\n        this.setState({\n          draggedSystem: system,\n          message: \"\",\n        });\n    }\n\n    onSystemDragEnd(event) {\n        this.setState({\n          draggedSystem: null,\n          message: \"\",\n        });\n    }\n\n    onSystemDropped(event, space_index) {\n        if(this.state.draggedSystem !== null) {\n            let new_map = this.state.map.makeCopy();\n            let selected_bank_system = this.state.selected_bank_system;\n            let is_changed = false;\n            if(space_index !== null) {\n                let space = new_map.spaces[space_index];\n                if(space.type === MAP_SPACE_TYPES.OPEN) {\n                    if(this.state.selected_bank_system !== null && this.state.selected_bank_system.id === this.state.draggedSystem.id) {\n                        selected_bank_system = null;\n                    }\n                    let old_space = new_map.getSpaceBySystemID(this.state.draggedSystem.id);\n                    if(old_space) {\n                        old_space.type = MAP_SPACE_TYPES.OPEN;\n                        old_space.system = null;\n                    }\n                    space.system = this.state.draggedSystem;\n                    space.type = MAP_SPACE_TYPES.SYSTEM;\n                    is_changed = true;\n                } else if(space.type === MAP_SPACE_TYPES.SYSTEM && !space.system.isMecatolRexSystem()) {\n                    let replaced_system = space.system;\n                    if (selected_bank_system !== null && selected_bank_system.id === this.state.draggedSystem.id) {\n                        selected_bank_system = replaced_system;\n                    } else {\n                        new_map.getSpaceBySystemID(this.state.draggedSystem.id).system = replaced_system;\n                    }\n                    space.system = this.state.draggedSystem;\n                    is_changed = true;\n                }\n            } else {\n                let old_space = new_map.getSpaceBySystemID(this.state.draggedSystem.id);\n                if(old_space) {\n                    selected_bank_system = old_space.system;\n                    old_space.type = MAP_SPACE_TYPES.OPEN;\n                    old_space.system = null;\n                    is_changed = true;\n                }\n            }\n\n            if(is_changed) {\n                this.setMap(new_map);\n                this.setState({\"selected_bank_system\": selected_bank_system,});\n            }\n            this.onSystemDragEnd(event);\n        }\n    }\n\n    handleIncludeWormholesChange() {\n        let isChecked = document.getElementById(\"require-all-wormholes\").checked;\n        this.setState(\n            {\"option_include_all_wormholes\": isChecked}\n        );\n    }\n\n    handlePairWormholesChange() {\n        let isChecked = document.getElementById(\"pair-wormholes\").checked;\n        this.setState(\n            {\"option_pair_wormholes\": isChecked}\n        );\n    }\n\n    handleTargetRatioChange() {\n        let int_select = document.getElementById(\"target-ratio\");\n        let int_value = int_select.options[int_select.selectedIndex].value\n        if(int_value !== \"random\") int_value = parseInt(int_value);\n        this.setState({\"target_blue_total\": int_value});\n    }\n\n    loadDefault(index) {\n        let toLoad = this.default_layouts[index];\n        this.setLayout(toLoad, \"new_\"+index);\n        let loadedTitle = toLoad.title;\n        let new_message = \"Blank map '\"+loadedTitle+\"' displayed.\";\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n        });\n    }\n\n    loadCustomLayout(index) {\n        let toLoad = ls.get(this.props.layout_storage_key)[index];\n        let new_map = this.getLayoutFromJSON(toLoad.data);\n        let loadedTitle = toLoad.title;\n        let new_message = \"Custom layout '\"+loadedTitle+\"' displayed.\";\n        this.setMap(new_map);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": \"newc_\"+index,\n        });\n    }\n\n    getNewLayout() {\n        let toLoad = this.default_layouts[0];\n        let new_map = this.getLayoutFromJSON(toLoad.data);\n        return new_map;\n    }\n\n    getMapString(map = this.state.map) {\n        let final_string = \"\";\n        let is_first = \"\";\n        for(let one_coor of map_string_order) {\n            let one_space = getObjFromCoord(one_coor, map.spaces);\n            if(one_space && one_space.type===MAP_SPACE_TYPES.SYSTEM && one_space.system) {\n                final_string+=is_first+one_space.system.id;\n            } else {\n                final_string+=is_first+\"0\";\n            }\n            is_first = \" \";\n        }\n        return final_string;\n    }\n\n    loadMapFromString(map_string = this.state.map_string) {\n        let new_map = this.state.map.makeCopy();\n        let new_bank = this.state.bank_systems;\n        let id_list = map_string.split(\" \");\n        for(let [index, one_id_string] of id_list.entries()) {\n            let one_id = parseInt(one_id_string);\n            if(one_id!==0) {\n                let one_system = new_bank.getSystemByID(one_id);\n                if(!one_system) {\n                    let one_system_space = new_map.getSpaceBySystemID(one_id);\n                    if(!one_system_space) {\n                        this.setState({\"message\":\"Space not found.\"});\n                        return;\n                    }\n                    one_system = one_system_space.system;\n                    one_system_space.type = MAP_SPACE_TYPES.OPEN;\n                    one_system_space.system = null;\n                    new_bank = this.syncBankSystems(new_map);\n                }\n                let new_space = getObjFromCoord(map_string_order[index], new_map.spaces);\n                if(!new_space) {\n                    this.setState({\"message\":\"Invalid: Too many systems listed.\"});\n                    return;\n                }\n                if(new_space.type!==MAP_SPACE_TYPES.OPEN && new_space.type!==MAP_SPACE_TYPES.SYSTEM) {\n                    this.setState({\"message\":\"Invalid: Placing system on improper space.\"});\n                    return;\n                }\n                if(new_space.type===MAP_SPACE_TYPES.SYSTEM && new_space.system.isMecatolRexSystem()) {\n                    this.setState({\"message\":\"Invalid: Systems on top of Mecatol Rex.\"});\n                    return;\n                }\n                if(new_space.type===MAP_SPACE_TYPES.OPEN) {\n                    new_space.type = MAP_SPACE_TYPES.SYSTEM;\n                }\n                new_space.system = one_system;\n                new_bank = this.syncBankSystems(new_map);\n            }\n        }\n        this.setState({\"message\": \"Map string loaded.\"});\n        this.setMap(new_map);\n    }\n\n    clickedSpace(index) {\n        let newState = Object.assign({},{\n            \"message\": \"\",\n            \"selected_bank_system\": this.state.selected_bank_system,\n        });\n        let new_map = this.state.map.makeCopy();\n        let clickedSpace = new_map.spaces[index];\n        let isChanged = false;\n\n        switch(clickedSpace.type) {\n            case MAP_SPACE_TYPES.OPEN:\n                if(newState.selected_bank_system !== null) {\n                    clickedSpace.system = newState.selected_bank_system;\n                    clickedSpace.type = MAP_SPACE_TYPES.SYSTEM;\n                    newState.selected_bank_system = null;\n                    isChanged = true;\n                }\n                break;\n            case MAP_SPACE_TYPES.SYSTEM:\n                if(!clickedSpace.system.isMecatolRexSystem()) {\n                    if(newState.selected_bank_system !== null) {\n                        let replacement_system = newState.selected_bank_system;\n                        newState.selected_bank_system = clickedSpace.system;\n                        clickedSpace.system = replacement_system;\n                        isChanged = true;\n                    } else {\n                        newState.selected_bank_system = clickedSpace.system;\n                        clickedSpace.system = null;\n                        clickedSpace.type = MAP_SPACE_TYPES.OPEN;\n                        isChanged = true;\n                    }\n                }\n                break;\n            default:\n                break;\n        }\n\n        if(isChanged) {\n            this.setState(newState);\n            this.setMap(new_map);\n        }\n\n    }\n\n    autoCompleteStart() {\n        if(!this.state.long_op) {\n            this.setState({\n                    \"message\": \"Thinking...\",\n                    \"long_op\": true,\n                },\n                () => {\n                    setTimeout(this.autoComplete.bind(this), 1);\n                }\n            );\n        }\n    }\n\n    autoComplete() {\n        let map_history = [{\n            \"map\": this.state.map.makeCopy(this.planet_box),\n            \"system_box\": this.state.bank_systems.makeCopy(),\n        }];\n        let gotamap = true;\n        while(!map_history[map_history.length-1].map.isComplete()) {\n            map_history = this._autoCompleteSteps(map_history, 1);\n            if(map_history===false) {\n                gotamap=false;\n                break;\n            }\n        }\n        let message = \"Unable to find a legal completion of this map.\";\n        if(gotamap) {\n            this.setMap(map_history[map_history.length-1].map);\n            message = \"Map completed randomly.\";\n            this.setState({\n                \"message\": message,\n                \"selected_bank_system\": null,\n                \"long_op\": false,\n            });\n        }\n    }\n\n    _autoCompleteSteps(current_history, steps_forward, current_try_total=0, backwards_length=null) {\n        if(backwards_length===null) backwards_length=current_history.length;\n        let starting_length = current_history.length;\n        for(let tries=current_try_total; tries<LOOPS_TO_TRY; tries++) {\n            let new_history = this._addOneSystem(current_history[current_history.length-1]);\n            if(!(new_history===false)) {\n                current_history.push(new_history);\n                if(current_history.length >= starting_length+steps_forward) {\n                    return current_history;\n                } else {\n                    return this._autoCompleteSteps(current_history, steps_forward-1, tries, backwards_length);\n                }\n            }\n        }\n        let steps_forward_add = 0;\n        while(current_history.length>=backwards_length) {\n            steps_forward_add++;\n            current_history.pop();\n        }\n        if(current_history.length===0) {\n            return false;\n        }\n        return this._autoCompleteSteps(\n            current_history,\n            steps_forward+steps_forward_add,\n            0,\n            backwards_length-1);\n    }\n\n    _addOneSystem(newest_history) {\n        let avail_sys_pool = [];\n        let system_box = newest_history.system_box;\n        let map = newest_history.map;\n        for(let one_sys of system_box.systems) {\n            let can_add = true;\n            if (\n                this.state.option_include_all_wormholes &&\n                one_sys.wormhole === null &&\n                system_box.getWormholeSystems().length >= map.getOpenSpacesTotal()\n            ) {\n                can_add = false;\n            } else {\n                if (this.state.option_pair_wormholes) {\n                    let total_needed = 0;\n                    let b_holes = system_box.getWormholeSystems(WORMHOLES.BETA).length;\n                    let a_holes = system_box.getWormholeSystems(WORMHOLES.ALPHA).length;\n                    if (b_holes === 1) total_needed++;\n                    if (a_holes === 1) total_needed++;\n                    if (\n                        total_needed >= map.getOpenSpacesTotal()\n                        &&\n                        (\n                            one_sys.wormhole === null\n                            ||\n                            (one_sys.wormhole !== WORMHOLES.BETA && a_holes !== 1)\n                            ||\n                            (one_sys.wormhole !== WORMHOLES.ALPHA && b_holes !== 1)\n                        )\n                    ) can_add = false;\n                }\n                if (can_add) avail_sys_pool.push(one_sys);\n            }\n        }\n        if(this.state.target_blue_total!==\"random\") {\n            let target_ratio = this.state.target_blue_total/(map.getPossibleSystemTotal()-this.state.target_blue_total);\n            let current_ratio = map.getBlueSystemTotal()/map.getRedSystemTotal();\n            if(target_ratio<current_ratio) {\n                let replacement_pool = [];\n                for(let one_sys of avail_sys_pool) {\n                    if(one_sys.isRed()) replacement_pool.push(one_sys);\n                }\n                if(replacement_pool.length>0) avail_sys_pool = replacement_pool;\n            } else if(target_ratio>current_ratio) {\n                let replacement_pool = [];\n                for(let one_sys of avail_sys_pool) {\n                    if(one_sys.isBlue()) replacement_pool.push(one_sys);\n                }\n                if(replacement_pool.length>0) avail_sys_pool = replacement_pool;\n            }\n        }\n        let chosen_system = avail_sys_pool[Math.floor(Math.random() * avail_sys_pool.length)];\n        let avail_space_pool = [];\n        for(let [index, one_space] of map.spaces.entries()) {\n            if(one_space.type===MAP_SPACE_TYPES.OPEN) avail_space_pool.push(index);\n        }\n        let chosen_space_index = avail_space_pool[Math.floor(Math.random() * avail_space_pool.length)];\n        let new_map = map.makeCopy();\n        new_map.spaces[chosen_space_index].type = MAP_SPACE_TYPES.SYSTEM;\n        new_map.spaces[chosen_space_index].system = chosen_system;\n        let new_box = this.syncBankSystems(new_map);\n\n        if(new_map.isLegal()) {\n            return {\n                \"map\": new_map,\n                \"system_box\": new_box,\n            }\n        } else {\n            return false;\n        }\n    }\n\n    getHomeValues(map = this.state.map, evars = this.state.eval_variables) {\n        let home_values = {};\n        for(let [index, one_space] of map.spaces.entries()) {\n            if(one_space.type === MAP_SPACE_TYPES.HOME) {\n                home_values[index.toString()] = map.getHomeValue(\n                    one_space, evars,\n                );\n            }\n        }\n        return home_values;\n    }\n\n    getBalanceDifference(home_values = this.state.home_values) {\n        let max = null;\n        let min = null;\n        for(let one_home_key in home_values) {\n            if(home_values.hasOwnProperty(one_home_key)) {\n                if (max === null || home_values[one_home_key] > max) max = home_values[one_home_key];\n                if (min === null || home_values[one_home_key] < min) min = home_values[one_home_key];\n            }\n        }\n        return max-min;\n    }\n\n    handleBalanceOptionChange(which_option) {\n        let options = Object.assign({}, this.state.balance_options);\n        options[which_option] = !options[which_option];\n        this.setState({\"balance_options\": options});\n    }\n\n    improveBalanceStart() {\n        if(!this.state.long_op) {\n            this.setState({\n                    \"message\": \"Thinking...\",\n                    \"long_op\": true,\n                },\n                ()=>{\n                    setTimeout(this.improveBalance.bind(this), 1);\n                }\n            );\n        }\n    }\n\n    improveBalance() {\n        return new Promise((resolve)=> {\n            let map = this.state.map;\n            let eligible_system_spaces = [];\n            for (let [index, one_space] of map.spaces.entries()) {\n                if (one_space.type === MAP_SPACE_TYPES.SYSTEM) {\n                    if (\n                        !one_space.system.isMecatolRexSystem()\n                        &&\n                        (!this.state.balance_options.dont_move_wormholes\n                            || one_space.system.wormhole === null)\n                        &&\n                        (!this.state.balance_options.dont_move_anomalies\n                            || one_space.system.anomaly === null)\n                        &&\n                        (!this.state.balance_options.dont_move_empty\n                            || one_space.system.wormhole !== null\n                            || one_space.system.anomaly !== null\n                            || one_space.system.planets.length > 0)\n                    ) eligible_system_spaces.push(index);\n                }\n            }\n            shuffle(eligible_system_spaces);\n            let found_it = false;\n            let new_map = null;\n            let new_hv = null;\n            let new_diff = null;\n            for(let a=0; a<eligible_system_spaces.length; a++) {\n                for(let b=0; b<eligible_system_spaces.length; b++) {\n                    if(a!==b) {\n                        new_map = this.state.map.makeCopy();\n                        let replaced_system = new_map.spaces[eligible_system_spaces[b]].system;\n                        new_map.spaces[eligible_system_spaces[b]].system = new_map.spaces[eligible_system_spaces[a]].system;\n                        new_map.spaces[eligible_system_spaces[a]].system = replaced_system;\n                        if (new_map.isLegal()) {\n                            new_hv = this.getHomeValues(new_map);\n                            new_diff = this.getBalanceDifference(new_hv);\n                            if (new_diff < this.state.balance_difference) {\n                                found_it = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if(found_it) break;\n            }\n            if (found_it) {\n                this.setMap(new_map, new_hv, new_diff);\n                this.setState({\n                    \"message\": \"Balance gap has been improved.\",\n                    \"long_op\": false,\n                });\n            } else {\n                this.setState({\n                    \"message\": \"Failed to improve balance gap.\",\n                    \"long_op\": false,\n                });\n            }\n        });\n    }\n\n    getEvalOptions() {\n        let options = [];\n        for(let [index, one_default] of default_variables.entries()) {\n            options.push({\n                \"index\": \"default_\"+index,\n                \"title\": one_default.title,\n            })\n        }\n        let evals = ls.get(this.props.eval_storage_key) || [];\n        for(let [index, one_saved] of evals.entries() || []) {\n            options.push({\n                \"index\": \"custom_\"+index.toString(),\n                \"title\": one_saved.title,\n            });\n        }\n        return options;\n    }\n\n    getOptions() {\n        let options = [];\n        for(let [index, one_default] of this.default_layouts.entries()) {\n            options.push({\n                \"index\": \"new_\"+index,\n                \"title\": \"New from default layout \"+one_default.title,\n            });\n        }\n        for(let [index, one_custom_l] of (ls.get(this.props.layout_storage_key) || []).entries()) {\n            if(this.getLayoutFromJSON(one_custom_l.data).areWarpsLogical()) {\n                options.push({\n                    \"index\": \"newc_\" + index,\n                    \"title\": \"New from custom layout \" + one_custom_l.title,\n                });\n            }\n        }\n        for(let [index, one_saved] of this.state.saved_data.entries()) {\n            options.push({\n                \"index\": index,\n                \"title\": one_saved.title\n            });\n        }\n        return options;\n    }\n\n    render() {\n        let is_legal = (<label className=\"button is-outlined is-small is-danger\">Illegal</label>);\n        if(this.state.map.isLegal()) is_legal = (<label className=\"button is-small is-outlined is-success\">Legal</label>);\n        let is_complete = (<label className=\"button is-outlined is-small is-danger\">Incomplete</label>);\n        if(this.state.map.isComplete()) is_complete = (<label className=\"button is-small is-outlined is-success\">Complete</label>);\n\n        let options = [];\n        for(let opt of this.getOptions()) {\n            options.push(\n                <option value={opt.index} key={opt.index}>{opt.title}</option>\n            );\n        }\n\n        let eval_options = [];\n        for(let opt of this.getEvalOptions()) {\n            eval_options.push(\n                <option value={opt.index} key={opt.index}>{opt.title}</option>\n            );\n        }\n\n        let auto_complete_ratios = [(<option value=\"random\" key=\"random\">B/R Target Ratio: Random</option>)];\n        let red_total = this.state.map.getRedSystemTotal();\n        let blue_total = this.state.map.getBlueSystemTotal();\n        let open_spaces = this.state.map.getOpenSpacesTotal();\n        let blue_avail = this.state.bank_systems.getBlueSystemTotal();\n        let red_avail = this.state.bank_systems.getRedSystemTotal();\n        for(let s=0; s<=open_spaces; s++) {\n            if(s<=blue_avail && open_spaces-s<=red_avail) {\n                auto_complete_ratios.push((\n                    <option\n                        value={s+blue_total}\n                        key={s+blue_total}\n                    >\n                        B/R Target Ratio: {s+blue_total}/{open_spaces-s+red_total}\n                    </option>\n                ));\n            }\n\n        }\n\n        let bal_diff =  null;\n        if(this.state.balance_difference!==null) {\n            bal_diff = (<p className=\"control\"><label className=\"label\">Balance Gap: {this.state.balance_difference}</label></p>);\n        }\n\n        let message = null;\n        if(this.state.message !== null && this.state.message!==\"\") {\n            message = (<blockquote>{this.state.message}</blockquote>);\n        }\n\n\n        return(\n            <div className=\"block\">\n                <h2 className=\"title is-size-4\">Map Editor</h2>\n                <div className=\"block map-lab-control-panel\">\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Saved/Defaults:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <span className=\"select is-small\">\n                                        <select id=\"layout-select\" value={this.state.selected_item}\n                                                onChange={() => this.handleSelectChange()}>\n                                            {options}\n                                        </select>\n                                    </span>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download All\"\n                                        getDownloadInfo={() => this.getAllLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button onClick={() => this.deleteAll()} className=\"button is-small\">Delete All\n                                    </button>\n                                </p>\n                                <JSONUploadButton\n                                    id=\"layout-json-upload\"\n                                    title=\"Upload\"\n                                    handleJSON={(data) => this.addLayoutsFromJSON(data)}\n                                    className=\"button is-small\"\n                                />\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Map Title:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <input\n                                        className=\"input is-small\"\n                                        type=\"text\"\n                                        id=\"layout-title\"\n                                        value={this.state.input_title}\n                                        onChange={function() {\n                                            this.setState(\n                                                {\n                                                    \"input_title\": document.getElementById(\"layout-title\").value,\n                                                    \"message\": \"\"\n                                                }\n                                            );\n                                        }.bind(this)}\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.saveCurrent()}>Save</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.handleSelectChange()}>Reset</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button\n                                        className=\"button is-small\"\n                                        onClick={()=>this.deleteCurrent()}\n                                        disabled={this.isSelectNew(this.state.selected_item)}\n                                    >Delete</button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download\"\n                                        className=\"button is-small\"\n                                        getDownloadInfo={()=>this.getCurrentLayoutJSONFileInfo()}\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">System Display:</label>\n                        </div>\n                        <div className=\"field-body\">\n                             <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <span className=\"select is-small\">\n                                        <select\n                                            id=\"select-system-display\"\n                                            value={this.state.system_format}\n                                            onChange={()=>this.handleFormatDisplayChange()}\n                                        >\n                                            <option value={SYSTEM_FORMATS.STREAMLINED}>Streamlined</option>\n                                            <option value={SYSTEM_FORMATS.STREAMLINED_WITH_NAME}>Streamlined + Name</option>\n                                            <option value={SYSTEM_FORMATS.COLORBLIND_FRIENDLY}>Colorblind Friendly</option>\n                                            <option value={SYSTEM_FORMATS.COLORBLIND_FRIENDLY_WITH_NAME}>Colorblind Friendly + Name</option>\n                                            <option value={SYSTEM_FORMATS.ID_ONLY}>ID Only</option>\n                                        </select>\n                                    </span>\n                                </p>\n                                <p className=\"control\">\n                                    <label className=\"label\">Map Status:</label>\n                                </p>\n                                <p className=\"control\">\n                                    {is_complete}\n                                </p>\n                                <p className=\"control\">\n                                    {is_legal}\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Map String:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control is-expanded\">\n                                    <input\n                                        className=\"input is-small\"\n                                        type=\"text\"\n                                        id=\"map-string\"\n                                        value={this.state.map_string}\n                                        onChange={function() {\n                                            this.setState(\n                                                {\n                                                    \"map_string\": document.getElementById(\"map-string\").value,\n                                                    \"message\": \"\"\n                                                }\n                                            );\n                                        }.bind(this)}\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.loadMapFromString()}>\n                                        Load From String\n                                    </button>\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"columns\">\n                    <div className=\"column is-one-fifth-desktop is-narrow-tablet map-controls-column\">\n                        <div className=\"block content for-message\">\n                            {message}\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Auto-Complete</label>\n                            <p className=\"control\">\n                                <input\n                                    id=\"require-all-wormholes\"\n                                    type=\"checkbox\"\n                                    checked={this.state.option_include_all_wormholes}\n                                    onChange={()=>this.handleIncludeWormholesChange()}\n                                />\n                                <label htmlFor=\"require-all-wormholes\"> Require Wormholes</label>\n                            </p>\n                            <p className=\"control\">\n                                <input\n                                    id=\"pair-wormholes\"\n                                    type=\"checkbox\"\n                                    checked={this.state.option_pair_wormholes}\n                                    onChange={()=>this.handlePairWormholesChange()}\n                                />\n                                <label htmlFor=\"pair-wormholes\"> Pair Wormholes</label>\n                            </p>\n                            <p className=\"control\">\n                                <span className=\"select is-small\">\n                                    <select\n                                        id=\"target-ratio\"\n                                        value={this.state.target_blue_total}\n                                        onChange={()=>this.handleTargetRatioChange()}\n                                    >\n                                        {auto_complete_ratios}\n                                    </select>\n                                </span>\n                            </p>\n                            <p className=\"control\">\n                                <button\n                                    onClick={()=>this.autoCompleteStart()}\n                                    disabled={\n                                        !this.state.map.isLegal()\n                                        || this.state.map.isComplete()\n                                        || this.state.long_op===true\n                                    }\n                                    className=\"button is-small is-primary\"\n                                >\n                                    Auto-Complete Map\n                                </button>\n                            </p>\n                        </div>\n                        <div className=\"field\">\n                            <label className=\"label\">Improve Balance</label>\n                            <p className=\"control\">\n                                <span className=\"select is-small\">\n                                    <select id=\"eval-select\" value={this.state.eval_option}\n                                            onChange={(event) => this.handleEvalChange(event.target.value)}>\n                                        {eval_options}\n                                    </select>\n                                </span>\n                            </p>\n                            {bal_diff}\n                            <p className=\"control\">\n                                <input\n                                    id=\"dont-move-wormholes\"\n                                    type=\"checkbox\"\n                                    checked={this.state.balance_options.dont_move_wormholes}\n                                    onChange={()=>this.handleBalanceOptionChange(\"dont_move_wormholes\")}\n                                />\n                                <label htmlFor=\"dont-move-wormholes\"> Lock Wormholes</label>\n                            </p>\n                            <p className=\"control\">\n                                <input\n                                    id=\"dont-move-anomalies\"\n                                    type=\"checkbox\"\n                                    checked={this.state.balance_options.dont_move_anomalies}\n                                    onChange={()=>this.handleBalanceOptionChange(\"dont_move_anomalies\")}\n                                />\n                                 <label htmlFor=\"dont-move-anomalies\"> Lock Anomalies</label>\n                            </p>\n                            <p className=\"control\">\n                                <input\n                                    id=\"dont-move-empty\"\n                                    type=\"checkbox\"\n                                    checked={this.state.balance_options.dont_move_empty}\n                                    onChange={()=>this.handleBalanceOptionChange(\"dont_move_empty\")}\n                                />\n                                <label htmlFor=\"dont-move-empty\"> Lock Empty Spaces</label>\n                            </p>\n                            <p className=\"control\">\n                                <button\n                                    onClick={()=>this.improveBalanceStart()}\n\n                                    disabled={!this.state.map.isComplete() || this.state.long_op===true}\n                                    className=\"button is-small is-primary\"\n                                >\n                                    Improve Balance\n                                </button>\n                            </p>\n                        </div>\n                        <SystemBankComponent\n                            systems={this.state.bank_systems}\n                            active_system={this.state.selected_bank_system}\n                            setActiveSystem={(system)=>this.setActiveBankSystem(system)}\n                            system_format={this.state.system_format}\n                            onSelectedSystemDrag={(event)=>this.onSelectedSystemDrag(event)}\n                            onSystemDragEnd={(event)=>this.onSystemDragEnd(event)}\n                            onSystemDropped={(event)=>this.onSystemDropped(event,null)}\n                            eval_variables={this.state.eval_variables}\n                        />\n                    </div>\n                    <div className=\"column map-container\">\n                        <MapComponent\n                            map={this.state.map}\n                            eval_variables={this.state.eval_variables}\n                            system_format={this.state.system_format}\n                            system_box={this.system_box}\n                            clickedSpace={(index)=>this.clickedSpace(index)}\n                            map_class=\"map-map\"\n                            systems_draggable={!this.state.long_op}\n                            onSystemDrag={(event, system)=>this.onSystemDrag(event, system)}\n                            onSystemDragEnd={(event)=>this.onSystemDragEnd(event)}\n                            onSystemDropped={(event, space)=>this.onSystemDropped(event, space)}\n                            home_values={this.state.home_values}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport $ from 'jquery';\n\nimport {warp_configs} from \"../data/warp_data\";\n\nimport {\n    Map,\n    MapSpace,\n    areCoordsInList,\n} from \"../map-logic\";\nimport {\n    SYSTEM_FORMATS,\n    MapComponent,\n    MAP_SPACE_TYPES,\n} from \"../map-components\";\nimport {\n    JSONDownloadButton,\n    JSONUploadButton,\n} from \"../download-helpers\";\nimport {BaseEditor} from \"./base-editor\";\nimport {compareByID} from \"../utilities\";\n\nwindow.jQuery = $;\n\nexport class LayoutEditor extends BaseEditor {\n    constructor(props) {\n        super(props);\n        this.state.map = this.getNewLayout();\n        this.state.show_warps = false;\n        this.state.show_wormholes = false;\n        this.state.show_anomalies = false;\n        if(this.props.state_to_import) {\n            let matching_options = this.getOptions().filter(option => option.index === this.props.state_to_import.selected_item);\n            if (matching_options.length > 0) {\n                this.state = this.props.state_to_import;\n            }\n        }\n    }\n\n    handleSelectChange() {\n        let new_value = this.getSelectValue();\n        if(new_value === \"new\") {\n            this.setNewLayout();\n        } else {\n            let valIndex = parseInt(new_value);\n            this.setLayout(this.state.saved_data[valIndex], new_value);\n        }\n    }\n\n    isSelectNew(selected_item=null) {\n        if(selected_item !== null) return selected_item===\"new\";\n        return this.getSelectValue() === \"new\";\n    }\n\n    getNewStringValue() {\n        return \"new\";\n    }\n\n    handleWarpChange() {\n        let isChecked = document.getElementById(\"warp-checkbox\").checked;\n        this.setState({\"show_warps\": isChecked});\n    }\n    handleWormholeChange() {\n        let isChecked = document.getElementById(\"wormhole-checkbox\").checked;\n        this.setState({\"show_wormholes\": isChecked});\n    }\n    handleAnomaliesChange() {\n        let isChecked = document.getElementById(\"anomalies-checkbox\").checked;\n        this.setState({\"show_anomalies\": isChecked});\n    }\n\n    clickedSpace(index) {\n        let new_map = this.state.map.makeCopy();\n        let new_message = \"\";\n        let clickedSpace = new_map.spaces[index];\n        let go_next_type = false;\n\n        switch(clickedSpace.type) {\n            case MAP_SPACE_TYPES.WARP:\n                if(!this.state.show_warps) {\n                    go_next_type=true;\n                    clickedSpace.warp_spaces = null;\n                } else {\n                    clickedSpace.warp_spaces = this._getNextWarp(new_map, clickedSpace);\n                    if(clickedSpace.warp_spaces===null) go_next_type=true;\n                }\n                break;\n            case MAP_SPACE_TYPES.SYSTEM:\n                clickedSpace.system = this._getNextSystem(new_map, clickedSpace);\n                if(clickedSpace.system===null) go_next_type = true;\n                break;\n            default:\n                go_next_type = true;\n                break;\n        }\n        if(go_next_type) {\n            let keep_going = true;\n            while(keep_going) {\n                clickedSpace.type++;\n                if(clickedSpace.type > MAP_SPACE_TYPES.WARP) {\n                    clickedSpace.type = 1;\n                }\n                switch(clickedSpace.type) {\n                    case MAP_SPACE_TYPES.SYSTEM:\n                        clickedSpace.system = this._getNextSystem(new_map, clickedSpace);\n                        if(clickedSpace.system!==null) keep_going = false;\n                        break;\n                    case MAP_SPACE_TYPES.WARP:\n                        if(this.state.show_warps){\n                            clickedSpace.warp_spaces = this._getNextWarp(new_map, clickedSpace);\n                            if(clickedSpace.warp_spaces!==null) keep_going=false;\n                        }\n                        break;\n                    default:\n                        keep_going = false;\n                        break;\n                }\n            }\n\n        }\n        if(!new_map.areWarpsLogical()) {\n            new_message = \"Warps do not yet connect to legal spaces. Layout not usable until warps connect.\";\n        }\n        this.setMap(new_map);\n        this.setState({\"message\": new_message,})\n    }\n\n    loadDefault(index) {\n        let toLoad = this.default_layouts[index];\n        let new_map = this.getLayoutFromJSON(toLoad.data);\n        let loadedTitle = toLoad.title;\n        let new_message = \"Default layout '\"+loadedTitle+\"' displayed.\";\n        this.setMap(new_map);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": this.getNewStringValue(),\n        });\n    }\n\n    getNewLayout() {\n        let starting_space = new MapSpace(0,0,0);\n        return new Map(true, starting_space, 3);\n    }\n\n    setNewLayout() {\n        let map = this.getNewLayout();\n        this.setMap(map);\n        this.setState({\"selected_item\": this.getNewStringValue(), \"message\": \"\", \"input_title\": \"\"});\n    }\n\n    _getNextWarp(map, space) {\n        let proposed_warp = space.warp_spaces;\n        if(proposed_warp === null) {\n            proposed_warp = 0;\n        } else {\n            proposed_warp++;\n        }\n        while(proposed_warp < warp_configs.length) {\n            let proposed_config = warp_configs[proposed_warp];\n            let is_legal = true;\n            for(let one_warp of proposed_config) {\n                for(let one_coord of one_warp) {\n                    if(!areCoordsInList(\n                        space.getWarpDirectionCoordinates(one_coord),\n                        map.spaces\n                    )) {\n                        is_legal = false;\n                        break;\n                    }\n                }\n            }\n            if(is_legal) {\n                break;\n            }\n            proposed_warp++;\n        }\n        if(proposed_warp >= warp_configs.length) {\n            return null;\n        }\n        return proposed_warp;\n    }\n\n    _getNextSystem(map, space) {\n        let eligible_systems = [];\n        let current_id = 0;\n        if(space.system!==null) current_id=space.system.id;\n        for(let one_system of this.system_box.systems) {\n            if(\n                map.getSpaceBySystemID(one_system.id)===null\n                &&\n                one_system.id>current_id\n                &&\n                (\n                    one_system.isMecatolRexSystem()\n                    ||\n                    (one_system.wormhole!==null && this.state.show_wormholes)\n                    ||\n                    (one_system.anomaly!==null && this.state.show_anomalies)\n                )\n            ) {\n                eligible_systems.push(one_system);\n            }\n        }\n        if(eligible_systems.length===0) return null;\n        eligible_systems.sort(compareByID);\n        return eligible_systems[0];\n    }\n\n    getOptions() {\n        let options = [{\n            \"index\": \"new\",\n            \"title\": \"New Layout\",\n        }];\n        for(let [index, one_saved] of this.state.saved_data.entries()) {\n            options.push({\n                \"index\": index.toString(),\n                \"title\": one_saved.title,\n            });\n        }\n        return options;\n    }\n\n    render() {\n        let options = [];\n        for(let opt of this.getOptions()) {\n            options.push(\n                <option value={opt.index} key={opt.index}>{opt.title}</option>\n            );\n        }\n        let defaults = [];\n        for(let [index, one_default] of this.default_layouts.entries()) {\n            defaults.push(\n                <p className=\"control\" key={index}>\n                    <button\n                        className=\"button is-small is-link\"\n                        onClick={()=>this.loadDefault(index)}\n                        key={\"default_layout_\"+index}\n                    >\n                        {one_default.title}\n                    </button>\n                </p>\n            )\n        }\n        let message = null;\n        if(this.state.message !== null && this.state.message!==\"\") {\n            message = (<blockquote>{this.state.message}</blockquote>);\n        }\n\n        return(\n            <div className=\"block\">\n                <h2 className=\"title is-size-4\">Layout Editor</h2>\n                <div className=\"block map-lab-control-panel\">\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Default Layouts:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                {defaults}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Saved Layouts:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <span className=\"select is-small\">\n                                        <select\n                                            id=\"layout-select\"\n                                            value={this.state.selected_item}\n                                            onChange={()=>this.handleSelectChange()}\n                                        >\n                                            {options}\n                                        </select>\n                                    </span>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download All\"\n                                        getDownloadInfo={()=>this.getAllLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button onClick={()=>this.deleteAll()} className=\"button is-small\">\n                                        Delete All\n                                    </button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONUploadButton\n                                        id=\"layout-json-upload\"\n                                        title=\"Upload\"\n                                        handleJSON={(data)=>this.addLayoutsFromJSON(data)}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Layout Title:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <input\n                                        type=\"text\"\n                                        id=\"layout-title\"\n                                        value={this.state.input_title}\n                                        className=\"input is-small\"\n                                        onChange={function() {\n                                            this.setState(\n                                                {\n                                                    \"input_title\": document.getElementById(\"layout-title\").value,\n                                                    \"message\": \"\"\n                                                }\n                                            );\n                                        }.bind(this)}\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.saveCurrent()}>Save</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.handleSelectChange()}>Reset</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button\n                                        onClick={()=>this.deleteCurrent()}\n                                        disabled={this.isSelectNew(this.state.selected_item)}\n                                        className=\"button is-small\"\n                                    >Delete</button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download\"\n                                        getDownloadInfo={()=>this.getCurrentLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"columns\">\n                        <div className=\"column is-one-fifth-desktop is-narrow-tablet map-controls-column\">\n                            <div className=\"block content for-message\">\n                                {message}\n                            </div>\n                            <div className=\"field\">\n                                <label className=\"label\">Click Cycle</label>\n                                <p className=\"control\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={this.state.show_warps}\n                                        onChange={()=>this.handleWarpChange()}\n                                        id=\"warp-checkbox\"\n                                    />\n                                    <label htmlFor=\"warp-checkbox\"> Include Warps in Click Cycle</label>\n                                </p>\n                                <p className=\"control\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={this.state.show_wormholes}\n                                        onChange={()=>this.handleWormholeChange()}\n                                        id=\"wormhole-checkbox\"\n                                    />\n                                    <label htmlFor=\"wormhole-checkbox\"> Include Womholes in Click Cycle</label>\n                                </p>\n                                <p className=\"control\">\n                                    <input\n                                        type=\"checkbox\"\n                                        checked={this.state.show_anomalies}\n                                        onChange={()=>this.handleAnomaliesChange()}\n                                        id=\"anomalies-checkbox\"\n                                    />\n                                    <label htmlFor=\"anomalies-checkbox\"> Include Anomalies in Click Cycle</label>\n                                </p>\n                            </div>\n                        </div>\n                        <div className=\"column map-container\">\n                            <MapComponent\n                                map={this.state.map}\n                                system_format={SYSTEM_FORMATS.STREAMLINED}\n                                system_box={this.system_box}\n                                clickedSpace={(index)=>this.clickedSpace(index)}\n                                map_class=\"layout-map\"\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport {PLANET_EVAL_STRATEGIES} from \"./map-logic\";\n\nexport const EVAL_ASPECTS = {\n    \"BASE_PLANET_MOD\": \"BASE_PLANET_MOD\",\n    \"RESOURCES_MULTIPLIER\": \"RESOURCES_MULTIPLIER\",\n    \"INFLUENCE_MULTIPLIER\": \"INFLUENCE_MULTIPLIER\",\n    \"TECH_MOD\": \"TECH_MOD\",\n    \"TECH_PROPULSION_MOD\": \"TECH_PROPULSION_MOD\",\n    \"TECH_WARFARE_MOD\": \"TECH_WARFARE_MOD\",\n    \"TECH_BIOTIC_MOD\": \"TECH_BIOTIC_MOD\",\n    \"TECH_CYBERNETIC_MOD\": \"TECH_CYBERNETIC_MOD\",\n    \"PLANET_STRATEGY\": \"PLANET_STRATEGY\",\n    \"NONZERO_RESOURCES_MOD\": \"NONZERO_RESOURCES_MOD\",\n    \"NONZERO_INFLUENCE_MOD\": \"NONZERO_INFLUENCE_MOD\",\n    \"TRAIT_CULTURAL_MOD\": \"TRAIT_CULTURAL_MOD\",\n    \"TRAIT_HAZARDOUS_MOD\": \"TRAIT_HAZARDOUS_MOD\",\n    \"TRAIT_INDUSTRIAL_MOD\": \"TRAIT_INDUSTRIAL_MOD\",\n    \"SINGLE_PLANET_MOD\": \"SINGLE_PLANET_MOD\",\n    \"MULTI_PLANET_MOD\": \"MULTI_PLANET_MOD\",\n    \"MATCHING_PLANETS_MOD\": \"MATCHING_PLANETS_MOD\",\n    \"NONMATCHING_PLANETS_MOD\": \"NONMATCHING_PLANETS_MOD\",\n    \"MECATOL_REX_SYS_MOD\": \"MECATOL_REX_SYS_MOD\",\n    \"DISTANCE_MOD_BASE\": \"DISTANCE_MOD_BASE\",\n    \"DISTANCE_MOD_PLANET\": \"DISTANCE_MOD_PLANET\",\n    \"DISTANCE_MOD_EMPTY\": \"DISTANCE_MOD_EMPTY\",\n    \"DISTANCE_MOD_SUPERNOVA\": \"DISTANCE_MOD_SUPERNOVA\",\n    \"DISTANCE_MOD_ASTEROID_FIELD\": \"DISTANCE_MOD_ASTEROID_FIELD\",\n    \"DISTANCE_MOD_GRAVITY_RIFT\": \"DISTANCE_MOD_GRAVITY_RIFT\",\n    \"DISTANCE_MOD_EMPTY_WORMHOLE\": \"DISTANCE_MOD_EMPTY_WORMHOLE\",\n    \"DISTANCE_MOD_PLANET_WORMHOLE\": \"DISTANCE_MOD_PLANET_WORMHOLE\",\n    \"DISTANCE_MOD_NEBULA\": \"DISTANCE_MOD_NEBULA\",\n    \"DISTANCE_MOD_ADJACENT_TO_OPPONENT\": \"DISTANCE_MOD_ADJACENT_TO_OPPONENT\",\n    \"DISTANCE_MULTIPLIER\": \"DISTANCE_MULTIPLIER\",\n};\n\n\nexport class EvaluatorLine extends React.Component {\n    render() {\n        let null_box = null;\n        let nul_val = this.props.num_value===false;\n        if(this.props.hasNullBox) {\n            null_box = (<p className=\"control checkbox-holder\"><input\n                    id={this.props.id+\"-null-box\"}\n                    type=\"checkbox\"\n                    checked={nul_val}\n                    onChange={event => this.props.onNullChange(event.target.checked)}\n            /> Impassable&nbsp;</p>);\n        }\n        let num_value = this.props.num_value;\n        if(num_value===false) num_value = \"\";\n        return(\n            <div className=\"field line-container\">\n                <div>\n                    <label className=\"label\">{this.props.label}:</label>\n                </div>\n                <div>\n                    <div className=\"field all-parts\">\n                        <div className=\"both-controls\">\n                            <div className=\"field is-horizontal input-only\">\n                                <div className=\"m\">\n                                    {this.props.m}\n                                </div>\n                                <p className=\"control\">\n                                     <input\n                                        type=\"number\"\n                                        id={this.props.id+\"-num\"}\n                                        value={num_value}\n                                        className=\"input is-small\"\n                                        onChange={event => this.props.onInputChange(parseInt(event.target.value))}\n                                        disabled={nul_val}\n                                    />\n                                </p>\n                            </div>\n                            {null_box}\n                        </div>\n                        <div className=\"info-container\">\n                            <i className=\"fas fa-info-circle\"></i>\n                            <div className=\"input-info\">\n                                {this.props.helperText}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nexport class EvaluatorForm extends React.Component {\n    reportChange(which_aspect, value, distance=null) {\n        this.props.changeHandler(which_aspect, value, distance);\n    }\n\n    reportNullChange(which_aspect, value) {\n        if(value===false) {\n            this.reportChange(which_aspect, 0);\n        } else {\n            this.reportChange(which_aspect, false);\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"block content evaluator-form\">\n                <div className=\"form-container\">\n                    <h3>Planet Evaluation</h3>\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Base Planet\"\n                        num_value={this.props.values.BASE_PLANET_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.BASE_PLANET_MOD, value)}\n                        helperText=\"Base value of each planet.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Resources\"\n                        num_value={this.props.values.RESOURCES_MULTIPLIER}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.RESOURCES_MULTIPLIER, value)}\n                        helperText=\"Number to multiply planet resource value by.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Influence\"\n                        num_value={this.props.values.INFLUENCE_MULTIPLIER}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.INFLUENCE_MULTIPLIER, value)}\n                        helperText=\"Number to multiply planet influence value by.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Tech\"\n                        num_value={this.props.values.TECH_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_MOD, value)}\n                        helperText=\"Number to add if the planet has a tech specialty.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Propulsion Tech\"\n                        num_value={this.props.values.TECH_PROPULSION_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_PROPULSION_MOD, value)}\n                        helperText=\"Number to add if the planet has a propulsion tech specialty.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Warfare Tech\"\n                        num_value={this.props.values.TECH_WARFARE_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_WARFARE_MOD, value)}\n                        helperText=\"Number to add if the planet has a warfare tech specialty.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Biotic Tech\"\n                        num_value={this.props.values.TECH_BIOTIC_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_BIOTIC_MOD, value)}\n                        helperText=\"Number to add if the planet has a biotic tech specialty.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Cybernetic Tech\"\n                        num_value={this.props.values.TECH_CYBERNETIC_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TECH_CYBERNETIC_MOD, value)}\n                        helperText=\"Number to add if the planet has a cybernetic tech specialty.\"\n                    />\n                    <div className=\"field line-container\">\n                        <div>\n                            <label className=\"label\">Planet Eval Strategy:</label>\n                        </div>\n                        <div>\n                            <div className=\"field is-grouped\">\n                                <div className=\"field is-horizontal\">\n                                    <p className=\"control\">\n                                        <span className=\"select is-small\">\n                                            <select\n                                                value={this.props.values.PLANET_STRATEGY}\n                                                onChange={event => this.reportChange(\n                                                    EVAL_ASPECTS.PLANET_STRATEGY, event.target.value\n                                                )}\n                                            >\n                                                <option\n                                                    value={PLANET_EVAL_STRATEGIES.SUM}\n                                                    key={PLANET_EVAL_STRATEGIES.SUM}\n                                                >\n                                                    Sum\n                                                </option>\n                                                <option\n                                                    value={PLANET_EVAL_STRATEGIES.GREATEST}\n                                                    key={PLANET_EVAL_STRATEGIES.GREATEST}\n                                                >\n                                                    Greatest\n                                                </option>\n                                                <option\n                                                    value={PLANET_EVAL_STRATEGIES.GREATEST_PLUS_TECH}\n                                                    key={PLANET_EVAL_STRATEGIES.GREATEST_PLUS_TECH}\n                                                >\n                                                    Greatest+Tech\n                                                </option>\n                                            </select>\n                                        </span>\n                                    </p>\n                                </div>\n                                <div className=\"info-container\">\n                                    <i className=\"fas fa-info-circle\"></i>\n                                    <div className=\"input-info\">\n                                        How to combine resources, influence and tech values above.\n                                        <br /><br />Sum = R+I+T\n                                        <br /><br />Greatest = largest of R/I/T\n                                        <br /><br />Greatest+Tech = largest of R/I, +T\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Resources > 0\"\n                        num_value={this.props.values.NONZERO_RESOURCES_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.NONZERO_RESOURCES_MOD, value)}\n                        helperText=\"Number to add if planet resource value is greater than 0.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Influence > 0\"\n                        num_value={this.props.values.NONZERO_INFLUENCE_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.NONZERO_INFLUENCE_MOD, value)}\n                        helperText=\"Number to add if planet influence value is greater than 0.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Cultural Trait\"\n                        num_value={this.props.values.TRAIT_CULTURAL_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TRAIT_CULTURAL_MOD, value)}\n                        helperText=\"Number to add if the planet has the cultural trait.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Hazardous Trait\"\n                        num_value={this.props.values.TRAIT_HAZARDOUS_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TRAIT_HAZARDOUS_MOD, value)}\n                        helperText=\"Number to add if the planet has the hazardous trait.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Industrial Trait\"\n                        num_value={this.props.values.TRAIT_INDUSTRIAL_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.TRAIT_INDUSTRIAL_MOD, value)}\n                        helperText=\"Number to add if the planet has the industrial trait.\"\n                    />\n                    <h3>System Evaluation</h3>\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Single Planet System\"\n                        num_value={this.props.values.SINGLE_PLANET_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.SINGLE_PLANET_MOD, value)}\n                        helperText=\"Number to add if the system has exactly 1 planet.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Multi-planet System\"\n                        num_value={this.props.values.MULTI_PLANET_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.MULTI_PLANET_MOD, value)}\n                        helperText=\"Number to add if the system has more than 1 planet.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Matching Planets System\"\n                        num_value={this.props.values.MATCHING_PLANETS_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.MATCHING_PLANETS_MOD, value)}\n                        helperText=\"Number to add if a system has 2 planets with the same trait.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Non-Matching Planets System\"\n                        num_value={this.props.values.NONMATCHING_PLANETS_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.NONMATCHING_PLANETS_MOD, value)}\n                        helperText=\"Number to add if a system has 2 planets with different traits.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Mecatol Rex System\"\n                        num_value={this.props.values.MECATOL_REX_SYS_MOD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.MECATOL_REX_SYS_MOD, value)}\n                        helperText=\"Number to add if the system contains Mecatol Rex.\"\n                    />\n                    <h3>Home to System Distance Evaluation</h3>\n                    <h4>Distance Measurement</h4>\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Distance Base\"\n                        num_value={this.props.values.DISTANCE_MOD_BASE}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_BASE, value)}\n                        helperText=\"Base distance unit for every space moved through.\"\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Planet\"\n                        num_value={this.props.values.DISTANCE_MOD_PLANET}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_PLANET, value)}\n                        helperText=\"Distance modifier for systems with 1 or more planets.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_PLANET, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Empty Space\"\n                        num_value={this.props.values.DISTANCE_MOD_EMPTY}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_EMPTY, value)}\n                        helperText=\"Distance modifier for empty space systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_EMPTY, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Supernova\"\n                        num_value={this.props.values.DISTANCE_MOD_SUPERNOVA}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_SUPERNOVA, value)}\n                        helperText=\"Distance modifier for supernova systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_SUPERNOVA, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Asteroid\"\n                        num_value={this.props.values.DISTANCE_MOD_ASTEROID_FIELD}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_ASTEROID_FIELD, value)}\n                        helperText=\"Distance modifier for asteroid field systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_ASTEROID_FIELD, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Gravity Rift\"\n                        num_value={this.props.values.DISTANCE_MOD_GRAVITY_RIFT}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_GRAVITY_RIFT, value)}\n                        helperText=\"Distance modifier for gravity rift systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_GRAVITY_RIFT, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Wormholes Without Planets\"\n                        num_value={this.props.values.DISTANCE_MOD_EMPTY_WORMHOLE}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_EMPTY_WORMHOLE, value)}\n                        helperText=\"Distance modifier for wormhole systems without planets.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_EMPTY_WORMHOLE, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Wormholes With a Planet\"\n                        num_value={this.props.values.DISTANCE_MOD_PLANET_WORMHOLE}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_PLANET_WORMHOLE, value)}\n                        helperText=\"Distance modifier for wormhole systems with a planet.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_PLANET_WORMHOLE, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Nebula\"\n                        num_value={this.props.values.DISTANCE_MOD_NEBULA}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_NEBULA, value)}\n                        helperText=\"Distance modifier for nebula systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_NEBULA, value)}\n                    />\n                    <EvaluatorLine\n                        m=\"+\"\n                        label=\"Moving Through Opponent Adj Sys\"\n                        num_value={this.props.values.DISTANCE_MOD_ADJACENT_TO_OPPONENT}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MOD_ADJACENT_TO_OPPONENT, value)}\n                        helperText=\"Distance modifier for systems adjacent to your opponents' home systems.\"\n                        hasNullBox\n                        onNullChange={value => this.reportNullChange(EVAL_ASPECTS.DISTANCE_MOD_ADJACENT_TO_OPPONENT, value)}\n                    />\n                    <h4>System Value Multipliers Based on Modified Distance</h4>\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of <1\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[0]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 0)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 0 or less.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 1\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[1]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 1)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 1.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 2\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[2]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 2)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 2.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 3\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[3]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 3)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 3.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 4\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[4]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 4)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 4.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 5\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[5]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 5)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 5.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 6\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[6]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 6)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 6.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 7\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[7]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 7)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 7.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 8\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[8]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 8)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 8.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 9\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[9]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 9)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is 9.\"\n                    />\n                    <EvaluatorLine\n                        m=\"x\"\n                        label=\"Modified Distance of 10+\"\n                        num_value={this.props.values.DISTANCE_MULTIPLIER[10]}\n                        onInputChange={value => this.reportChange(EVAL_ASPECTS.DISTANCE_MULTIPLIER, value, 10)}\n                        helperText=\"Number to multiply the system's value by when the modified distance to the home planet is greater than 9.\"\n                    />\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport $ from 'jquery';\n\nimport {\n    JSONDownloadButton,\n    JSONUploadButton,\n} from \"../download-helpers\";\nimport {BaseEditor} from \"./base-editor\";\nimport {EvaluatorForm, EVAL_ASPECTS} from '../evaluator-components';\nimport default_evaluators from '../data/default_evaluators.json';\nimport ls from \"local-storage\";\n\nwindow.jQuery = $;\n\nexport class EvaluationEditor extends BaseEditor {\n    constructor(props) {\n        super(props);\n        this.default_evaluators = default_evaluators;\n        this.state.values = Object.assign({}, this.default_evaluators[0].data);\n        if(this.props.state_to_import) {\n            let matching_options = this.getOptions().filter(option => option.index === this.props.state_to_import.selected_item);\n            if (matching_options.length > 0) {\n                this.state = this.props.state_to_import;\n            }\n        }\n    }\n\n    changeHandler(which_aspect, value, distance) {\n        let new_values = Object.assign(this.state.values);\n        if(which_aspect === EVAL_ASPECTS.DISTANCE_MULTIPLIER) {\n            new_values[which_aspect][distance] = value;\n        } else {\n            new_values[which_aspect] = value;\n        }\n        this.setState({\"values\": new_values});\n    }\n\n    setValues(new_values) {\n        this.setState({\n            \"values\": Object.assign({}, new_values),\n        });\n    }\n\n    isSelectNew(selected_item=null) {\n        if(selected_item !== null) return selected_item===\"new\";\n        return this.getSelectValue() === \"new\";\n    }\n\n    getNewStringValue() {\n        return \"new\";\n    }\n\n    handleSelectChange() {\n        let new_value = this.getSelectValue();\n        if(new_value === \"new\") {\n            this.setValuesFull(Object.assign({}, this.default_evaluators[0]));\n        } else {\n            let valIndex = parseInt(new_value);\n            this.setValuesFull(Object.assign({}, this.state.saved_data[valIndex]), new_value);\n        }\n    }\n\n    setValuesFull(data, selected_item=\"new\", new_eval=null) {\n        if(new_eval===null) new_eval = data.data;\n        let loadedTitle = data.title;\n        let new_message = this.props.subject+\" '\"+loadedTitle+\"' displayed.\";\n        this.setValues(new_eval);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": selected_item.toString(),\n        });\n    }\n\n    getCurrentLayoutJSON() {\n        let l_title = \"Untitled Evaluator\";\n        if($('#layout-title').val() !== '') {\n            l_title = $('#layout-title').val();\n        }\n        return {\n            \"title\": l_title,\n            \"data\": Object.assign(this.state.values),\n        };\n    }\n\n    deleteAll() {\n        ls.remove(this.props.storage_key);\n        this.setValuesFull(Object.assign({}, this.default_evaluators[0]));\n        this.setState({\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n            \"selected_item\": this.getNewStringValue(),\n            \"input_title\": \"\",\n            \"message\": \"All saved \"+this.props.subject_plural+\" have been deleted.\",\n        });\n    }\n\n    deleteCurrent() {\n        let currentIndex = this.getSelectValue();\n        let saved_data = Object.assign([], this.state.saved_data);\n        let toDel = saved_data.splice(parseInt(currentIndex), 1)[0];\n        ls.set(this.props.storage_key, saved_data);\n        this.setValuesFull(Object.assign(this.default_evaluators[0]));\n        this.setState({\n            \"input_title\": \"\",\n            \"selected_item\": this.getNewStringValue(),\n            \"message\": this.props.subject+\" '\"+toDel.title+\"' deleted.\",\n            \"saved_data\": ls.get(this.props.storage_key) || [],\n        });\n    }\n\n    loadDefault(index) {\n        let toLoad = this.default_evaluators[index];\n        let new_values = toLoad.data;\n        let loadedTitle = toLoad.title;\n        let new_message = \"Default evaluator '\"+loadedTitle+\"' displayed.\";\n        this.setValues(new_values);\n        this.setState({\n            \"message\": new_message,\n            \"input_title\": loadedTitle,\n            \"selected_item\": this.getNewStringValue(),\n        });\n    }\n\n    addLayoutsFromJSON(data) {\n        if(data.length>0) {\n            let saved_data = Object.assign([], this.state.saved_data);\n            for(let dataToSave of data) {\n                saved_data.push(dataToSave);\n            }\n            ls.set(this.props.storage_key, saved_data);\n            this.setValuesFull(saved_data[saved_data.length-1], saved_data.length-1);\n            this.setState({\n                \"saved_data\": ls.get(this.props.storage_key) || [],\n                \"message\": \"Evaluators loaded.\",\n                \"selected_item\": saved_data.length-1,\n                \"input_title\": saved_data[saved_data.length-1].title,\n            });\n        } else {\n            this.setState({\"message\": \"There were no \"+this.props.subject_plural+\" to load.\"})\n        }\n    }\n\n    getOptions() {\n        let options = [{\n            \"index\": \"new\",\n            \"title\": \"New Evaluator\",\n        }];\n        for(let [index, one_saved] of this.state.saved_data.entries()) {\n            options.push({\n                \"index\": index.toString(),\n                \"title\": one_saved.title,\n            });\n        }\n        return options;\n    }\n\n    render() {\n        let options = [];\n        for(let opt of this.getOptions()) {\n            options.push(\n                <option value={opt.index} key={opt.index}>{opt.title}</option>\n            );\n        }\n        let defaults = [];\n        for(let [index, one_default] of this.default_evaluators.entries()) {\n            defaults.push(\n                <p className=\"control\" key={index}>\n                    <button\n                        className=\"button is-small is-link\"\n                        onClick={()=>this.loadDefault(index)}\n                        key={\"default_layout_\"+index}\n                    >\n                        {one_default.title}\n                    </button>\n                </p>\n            )\n        }\n        let message = null;\n        if(this.state.message !== null && this.state.message!==\"\") {\n            message = (<blockquote>{this.state.message}</blockquote>);\n        }\n\n        return(\n            <div className=\"block\">\n                <h2 className=\"title is-size-4\">Evaluator Editor</h2>\n                <div className=\"block map-lab-control-panel\">\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Default Evaluators:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                {defaults}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Saved Evaluators:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <span className=\"select is-small\">\n                                        <select\n                                            id=\"layout-select\"\n                                            value={this.state.selected_item}\n                                            onChange={()=>this.handleSelectChange()}\n                                        >\n                                            {options}\n                                        </select>\n                                    </span>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download All\"\n                                        getDownloadInfo={()=>this.getAllLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button onClick={()=>this.deleteAll()} className=\"button is-small\">\n                                        Delete All\n                                    </button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONUploadButton\n                                        id=\"layout-json-upload\"\n                                        title=\"Upload\"\n                                        handleJSON={(data)=>this.addLayoutsFromJSON(data)}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"field is-horizontal\">\n                        <div className=\"field-label\">\n                            <label className=\"label\">Evaluator Title:</label>\n                        </div>\n                        <div className=\"field-body\">\n                            <div className=\"field is-grouped is-grouped-multiline\">\n                                <p className=\"control\">\n                                    <input\n                                        type=\"text\"\n                                        id=\"layout-title\"\n                                        value={this.state.input_title}\n                                        className=\"input is-small\"\n                                        onChange={function() {\n                                            this.setState(\n                                                {\n                                                    \"input_title\": document.getElementById(\"layout-title\").value,\n                                                    \"message\": \"\"\n                                                }\n                                            );\n                                        }.bind(this)}\n                                    />\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.saveCurrent()}>Save</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button className=\"button is-small\" onClick={()=>this.handleSelectChange()}>Reset</button>\n                                </p>\n                                <p className=\"control\">\n                                    <button\n                                        onClick={()=>this.deleteCurrent()}\n                                        disabled={this.isSelectNew(this.state.selected_item)}\n                                        className=\"button is-small\"\n                                    >Delete</button>\n                                </p>\n                                <p className=\"control\">\n                                    <JSONDownloadButton\n                                        title=\"Download\"\n                                        getDownloadInfo={()=>this.getCurrentLayoutJSONFileInfo()}\n                                        className=\"button is-small\"\n                                    />\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"block content for-message\">\n                        {message}\n                    </div>\n                </div>\n                <EvaluatorForm\n                    values={this.state.values}\n                    changeHandler={(which_aspect, value, distance)=>this.changeHandler(which_aspect, value, distance)}\n                />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\n\nimport \"./styles/map-lab.scss\";\nimport {MapEditor} from \"./editors/map-editor\";\nimport {LayoutEditor} from './editors/layout-editor';\nimport {EvaluationEditor} from \"./editors/eval-editor\";\n\nimport $ from \"jquery\";\nwindow.jQuery = $;\n\nconst SCREENS = {\n    \"MAP_EDITOR\": 1,\n    \"LAYOUT_EDITOR\": 2,\n    \"SYSTEM_EVALUATOR\": 3,\n    \"INSTRUCTIONS\": 4,\n};\n\nfunction toggleMenu() {\n    $(\".navbar-burger\").toggleClass(\"is-active\");\n    $(\".navbar-menu\").toggleClass(\"is-active\");\n}\n\n\nclass MapLabNavigator extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            \"active_screen\": SCREENS.MAP_EDITOR,\n        };\n        this.map_state = null;\n        this.layout_state = null;\n        this.eval_state = null;\n    }\n\n    storeState(which_screen, state) {\n        switch(which_screen) {\n            case SCREENS.SYSTEM_EVALUATOR:\n                this.eval_state = state;\n                break;\n            case SCREENS.LAYOUT_EDITOR:\n                this.layout_state = state;\n                break;\n            case SCREENS.MAP_EDITOR:\n                this.map_state = state;\n                console.log(state);\n                break;\n            default:\n                break;\n        }\n    }\n\n    changeScreen(new_screen) {\n        this.setState({\n            \"active_screen\": new_screen,\n        });\n    }\n\n    render() {\n        let screen_return = null;\n        switch(this.state.active_screen) {\n            case SCREENS.MAP_EDITOR:\n                screen_return = (\n                    <MapEditor\n                        storage_key=\"maps\"\n                        subject=\"Map\"\n                        subject_plural=\"Maps\"\n                        layout_storage_key=\"layouts\"\n                        eval_storage_key=\"evaluators\"\n                        state_to_import={this.map_state}\n                        sendStateBeforeDeath={(state_to_store)=>this.storeState(SCREENS.MAP_EDITOR, state_to_store)}\n                    />\n                );\n                break;\n            case SCREENS.LAYOUT_EDITOR:\n                screen_return = (\n                    <LayoutEditor\n                        storage_key=\"layouts\"\n                        subject=\"Layout\"\n                        subject_plural=\"Layouts\"\n                        state_to_import={this.layout_state}\n                        sendStateBeforeDeath={(state_to_store)=>this.storeState(SCREENS.LAYOUT_EDITOR, state_to_store)}\n                    />\n                );\n                break;\n            case SCREENS.SYSTEM_EVALUATOR:\n                screen_return = (\n                    <EvaluationEditor\n                        storage_key=\"evaluators\"\n                        subject=\"Evaluator\"\n                        subject_plural=\"Evaluators\"\n                        state_to_import={this.eval_state}\n                        sendStateBeforeDeath={(state_to_store)=>this.storeState(SCREENS.SYSTEM_EVALUATOR, state_to_store)}\n                    />\n                );\n                break;\n            case SCREENS.INSTRUCTIONS:\n                screen_return = (\n                    <div className=\"block content\">\n                        <h2>Getting Started</h2>\n                        <h3>Basic Map Generation</h3>\n                        <ol>\n                            <li>Go to the Map Editor screen (the default screen).</li>\n                            <li>If you don't want the default 6-player map, choose another \"new from\" option under\n                                \"Saved/Defaults\"</li>\n                            <li>Scroll down and click \"Auto-Complete Map.\"</li>\n                            <li>Click the \"Improve Balance\" button a few times to make the map more fair according to the.\n                                current Evaluator algorithm. The number in each Home System represents the strength of that\n                                home system's position based on the quality of and distance from systems on the map.</li>\n                            <li>Change \"Simple Slice\" to another evaluator to get a different view on the\n                                strength of the home system positions.</li>\n                            <li>Drag and drop systems to switch them with each other as you wish (On mobile, click a\n                                system to send it back to the system bank, or click a space to put the currently selected\n                                system bank system in that space.)</li>\n                            <li>Name your map via \"Map Title\" and click \"Save\" at the top. Saves in your browser only.\n                                Can be loaded in the future from the \"Saved/Defaults\" dropdown.</li>\n                            <li>Copy the Map String or download the json file to share.</li>\n                        </ol>\n                        <h3>Building a Map From Scratch</h3>\n                        <ol>\n                            <li>Choose the layout you want to build from the \"Saved/Defaults\" dropdown.</li>\n                            <li>Scroll down to the System Bank and select the first system you want to place. (Suggestion:\n                                Start with the wormholes.) The system appears under the dropdown.</li>\n                            <li>Drag the system to the space where you want it. (On mobile, just touch the space.)</li>\n                            <li>Continue the above steps until you've placed all the systems you care about.</li>\n                            <li>Choose the desired blue/red target ratio from the dropdown under Auto-Complete.</li>\n                            <li>Click Auto-Complete to fill out the rest of the map.</li>\n                            <li>Change the \"Simple Slice\" dropdown to another evaluator algorithm for different perspectives\n                                on the strength of each home space's position.</li>\n                            <li>Use the \"Lock\" checkboxes to fix certain spaces in place, before clicking \"Improve Balance\"\n                                a few times to improve the overall system allocation.</li>\n                            <li>Don't forget to save your map at the top early and often.</li>\n                        </ol>\n                        <h3>Creating New Layouts</h3>\n                        <ol>\n                            <li>Choose \"Layout Editor\" at the top.</li>\n                            <li>Click spaces to cycle through \"open\" (open for systems), home system, closed, and\n                                Mecatol Rex.</li>\n                            <li>Use the checkboxes under \"Click Cycle\" to also include things like warp (hyperlane)\n                                hexes, anomalies, and/or wormholes.</li>\n                            <li>Be sure to name and save your layout. Once saved, as long as it doesn't have nonsensical\n                                warp hexes, it will appear in the map editor under its own \"New from...\" option.</li>\n                        </ol>\n                        <h3>Customize an Evaluator</h3>\n                        <ol>\n                            <li>Use the \"System Evaluator\" menu item at the top to make your own custom evaluations of\n                                planets, systems, and home system positions.</li>\n                            <li>The variables under \"Planet Evaluation\" define how much a planet is worth.</li>\n                            <li>The variables under \"System Evaluation\" define how much a system is worth by taken\n                                their planet values and adding these modifiers.</li>\n                            <li>The variables under \"Home to System Distance Evaluation\" define how far (in an abstracted\n                                sense) a home system is to each system, based on the kinds of hexes it has to go through\n                                to get there. \"Distance Base\" is added for every hex that must be moved into. The other modifiers,\n                                if set ot 1 or more, will increase that base hex number for those types of hexes. (Example:\n                                The path to a 2-planet system is through empty space, then through a nebula. In the evaluator, Base Hex\n                                is set to 2, empty space is set to 0, and nebula is set to 1. Therefore, it is 2 distance\n                                to move into the empty space, 3 to move into the nebula, and 2 to move into the 2-planet system.\n                                Therefore, the total modified distance is 7, even though the physical distance is only\n                                three hexes.)</li>\n                            <li>The variables under \"System Value Multipliers Based on Distance\" define what to multiply\n                                a system's worth by, based on the modified distance it is from a home system. Any modified\n                                distance above 10 is not eligible to hold value to the home system.</li>\n                            <li>Don't forget to save your evaluator. Then, it will show up uner the \"Improve Balance\" dropdown\n                                on the Map Editor screen.</li>\n                        </ol>\n                    </div>\n                );\n                break;\n            default:\n                break;\n        }\n\n\n        return(\n            <div className=\"block map-lab\">\n                <nav className=\"navbar is-primary\">\n                    <div className=\"navbar-brand\">\n                        <h1 className=\"title is-3 is-marginless\">TI4 Map Lab</h1>\n                        {/*eslint-disable-next-line*/}\n                        <a\n                            role=\"button\"\n                            className=\"navbar-burger is-\"\n                            aria-label=\"menu\"\n                            aria-expanded=\"false\"\n                            onClick={()=>toggleMenu()}\n                        >\n                            <span aria-hidden=\"true\"></span>\n                            <span aria-hidden=\"true\"></span>\n                            <span aria-hidden=\"true\"></span>\n                        </a>\n                    </div>\n                    <div className=\"navbar-menu\">\n                        <div className=\"navbar-start\">\n                        </div>\n                            <div className=\"navbar-end\">\n                                {/*eslint-disable-next-line*/}\n                                <a role=\"button\"\n                                    disabled={this.state.active_screen===SCREENS.INSTRUCTIONS}\n                                    onClick={()=>this.changeScreen(SCREENS.INSTRUCTIONS)}\n                                    className=\"navbar-item\"\n                                >\n                                    Instructions\n                                </a>\n                                {/*eslint-disable-next-line*/}\n                                <a role=\"button\"\n                                    disabled={this.state.active_screen===SCREENS.MAP_EDITOR}\n                                    onClick={()=>this.changeScreen(SCREENS.MAP_EDITOR)}\n                                    className=\"navbar-item\"\n                                >\n                                    Map Editor\n                                </a>\n                                {/*eslint-disable-next-line*/}\n                                <a role=\"button\"\n                                    disabled={this.state.active_screen===SCREENS.LAYOUT_EDITOR}\n                                    onClick={()=>this.changeScreen(SCREENS.LAYOUT_EDITOR)}\n                                    className=\"navbar-item\"\n                                >\n                                    Layout Editor\n                                </a>\n                                {/*eslint-disable-next-line*/}\n                                <a role=\"button\"\n                                    disabled={this.state.active_screen===SCREENS.SYSTEM_EVALUATOR}\n                                    onClick={()=>this.changeScreen(SCREENS.SYSTEM_EVALUATOR)}\n                                    className=\"navbar-item\"\n                                >\n                                    System Evaluator\n                                </a>\n                        </div>\n                    </div>\n                </nav>\n                {screen_return}\n            </div>\n        );\n    }\n\n}\n\nReactDOM.render(\n    <MapLabNavigator />,\n    document.getElementById('root')\n);\n\nserviceWorker.register();\n"],"sourceRoot":""}